2024-07-24 20:57:57,706:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 20:57:57,706:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 20:57:57,706:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 20:57:57,706:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:00:53,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:00:53,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:00:53,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:00:53,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:00:53,980:INFO:PyCaret RegressionExperiment
2024-07-24 21:00:53,980:INFO:Logging name: reg-default-name
2024-07-24 21:00:53,980:INFO:ML Usecase: MLUsecase.REGRESSION
2024-07-24 21:00:53,980:INFO:version 3.3.1
2024-07-24 21:00:53,980:INFO:Initializing setup()
2024-07-24 21:00:53,980:INFO:self.USI: 805c
2024-07-24 21:00:53,980:INFO:self._variable_keys: {'log_plots_param', '_ml_usecase', 'gpu_n_jobs_param', 'USI', 'logging_param', 'X_train', 'y', 'data', 'transform_target_param', '_available_plots', 'pipeline', 'target_param', 'y_test', 'gpu_param', 'fold_generator', 'X_test', 'seed', 'y_train', 'fold_groups_param', 'memory', 'n_jobs_param', 'X', 'html_param', 'exp_name_log', 'idx', 'exp_id', 'fold_shuffle_param'}
2024-07-24 21:00:53,980:INFO:Checking environment
2024-07-24 21:00:53,980:INFO:python_version: 3.11.8
2024-07-24 21:00:53,980:INFO:python_build: ('main', 'Feb 16 2024 20:49:36')
2024-07-24 21:00:53,980:INFO:machine: arm64
2024-07-24 21:00:53,993:INFO:platform: macOS-14.5-arm64-arm-64bit
2024-07-24 21:00:53,994:INFO:Memory: svmem(total=17179869184, available=4772773888, percent=72.2, used=6518161408, free=32555008, active=4750065664, inactive=4627922944, wired=1768095744)
2024-07-24 21:00:53,994:INFO:Physical Core: 8
2024-07-24 21:00:53,994:INFO:Logical Core: 8
2024-07-24 21:00:53,994:INFO:Checking libraries
2024-07-24 21:00:53,994:INFO:System:
2024-07-24 21:00:53,994:INFO:    python: 3.11.8 | packaged by conda-forge | (main, Feb 16 2024, 20:49:36) [Clang 16.0.6 ]
2024-07-24 21:00:53,994:INFO:executable: /opt/anaconda3/bin/python
2024-07-24 21:00:53,994:INFO:   machine: macOS-14.5-arm64-arm-64bit
2024-07-24 21:00:53,994:INFO:PyCaret required dependencies:
2024-07-24 21:00:54,247:INFO:                 pip: 23.3.1
2024-07-24 21:00:54,247:INFO:          setuptools: 68.2.2
2024-07-24 21:00:54,247:INFO:             pycaret: 3.3.1
2024-07-24 21:00:54,247:INFO:             IPython: 8.20.0
2024-07-24 21:00:54,247:INFO:          ipywidgets: 7.6.5
2024-07-24 21:00:54,247:INFO:                tqdm: 4.65.0
2024-07-24 21:00:54,247:INFO:               numpy: 1.26.4
2024-07-24 21:00:54,247:INFO:              pandas: 2.1.4
2024-07-24 21:00:54,247:INFO:              jinja2: 3.1.3
2024-07-24 21:00:54,247:INFO:               scipy: 1.11.4
2024-07-24 21:00:54,247:INFO:              joblib: 1.2.0
2024-07-24 21:00:54,247:INFO:             sklearn: 1.4.2
2024-07-24 21:00:54,247:INFO:                pyod: 1.1.3
2024-07-24 21:00:54,247:INFO:            imblearn: 0.12.2
2024-07-24 21:00:54,247:INFO:   category_encoders: 2.6.3
2024-07-24 21:00:54,247:INFO:            lightgbm: 4.3.0
2024-07-24 21:00:54,247:INFO:               numba: 0.59.0
2024-07-24 21:00:54,247:INFO:            requests: 2.31.0
2024-07-24 21:00:54,247:INFO:          matplotlib: 3.7.5
2024-07-24 21:00:54,247:INFO:          scikitplot: 0.3.7
2024-07-24 21:00:54,247:INFO:         yellowbrick: 1.5
2024-07-24 21:00:54,247:INFO:              plotly: 5.22.0
2024-07-24 21:00:54,247:INFO:    plotly-resampler: Not installed
2024-07-24 21:00:54,247:INFO:             kaleido: 0.2.1
2024-07-24 21:00:54,247:INFO:           schemdraw: 0.15
2024-07-24 21:00:54,247:INFO:         statsmodels: 0.14.0
2024-07-24 21:00:54,247:INFO:              sktime: 0.26.0
2024-07-24 21:00:54,247:INFO:               tbats: 1.1.3
2024-07-24 21:00:54,247:INFO:            pmdarima: 2.0.4
2024-07-24 21:00:54,247:INFO:              psutil: 5.9.0
2024-07-24 21:00:54,247:INFO:          markupsafe: 2.1.3
2024-07-24 21:00:54,247:INFO:             pickle5: Not installed
2024-07-24 21:00:54,247:INFO:         cloudpickle: 2.2.1
2024-07-24 21:00:54,247:INFO:         deprecation: 2.1.0
2024-07-24 21:00:54,247:INFO:              xxhash: 3.4.1
2024-07-24 21:00:54,247:INFO:           wurlitzer: 3.0.2
2024-07-24 21:00:54,247:INFO:PyCaret optional dependencies:
2024-07-24 21:00:54,263:INFO:                shap: 0.46.0
2024-07-24 21:00:54,263:INFO:           interpret: Not installed
2024-07-24 21:00:54,263:INFO:                umap: 0.5.5
2024-07-24 21:00:54,263:INFO:     ydata_profiling: Not installed
2024-07-24 21:00:54,263:INFO:  explainerdashboard: Not installed
2024-07-24 21:00:54,263:INFO:             autoviz: Not installed
2024-07-24 21:00:54,263:INFO:           fairlearn: Not installed
2024-07-24 21:00:54,263:INFO:          deepchecks: Not installed
2024-07-24 21:00:54,263:INFO:             xgboost: 2.1.0
2024-07-24 21:00:54,263:INFO:            catboost: Not installed
2024-07-24 21:00:54,263:INFO:              kmodes: Not installed
2024-07-24 21:00:54,263:INFO:             mlxtend: Not installed
2024-07-24 21:00:54,263:INFO:       statsforecast: Not installed
2024-07-24 21:00:54,263:INFO:        tune_sklearn: Not installed
2024-07-24 21:00:54,263:INFO:                 ray: Not installed
2024-07-24 21:00:54,263:INFO:            hyperopt: Not installed
2024-07-24 21:00:54,263:INFO:              optuna: Not installed
2024-07-24 21:00:54,263:INFO:               skopt: Not installed
2024-07-24 21:00:54,263:INFO:              mlflow: 2.13.0
2024-07-24 21:00:54,263:INFO:              gradio: Not installed
2024-07-24 21:00:54,263:INFO:             fastapi: Not installed
2024-07-24 21:00:54,263:INFO:             uvicorn: Not installed
2024-07-24 21:00:54,263:INFO:              m2cgen: Not installed
2024-07-24 21:00:54,263:INFO:           evidently: Not installed
2024-07-24 21:00:54,263:INFO:               fugue: Not installed
2024-07-24 21:00:54,263:INFO:           streamlit: 1.30.0
2024-07-24 21:00:54,263:INFO:             prophet: Not installed
2024-07-24 21:00:54,263:INFO:None
2024-07-24 21:00:54,263:INFO:Set up data.
2024-07-24 21:00:54,266:INFO:Set up folding strategy.
2024-07-24 21:00:54,267:INFO:Set up train/test split.
2024-07-24 21:00:54,270:INFO:Set up index.
2024-07-24 21:00:54,270:INFO:Assigning column types.
2024-07-24 21:00:54,271:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 21:00:54,271:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,273:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,275:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,298:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,315:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,315:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,316:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,318:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,319:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,342:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,359:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,359:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,360:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-07-24 21:00:54,362:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,364:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,386:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,404:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,404:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,407:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,409:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,431:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,448:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,451:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,452:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-07-24 21:00:54,456:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,478:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,496:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,496:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,501:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,523:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,541:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,541:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,542:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-07-24 21:00:54,567:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,584:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,585:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,611:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,629:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,629:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,630:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 21:00:54,656:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,673:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,700:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,717:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,718:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-07-24 21:00:54,762:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,807:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,809:INFO:Preparing preprocessing pipeline...
2024-07-24 21:00:54,809:INFO:Set up simple imputation.
2024-07-24 21:00:54,810:INFO:Set up encoding of ordinal features.
2024-07-24 21:00:54,811:INFO:Set up encoding of categorical features.
2024-07-24 21:00:54,811:INFO:Set up polynomial features.
2024-07-24 21:00:54,811:INFO:Set up removing multicollinearity.
2024-07-24 21:00:54,811:INFO:Set up column transformation.
2024-07-24 21:00:54,811:INFO:Set up feature normalization.
2024-07-24 21:00:54,901:INFO:Finished creating preprocessing pipeline.
2024-07-24 21:00:54,911:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gp/fp0z7sz5063d4vng25fzsxcm0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(stra...
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-07-24 21:00:54,911:INFO:Creating final display dataframe.
2024-07-24 21:00:55,183:INFO:Setup _display_container:                     Description             Value
0                    Session id                 9
1                        Target             price
2                   Target type        Regression
3           Original data shape         (3405, 9)
4        Transformed data shape       (3405, 435)
5   Transformed train set shape       (2383, 435)
6    Transformed test set shape       (1022, 435)
7              Numeric features                 4
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15          Polynomial features              True
16            Polynomial degree                 2
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.9
19               Transformation              True
20        Transformation method       yeo-johnson
21                    Normalize              True
22             Normalize method            zscore
23               Fold Generator             KFold
24                  Fold Number                10
25                     CPU Jobs                -1
26                      Use GPU             False
27               Log Experiment             False
28              Experiment Name  reg-default-name
29                          USI              805c
2024-07-24 21:00:55,228:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:55,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:55,275:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:55,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:55,276:INFO:setup() successfully completed in 1.31s...............
2024-07-24 21:00:55,276:INFO:Initializing compare_models()
2024-07-24 21:00:55,276:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-07-24 21:00:55,276:INFO:Checking exceptions
2024-07-24 21:00:55,276:INFO:Preparing display monitor
2024-07-24 21:00:55,286:INFO:Initializing Linear Regression
2024-07-24 21:00:55,286:INFO:Total runtime is 2.400080362955729e-06 minutes
2024-07-24 21:00:55,286:INFO:SubProcess create_model() called ==================================
2024-07-24 21:00:55,286:INFO:Initializing create_model()
2024-07-24 21:00:55,286:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:00:55,286:INFO:Checking exceptions
2024-07-24 21:00:55,286:INFO:Importing libraries
2024-07-24 21:00:55,286:INFO:Copying training dataset
2024-07-24 21:00:55,288:INFO:Defining folds
2024-07-24 21:00:55,288:INFO:Declaring metric variables
2024-07-24 21:00:55,288:INFO:Importing untrained model
2024-07-24 21:00:55,288:INFO:Linear Regression Imported successfully
2024-07-24 21:00:55,289:INFO:Starting cross validation
2024-07-24 21:00:55,293:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:01,255:INFO:Calculating mean and std
2024-07-24 21:01:01,256:INFO:Creating metrics dataframe
2024-07-24 21:01:01,257:INFO:Uploading results into container
2024-07-24 21:01:01,258:INFO:Uploading model into container now
2024-07-24 21:01:01,258:INFO:_master_model_container: 1
2024-07-24 21:01:01,258:INFO:_display_container: 2
2024-07-24 21:01:01,258:INFO:LinearRegression(n_jobs=-1)
2024-07-24 21:01:01,258:INFO:create_model() successfully completed......................................
2024-07-24 21:01:01,349:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:01,349:INFO:Creating metrics dataframe
2024-07-24 21:01:01,350:INFO:Initializing Lasso Regression
2024-07-24 21:01:01,350:INFO:Total runtime is 0.10107971429824829 minutes
2024-07-24 21:01:01,351:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:01,351:INFO:Initializing create_model()
2024-07-24 21:01:01,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:01,351:INFO:Checking exceptions
2024-07-24 21:01:01,351:INFO:Importing libraries
2024-07-24 21:01:01,351:INFO:Copying training dataset
2024-07-24 21:01:01,352:INFO:Defining folds
2024-07-24 21:01:01,352:INFO:Declaring metric variables
2024-07-24 21:01:01,352:INFO:Importing untrained model
2024-07-24 21:01:01,352:INFO:Lasso Regression Imported successfully
2024-07-24 21:01:01,352:INFO:Starting cross validation
2024-07-24 21:01:01,354:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:03,247:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.273e+12, tolerance: 4.747e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,277:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.722e+12, tolerance: 4.605e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,284:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.391e+12, tolerance: 4.810e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,284:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.281e+12, tolerance: 4.722e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,313:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.203e+12, tolerance: 4.685e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,346:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.337e+12, tolerance: 4.745e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,362:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.441e+12, tolerance: 4.839e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,380:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.739e+12, tolerance: 4.765e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:04,711:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.429e+12, tolerance: 4.786e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:04,738:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.393e+12, tolerance: 4.891e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:04,762:INFO:Calculating mean and std
2024-07-24 21:01:04,762:INFO:Creating metrics dataframe
2024-07-24 21:01:04,763:INFO:Uploading results into container
2024-07-24 21:01:04,763:INFO:Uploading model into container now
2024-07-24 21:01:04,763:INFO:_master_model_container: 2
2024-07-24 21:01:04,763:INFO:_display_container: 2
2024-07-24 21:01:04,763:INFO:Lasso(random_state=9)
2024-07-24 21:01:04,764:INFO:create_model() successfully completed......................................
2024-07-24 21:01:04,811:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:04,811:INFO:Creating metrics dataframe
2024-07-24 21:01:04,812:INFO:Initializing Ridge Regression
2024-07-24 21:01:04,812:INFO:Total runtime is 0.15877833366394042 minutes
2024-07-24 21:01:04,812:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:04,813:INFO:Initializing create_model()
2024-07-24 21:01:04,813:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:04,813:INFO:Checking exceptions
2024-07-24 21:01:04,813:INFO:Importing libraries
2024-07-24 21:01:04,813:INFO:Copying training dataset
2024-07-24 21:01:04,814:INFO:Defining folds
2024-07-24 21:01:04,814:INFO:Declaring metric variables
2024-07-24 21:01:04,814:INFO:Importing untrained model
2024-07-24 21:01:04,814:INFO:Ridge Regression Imported successfully
2024-07-24 21:01:04,814:INFO:Starting cross validation
2024-07-24 21:01:04,815:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:07,632:INFO:Calculating mean and std
2024-07-24 21:01:07,632:INFO:Creating metrics dataframe
2024-07-24 21:01:07,633:INFO:Uploading results into container
2024-07-24 21:01:07,633:INFO:Uploading model into container now
2024-07-24 21:01:07,633:INFO:_master_model_container: 3
2024-07-24 21:01:07,633:INFO:_display_container: 2
2024-07-24 21:01:07,633:INFO:Ridge(random_state=9)
2024-07-24 21:01:07,633:INFO:create_model() successfully completed......................................
2024-07-24 21:01:07,684:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:07,684:INFO:Creating metrics dataframe
2024-07-24 21:01:07,685:INFO:Initializing Elastic Net
2024-07-24 21:01:07,685:INFO:Total runtime is 0.20665841499964396 minutes
2024-07-24 21:01:07,685:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:07,685:INFO:Initializing create_model()
2024-07-24 21:01:07,685:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:07,685:INFO:Checking exceptions
2024-07-24 21:01:07,685:INFO:Importing libraries
2024-07-24 21:01:07,685:INFO:Copying training dataset
2024-07-24 21:01:07,687:INFO:Defining folds
2024-07-24 21:01:07,687:INFO:Declaring metric variables
2024-07-24 21:01:07,687:INFO:Importing untrained model
2024-07-24 21:01:07,687:INFO:Elastic Net Imported successfully
2024-07-24 21:01:07,687:INFO:Starting cross validation
2024-07-24 21:01:07,688:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:10,503:INFO:Calculating mean and std
2024-07-24 21:01:10,503:INFO:Creating metrics dataframe
2024-07-24 21:01:10,504:INFO:Uploading results into container
2024-07-24 21:01:10,504:INFO:Uploading model into container now
2024-07-24 21:01:10,504:INFO:_master_model_container: 4
2024-07-24 21:01:10,504:INFO:_display_container: 2
2024-07-24 21:01:10,504:INFO:ElasticNet(random_state=9)
2024-07-24 21:01:10,504:INFO:create_model() successfully completed......................................
2024-07-24 21:01:10,552:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:10,552:INFO:Creating metrics dataframe
2024-07-24 21:01:10,553:INFO:Initializing Least Angle Regression
2024-07-24 21:01:10,553:INFO:Total runtime is 0.2544510801633199 minutes
2024-07-24 21:01:10,553:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:10,553:INFO:Initializing create_model()
2024-07-24 21:01:10,553:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:10,553:INFO:Checking exceptions
2024-07-24 21:01:10,553:INFO:Importing libraries
2024-07-24 21:01:10,553:INFO:Copying training dataset
2024-07-24 21:01:10,554:INFO:Defining folds
2024-07-24 21:01:10,554:INFO:Declaring metric variables
2024-07-24 21:01:10,554:INFO:Importing untrained model
2024-07-24 21:01:10,554:INFO:Least Angle Regression Imported successfully
2024-07-24 21:01:10,554:INFO:Starting cross validation
2024-07-24 21:01:10,556:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:13,456:INFO:Calculating mean and std
2024-07-24 21:01:13,457:INFO:Creating metrics dataframe
2024-07-24 21:01:13,458:INFO:Uploading results into container
2024-07-24 21:01:13,458:INFO:Uploading model into container now
2024-07-24 21:01:13,458:INFO:_master_model_container: 5
2024-07-24 21:01:13,458:INFO:_display_container: 2
2024-07-24 21:01:13,458:INFO:Lars(random_state=9)
2024-07-24 21:01:13,458:INFO:create_model() successfully completed......................................
2024-07-24 21:01:13,505:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:13,506:INFO:Creating metrics dataframe
2024-07-24 21:01:13,506:INFO:Initializing Lasso Least Angle Regression
2024-07-24 21:01:13,506:INFO:Total runtime is 0.30367987950642905 minutes
2024-07-24 21:01:13,507:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:13,507:INFO:Initializing create_model()
2024-07-24 21:01:13,507:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:13,507:INFO:Checking exceptions
2024-07-24 21:01:13,507:INFO:Importing libraries
2024-07-24 21:01:13,507:INFO:Copying training dataset
2024-07-24 21:01:13,508:INFO:Defining folds
2024-07-24 21:01:13,508:INFO:Declaring metric variables
2024-07-24 21:01:13,508:INFO:Importing untrained model
2024-07-24 21:01:13,508:INFO:Lasso Least Angle Regression Imported successfully
2024-07-24 21:01:13,508:INFO:Starting cross validation
2024-07-24 21:01:13,509:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:16,342:INFO:Calculating mean and std
2024-07-24 21:01:16,342:INFO:Creating metrics dataframe
2024-07-24 21:01:16,343:INFO:Uploading results into container
2024-07-24 21:01:16,343:INFO:Uploading model into container now
2024-07-24 21:01:16,343:INFO:_master_model_container: 6
2024-07-24 21:01:16,343:INFO:_display_container: 2
2024-07-24 21:01:16,343:INFO:LassoLars(random_state=9)
2024-07-24 21:01:16,343:INFO:create_model() successfully completed......................................
2024-07-24 21:01:16,390:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:16,390:INFO:Creating metrics dataframe
2024-07-24 21:01:16,391:INFO:Initializing Orthogonal Matching Pursuit
2024-07-24 21:01:16,391:INFO:Total runtime is 0.35176276365915937 minutes
2024-07-24 21:01:16,391:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:16,392:INFO:Initializing create_model()
2024-07-24 21:01:16,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:16,392:INFO:Checking exceptions
2024-07-24 21:01:16,392:INFO:Importing libraries
2024-07-24 21:01:16,392:INFO:Copying training dataset
2024-07-24 21:01:16,393:INFO:Defining folds
2024-07-24 21:01:16,393:INFO:Declaring metric variables
2024-07-24 21:01:16,393:INFO:Importing untrained model
2024-07-24 21:01:16,393:INFO:Orthogonal Matching Pursuit Imported successfully
2024-07-24 21:01:16,393:INFO:Starting cross validation
2024-07-24 21:01:16,394:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:19,196:INFO:Calculating mean and std
2024-07-24 21:01:19,196:INFO:Creating metrics dataframe
2024-07-24 21:01:19,197:INFO:Uploading results into container
2024-07-24 21:01:19,197:INFO:Uploading model into container now
2024-07-24 21:01:19,197:INFO:_master_model_container: 7
2024-07-24 21:01:19,197:INFO:_display_container: 2
2024-07-24 21:01:19,198:INFO:OrthogonalMatchingPursuit()
2024-07-24 21:01:19,198:INFO:create_model() successfully completed......................................
2024-07-24 21:01:19,278:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:19,278:INFO:Creating metrics dataframe
2024-07-24 21:01:19,279:INFO:Initializing Bayesian Ridge
2024-07-24 21:01:19,279:INFO:Total runtime is 0.39988428354263306 minutes
2024-07-24 21:01:19,279:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:19,279:INFO:Initializing create_model()
2024-07-24 21:01:19,279:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:19,279:INFO:Checking exceptions
2024-07-24 21:01:19,279:INFO:Importing libraries
2024-07-24 21:01:19,279:INFO:Copying training dataset
2024-07-24 21:01:19,280:INFO:Defining folds
2024-07-24 21:01:19,280:INFO:Declaring metric variables
2024-07-24 21:01:19,280:INFO:Importing untrained model
2024-07-24 21:01:19,280:INFO:Bayesian Ridge Imported successfully
2024-07-24 21:01:19,280:INFO:Starting cross validation
2024-07-24 21:01:19,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:22,318:INFO:Calculating mean and std
2024-07-24 21:01:22,319:INFO:Creating metrics dataframe
2024-07-24 21:01:22,320:INFO:Uploading results into container
2024-07-24 21:01:22,320:INFO:Uploading model into container now
2024-07-24 21:01:22,320:INFO:_master_model_container: 8
2024-07-24 21:01:22,320:INFO:_display_container: 2
2024-07-24 21:01:22,321:INFO:BayesianRidge()
2024-07-24 21:01:22,321:INFO:create_model() successfully completed......................................
2024-07-24 21:01:22,370:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:22,370:INFO:Creating metrics dataframe
2024-07-24 21:01:22,372:INFO:Initializing Passive Aggressive Regressor
2024-07-24 21:01:22,372:INFO:Total runtime is 0.45143106778462727 minutes
2024-07-24 21:01:22,372:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:22,372:INFO:Initializing create_model()
2024-07-24 21:01:22,372:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:22,372:INFO:Checking exceptions
2024-07-24 21:01:22,372:INFO:Importing libraries
2024-07-24 21:01:22,372:INFO:Copying training dataset
2024-07-24 21:01:22,373:INFO:Defining folds
2024-07-24 21:01:22,373:INFO:Declaring metric variables
2024-07-24 21:01:22,373:INFO:Importing untrained model
2024-07-24 21:01:22,373:INFO:Passive Aggressive Regressor Imported successfully
2024-07-24 21:01:22,373:INFO:Starting cross validation
2024-07-24 21:01:22,375:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:28,542:INFO:Calculating mean and std
2024-07-24 21:01:28,543:INFO:Creating metrics dataframe
2024-07-24 21:01:28,544:INFO:Uploading results into container
2024-07-24 21:01:28,544:INFO:Uploading model into container now
2024-07-24 21:01:28,544:INFO:_master_model_container: 9
2024-07-24 21:01:28,544:INFO:_display_container: 2
2024-07-24 21:01:28,545:INFO:PassiveAggressiveRegressor(random_state=9)
2024-07-24 21:01:28,545:INFO:create_model() successfully completed......................................
2024-07-24 21:01:28,597:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:28,597:INFO:Creating metrics dataframe
2024-07-24 21:01:28,598:INFO:Initializing Huber Regressor
2024-07-24 21:01:28,598:INFO:Total runtime is 0.5552014350891114 minutes
2024-07-24 21:01:28,598:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:28,598:INFO:Initializing create_model()
2024-07-24 21:01:28,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:28,598:INFO:Checking exceptions
2024-07-24 21:01:28,598:INFO:Importing libraries
2024-07-24 21:01:28,598:INFO:Copying training dataset
2024-07-24 21:01:28,599:INFO:Defining folds
2024-07-24 21:01:28,599:INFO:Declaring metric variables
2024-07-24 21:01:28,599:INFO:Importing untrained model
2024-07-24 21:01:28,599:INFO:Huber Regressor Imported successfully
2024-07-24 21:01:28,599:INFO:Starting cross validation
2024-07-24 21:01:28,601:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:30,789:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:30,837:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:30,861:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:30,979:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:30,987:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:31,004:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:31,025:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:31,026:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:32,286:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:32,328:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:32,351:INFO:Calculating mean and std
2024-07-24 21:01:32,351:INFO:Creating metrics dataframe
2024-07-24 21:01:32,352:INFO:Uploading results into container
2024-07-24 21:01:32,352:INFO:Uploading model into container now
2024-07-24 21:01:32,352:INFO:_master_model_container: 10
2024-07-24 21:01:32,352:INFO:_display_container: 2
2024-07-24 21:01:32,352:INFO:HuberRegressor()
2024-07-24 21:01:32,352:INFO:create_model() successfully completed......................................
2024-07-24 21:01:32,401:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:32,401:INFO:Creating metrics dataframe
2024-07-24 21:01:32,402:INFO:Initializing K Neighbors Regressor
2024-07-24 21:01:32,402:INFO:Total runtime is 0.6186015168825786 minutes
2024-07-24 21:01:32,402:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:32,402:INFO:Initializing create_model()
2024-07-24 21:01:32,402:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:32,402:INFO:Checking exceptions
2024-07-24 21:01:32,402:INFO:Importing libraries
2024-07-24 21:01:32,402:INFO:Copying training dataset
2024-07-24 21:01:32,403:INFO:Defining folds
2024-07-24 21:01:32,403:INFO:Declaring metric variables
2024-07-24 21:01:32,403:INFO:Importing untrained model
2024-07-24 21:01:32,403:INFO:K Neighbors Regressor Imported successfully
2024-07-24 21:01:32,403:INFO:Starting cross validation
2024-07-24 21:01:32,405:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:35,210:INFO:Calculating mean and std
2024-07-24 21:01:35,211:INFO:Creating metrics dataframe
2024-07-24 21:01:35,211:INFO:Uploading results into container
2024-07-24 21:01:35,212:INFO:Uploading model into container now
2024-07-24 21:01:35,212:INFO:_master_model_container: 11
2024-07-24 21:01:35,212:INFO:_display_container: 2
2024-07-24 21:01:35,212:INFO:KNeighborsRegressor(n_jobs=-1)
2024-07-24 21:01:35,212:INFO:create_model() successfully completed......................................
2024-07-24 21:01:35,293:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:35,293:INFO:Creating metrics dataframe
2024-07-24 21:01:35,294:INFO:Initializing Decision Tree Regressor
2024-07-24 21:01:35,294:INFO:Total runtime is 0.6668078978856405 minutes
2024-07-24 21:01:35,294:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:35,294:INFO:Initializing create_model()
2024-07-24 21:01:35,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:35,294:INFO:Checking exceptions
2024-07-24 21:01:35,294:INFO:Importing libraries
2024-07-24 21:01:35,294:INFO:Copying training dataset
2024-07-24 21:01:35,296:INFO:Defining folds
2024-07-24 21:01:35,296:INFO:Declaring metric variables
2024-07-24 21:01:35,296:INFO:Importing untrained model
2024-07-24 21:01:35,296:INFO:Decision Tree Regressor Imported successfully
2024-07-24 21:01:35,296:INFO:Starting cross validation
2024-07-24 21:01:35,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:38,136:INFO:Calculating mean and std
2024-07-24 21:01:38,136:INFO:Creating metrics dataframe
2024-07-24 21:01:38,137:INFO:Uploading results into container
2024-07-24 21:01:38,137:INFO:Uploading model into container now
2024-07-24 21:01:38,137:INFO:_master_model_container: 12
2024-07-24 21:01:38,137:INFO:_display_container: 2
2024-07-24 21:01:38,138:INFO:DecisionTreeRegressor(random_state=9)
2024-07-24 21:01:38,138:INFO:create_model() successfully completed......................................
2024-07-24 21:01:38,186:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:38,186:INFO:Creating metrics dataframe
2024-07-24 21:01:38,187:INFO:Initializing Random Forest Regressor
2024-07-24 21:01:38,187:INFO:Total runtime is 0.7150194327036541 minutes
2024-07-24 21:01:38,187:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:38,187:INFO:Initializing create_model()
2024-07-24 21:01:38,187:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:38,187:INFO:Checking exceptions
2024-07-24 21:01:38,187:INFO:Importing libraries
2024-07-24 21:01:38,187:INFO:Copying training dataset
2024-07-24 21:01:38,188:INFO:Defining folds
2024-07-24 21:01:38,188:INFO:Declaring metric variables
2024-07-24 21:01:38,188:INFO:Importing untrained model
2024-07-24 21:01:38,189:INFO:Random Forest Regressor Imported successfully
2024-07-24 21:01:38,189:INFO:Starting cross validation
2024-07-24 21:01:38,190:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:43,098:INFO:Calculating mean and std
2024-07-24 21:01:43,098:INFO:Creating metrics dataframe
2024-07-24 21:01:43,099:INFO:Uploading results into container
2024-07-24 21:01:43,099:INFO:Uploading model into container now
2024-07-24 21:01:43,099:INFO:_master_model_container: 13
2024-07-24 21:01:43,099:INFO:_display_container: 2
2024-07-24 21:01:43,099:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:01:43,099:INFO:create_model() successfully completed......................................
2024-07-24 21:01:43,147:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:43,147:INFO:Creating metrics dataframe
2024-07-24 21:01:43,148:INFO:Initializing Extra Trees Regressor
2024-07-24 21:01:43,148:INFO:Total runtime is 0.7977117657661439 minutes
2024-07-24 21:01:43,148:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:43,149:INFO:Initializing create_model()
2024-07-24 21:01:43,149:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:43,149:INFO:Checking exceptions
2024-07-24 21:01:43,149:INFO:Importing libraries
2024-07-24 21:01:43,149:INFO:Copying training dataset
2024-07-24 21:01:43,150:INFO:Defining folds
2024-07-24 21:01:43,150:INFO:Declaring metric variables
2024-07-24 21:01:43,150:INFO:Importing untrained model
2024-07-24 21:01:43,150:INFO:Extra Trees Regressor Imported successfully
2024-07-24 21:01:43,150:INFO:Starting cross validation
2024-07-24 21:01:43,151:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:47,729:INFO:Calculating mean and std
2024-07-24 21:01:47,729:INFO:Creating metrics dataframe
2024-07-24 21:01:47,730:INFO:Uploading results into container
2024-07-24 21:01:47,730:INFO:Uploading model into container now
2024-07-24 21:01:47,730:INFO:_master_model_container: 14
2024-07-24 21:01:47,730:INFO:_display_container: 2
2024-07-24 21:01:47,730:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:01:47,730:INFO:create_model() successfully completed......................................
2024-07-24 21:01:47,778:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:47,778:INFO:Creating metrics dataframe
2024-07-24 21:01:47,779:INFO:Initializing AdaBoost Regressor
2024-07-24 21:01:47,779:INFO:Total runtime is 0.8748949170112611 minutes
2024-07-24 21:01:47,779:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:47,780:INFO:Initializing create_model()
2024-07-24 21:01:47,780:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:47,780:INFO:Checking exceptions
2024-07-24 21:01:47,780:INFO:Importing libraries
2024-07-24 21:01:47,780:INFO:Copying training dataset
2024-07-24 21:01:47,781:INFO:Defining folds
2024-07-24 21:01:47,781:INFO:Declaring metric variables
2024-07-24 21:01:47,781:INFO:Importing untrained model
2024-07-24 21:01:47,781:INFO:AdaBoost Regressor Imported successfully
2024-07-24 21:01:47,781:INFO:Starting cross validation
2024-07-24 21:01:47,783:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:51,479:INFO:Calculating mean and std
2024-07-24 21:01:51,479:INFO:Creating metrics dataframe
2024-07-24 21:01:51,480:INFO:Uploading results into container
2024-07-24 21:01:51,480:INFO:Uploading model into container now
2024-07-24 21:01:51,480:INFO:_master_model_container: 15
2024-07-24 21:01:51,480:INFO:_display_container: 2
2024-07-24 21:01:51,480:INFO:AdaBoostRegressor(random_state=9)
2024-07-24 21:01:51,480:INFO:create_model() successfully completed......................................
2024-07-24 21:01:51,528:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:51,528:INFO:Creating metrics dataframe
2024-07-24 21:01:51,529:INFO:Initializing Gradient Boosting Regressor
2024-07-24 21:01:51,529:INFO:Total runtime is 0.9373890121777854 minutes
2024-07-24 21:01:51,529:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:51,529:INFO:Initializing create_model()
2024-07-24 21:01:51,529:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:51,529:INFO:Checking exceptions
2024-07-24 21:01:51,529:INFO:Importing libraries
2024-07-24 21:01:51,529:INFO:Copying training dataset
2024-07-24 21:01:51,530:INFO:Defining folds
2024-07-24 21:01:51,530:INFO:Declaring metric variables
2024-07-24 21:01:51,531:INFO:Importing untrained model
2024-07-24 21:01:51,531:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 21:01:51,531:INFO:Starting cross validation
2024-07-24 21:01:51,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:55,327:INFO:Calculating mean and std
2024-07-24 21:01:55,328:INFO:Creating metrics dataframe
2024-07-24 21:01:55,328:INFO:Uploading results into container
2024-07-24 21:01:55,329:INFO:Uploading model into container now
2024-07-24 21:01:55,329:INFO:_master_model_container: 16
2024-07-24 21:01:55,329:INFO:_display_container: 2
2024-07-24 21:01:55,329:INFO:GradientBoostingRegressor(random_state=9)
2024-07-24 21:01:55,329:INFO:create_model() successfully completed......................................
2024-07-24 21:01:55,378:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:55,378:INFO:Creating metrics dataframe
2024-07-24 21:01:55,379:INFO:Initializing Extreme Gradient Boosting
2024-07-24 21:01:55,379:INFO:Total runtime is 1.0015502810478212 minutes
2024-07-24 21:01:55,379:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:55,379:INFO:Initializing create_model()
2024-07-24 21:01:55,379:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:55,379:INFO:Checking exceptions
2024-07-24 21:01:55,379:INFO:Importing libraries
2024-07-24 21:01:55,379:INFO:Copying training dataset
2024-07-24 21:01:55,380:INFO:Defining folds
2024-07-24 21:01:55,380:INFO:Declaring metric variables
2024-07-24 21:01:55,380:INFO:Importing untrained model
2024-07-24 21:01:55,381:INFO:Extreme Gradient Boosting Imported successfully
2024-07-24 21:01:55,381:INFO:Starting cross validation
2024-07-24 21:01:55,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:58,938:INFO:Calculating mean and std
2024-07-24 21:01:58,938:INFO:Creating metrics dataframe
2024-07-24 21:01:58,939:INFO:Uploading results into container
2024-07-24 21:01:58,939:INFO:Uploading model into container now
2024-07-24 21:01:58,939:INFO:_master_model_container: 17
2024-07-24 21:01:58,939:INFO:_display_container: 2
2024-07-24 21:01:58,940:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...)
2024-07-24 21:01:58,940:INFO:create_model() successfully completed......................................
2024-07-24 21:01:58,991:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:58,991:INFO:Creating metrics dataframe
2024-07-24 21:01:58,992:INFO:Initializing Light Gradient Boosting Machine
2024-07-24 21:01:58,992:INFO:Total runtime is 1.0617642958958946 minutes
2024-07-24 21:01:58,992:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:58,992:INFO:Initializing create_model()
2024-07-24 21:01:58,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:58,992:INFO:Checking exceptions
2024-07-24 21:01:58,992:INFO:Importing libraries
2024-07-24 21:01:58,992:INFO:Copying training dataset
2024-07-24 21:01:58,993:INFO:Defining folds
2024-07-24 21:01:58,993:INFO:Declaring metric variables
2024-07-24 21:01:58,993:INFO:Importing untrained model
2024-07-24 21:01:58,993:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-24 21:01:58,993:INFO:Starting cross validation
2024-07-24 21:01:58,995:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:02:04,428:INFO:Calculating mean and std
2024-07-24 21:02:04,428:INFO:Creating metrics dataframe
2024-07-24 21:02:04,429:INFO:Uploading results into container
2024-07-24 21:02:04,429:INFO:Uploading model into container now
2024-07-24 21:02:04,429:INFO:_master_model_container: 18
2024-07-24 21:02:04,429:INFO:_display_container: 2
2024-07-24 21:02:04,429:INFO:LGBMRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:02:04,429:INFO:create_model() successfully completed......................................
2024-07-24 21:02:04,479:INFO:SubProcess create_model() end ==================================
2024-07-24 21:02:04,479:INFO:Creating metrics dataframe
2024-07-24 21:02:04,480:INFO:Initializing Dummy Regressor
2024-07-24 21:02:04,480:INFO:Total runtime is 1.1532424171765647 minutes
2024-07-24 21:02:04,480:INFO:SubProcess create_model() called ==================================
2024-07-24 21:02:04,480:INFO:Initializing create_model()
2024-07-24 21:02:04,480:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:04,480:INFO:Checking exceptions
2024-07-24 21:02:04,480:INFO:Importing libraries
2024-07-24 21:02:04,480:INFO:Copying training dataset
2024-07-24 21:02:04,482:INFO:Defining folds
2024-07-24 21:02:04,482:INFO:Declaring metric variables
2024-07-24 21:02:04,482:INFO:Importing untrained model
2024-07-24 21:02:04,482:INFO:Dummy Regressor Imported successfully
2024-07-24 21:02:04,482:INFO:Starting cross validation
2024-07-24 21:02:04,483:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:02:07,261:INFO:Calculating mean and std
2024-07-24 21:02:07,262:INFO:Creating metrics dataframe
2024-07-24 21:02:07,262:INFO:Uploading results into container
2024-07-24 21:02:07,263:INFO:Uploading model into container now
2024-07-24 21:02:07,263:INFO:_master_model_container: 19
2024-07-24 21:02:07,263:INFO:_display_container: 2
2024-07-24 21:02:07,263:INFO:DummyRegressor()
2024-07-24 21:02:07,263:INFO:create_model() successfully completed......................................
2024-07-24 21:02:07,311:INFO:SubProcess create_model() end ==================================
2024-07-24 21:02:07,311:INFO:Creating metrics dataframe
2024-07-24 21:02:07,317:WARNING:/opt/anaconda3/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-07-24 21:02:07,318:INFO:Initializing create_model()
2024-07-24 21:02:07,318:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=LGBMRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:07,318:INFO:Checking exceptions
2024-07-24 21:02:07,318:INFO:Importing libraries
2024-07-24 21:02:07,318:INFO:Copying training dataset
2024-07-24 21:02:07,319:INFO:Defining folds
2024-07-24 21:02:07,319:INFO:Declaring metric variables
2024-07-24 21:02:07,319:INFO:Importing untrained model
2024-07-24 21:02:07,319:INFO:Declaring custom model
2024-07-24 21:02:07,320:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-24 21:02:07,321:INFO:Cross validation set to False
2024-07-24 21:02:07,321:INFO:Fitting Model
2024-07-24 21:02:08,591:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-07-24 21:02:08,596:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001870 seconds.
2024-07-24 21:02:08,596:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-07-24 21:02:08,596:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-07-24 21:02:08,596:INFO:[LightGBM] [Info] Total Bins 1669
2024-07-24 21:02:08,596:INFO:[LightGBM] [Info] Number of data points in the train set: 2383, number of used features: 63
2024-07-24 21:02:08,596:INFO:[LightGBM] [Info] Start training from score 240989.002518
2024-07-24 21:02:08,882:INFO:LGBMRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:02:08,882:INFO:create_model() successfully completed......................................
2024-07-24 21:02:08,928:INFO:Initializing create_model()
2024-07-24 21:02:08,928:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:08,928:INFO:Checking exceptions
2024-07-24 21:02:08,928:INFO:Importing libraries
2024-07-24 21:02:08,928:INFO:Copying training dataset
2024-07-24 21:02:08,930:INFO:Defining folds
2024-07-24 21:02:08,930:INFO:Declaring metric variables
2024-07-24 21:02:08,930:INFO:Importing untrained model
2024-07-24 21:02:08,930:INFO:Declaring custom model
2024-07-24 21:02:08,930:INFO:Random Forest Regressor Imported successfully
2024-07-24 21:02:08,931:INFO:Cross validation set to False
2024-07-24 21:02:08,931:INFO:Fitting Model
2024-07-24 21:02:10,416:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:02:10,417:INFO:create_model() successfully completed......................................
2024-07-24 21:02:10,463:INFO:Initializing create_model()
2024-07-24 21:02:10,463:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=GradientBoostingRegressor(random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:10,463:INFO:Checking exceptions
2024-07-24 21:02:10,463:INFO:Importing libraries
2024-07-24 21:02:10,464:INFO:Copying training dataset
2024-07-24 21:02:10,465:INFO:Defining folds
2024-07-24 21:02:10,465:INFO:Declaring metric variables
2024-07-24 21:02:10,465:INFO:Importing untrained model
2024-07-24 21:02:10,465:INFO:Declaring custom model
2024-07-24 21:02:10,465:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 21:02:10,466:INFO:Cross validation set to False
2024-07-24 21:02:10,467:INFO:Fitting Model
2024-07-24 21:02:12,139:INFO:GradientBoostingRegressor(random_state=9)
2024-07-24 21:02:12,139:INFO:create_model() successfully completed......................................
2024-07-24 21:02:12,190:INFO:_master_model_container: 19
2024-07-24 21:02:12,190:INFO:_display_container: 2
2024-07-24 21:02:12,190:INFO:[LGBMRegressor(n_jobs=-1, random_state=9), RandomForestRegressor(n_jobs=-1, random_state=9), GradientBoostingRegressor(random_state=9)]
2024-07-24 21:02:12,190:INFO:compare_models() successfully completed......................................
2024-07-24 21:02:12,191:INFO:Initializing stack_models()
2024-07-24 21:02:12,191:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator_list=[LGBMRegressor(n_jobs=-1, random_state=9), RandomForestRegressor(n_jobs=-1, random_state=9), GradientBoostingRegressor(random_state=9)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=True, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-24 21:02:12,191:INFO:Checking exceptions
2024-07-24 21:02:12,191:INFO:Defining meta model
2024-07-24 21:02:12,192:INFO:Getting model names
2024-07-24 21:02:12,192:INFO:[('Light Gradient Boosting Machine', LGBMRegressor(n_jobs=-1, random_state=9)), ('Random Forest Regressor', RandomForestRegressor(n_jobs=-1, random_state=9)), ('Gradient Boosting Regressor', GradientBoostingRegressor(random_state=9))]
2024-07-24 21:02:12,192:INFO:SubProcess create_model() called ==================================
2024-07-24 21:02:12,194:INFO:Initializing create_model()
2024-07-24 21:02:12,194:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162c42890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:12,195:INFO:Checking exceptions
2024-07-24 21:02:12,195:INFO:Importing libraries
2024-07-24 21:02:12,195:INFO:Copying training dataset
2024-07-24 21:02:12,196:INFO:Defining folds
2024-07-24 21:02:12,196:INFO:Declaring metric variables
2024-07-24 21:02:12,196:INFO:Importing untrained model
2024-07-24 21:02:12,196:INFO:Declaring custom model
2024-07-24 21:02:12,197:INFO:Stacking Regressor Imported successfully
2024-07-24 21:02:12,197:INFO:Starting cross validation
2024-07-24 21:02:12,199:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:02:42,720:INFO:Calculating mean and std
2024-07-24 21:02:42,721:INFO:Creating metrics dataframe
2024-07-24 21:02:42,723:INFO:Finalizing model
2024-07-24 21:02:47,273:INFO:Uploading results into container
2024-07-24 21:02:47,273:INFO:Uploading model into container now
2024-07-24 21:02:47,274:INFO:_master_model_container: 20
2024-07-24 21:02:47,274:INFO:_display_container: 3
2024-07-24 21:02:47,277:INFO:StackingRegressor(cv=5,
                  estimators=[('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1)
2024-07-24 21:02:47,277:INFO:create_model() successfully completed......................................
2024-07-24 21:02:47,366:INFO:SubProcess create_model() end ==================================
2024-07-24 21:02:47,366:INFO:choose_better activated
2024-07-24 21:02:47,368:INFO:StackingRegressor(cv=5,
                  estimators=[('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1) result for R2 is 0.7784
2024-07-24 21:02:47,368:INFO:SubProcess create_model() called ==================================
2024-07-24 21:02:47,368:INFO:Initializing create_model()
2024-07-24 21:02:47,368:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=LGBMRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:47,368:INFO:Checking exceptions
2024-07-24 21:02:47,369:INFO:Importing libraries
2024-07-24 21:02:47,369:INFO:Copying training dataset
2024-07-24 21:02:47,370:INFO:Defining folds
2024-07-24 21:02:47,370:INFO:Declaring metric variables
2024-07-24 21:02:47,370:INFO:Importing untrained model
2024-07-24 21:02:47,370:INFO:Declaring custom model
2024-07-24 21:02:47,370:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-24 21:02:47,370:INFO:Starting cross validation
2024-07-24 21:02:47,372:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:02:52,760:INFO:Calculating mean and std
2024-07-24 21:02:52,761:INFO:Creating metrics dataframe
2024-07-24 21:02:52,762:INFO:Finalizing model
2024-07-24 21:02:53,997:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-07-24 21:02:54,002:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001818 seconds.
2024-07-24 21:02:54,002:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-07-24 21:02:54,002:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-07-24 21:02:54,002:INFO:[LightGBM] [Info] Total Bins 1669
2024-07-24 21:02:54,002:INFO:[LightGBM] [Info] Number of data points in the train set: 2383, number of used features: 63
2024-07-24 21:02:54,003:INFO:[LightGBM] [Info] Start training from score 240989.002518
2024-07-24 21:02:54,287:INFO:Uploading results into container
2024-07-24 21:02:54,289:INFO:Uploading model into container now
2024-07-24 21:02:54,289:INFO:_master_model_container: 21
2024-07-24 21:02:54,289:INFO:_display_container: 4
2024-07-24 21:02:54,289:INFO:LGBMRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:02:54,289:INFO:create_model() successfully completed......................................
2024-07-24 21:02:54,334:INFO:SubProcess create_model() end ==================================
2024-07-24 21:02:54,334:INFO:LGBMRegressor(n_jobs=-1, random_state=9) result for R2 is 0.7736
2024-07-24 21:02:54,335:INFO:SubProcess create_model() called ==================================
2024-07-24 21:02:54,335:INFO:Initializing create_model()
2024-07-24 21:02:54,335:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:54,335:INFO:Checking exceptions
2024-07-24 21:02:54,335:INFO:Importing libraries
2024-07-24 21:02:54,335:INFO:Copying training dataset
2024-07-24 21:02:54,336:INFO:Defining folds
2024-07-24 21:02:54,336:INFO:Declaring metric variables
2024-07-24 21:02:54,336:INFO:Importing untrained model
2024-07-24 21:02:54,336:INFO:Declaring custom model
2024-07-24 21:02:54,337:INFO:Random Forest Regressor Imported successfully
2024-07-24 21:02:54,337:INFO:Starting cross validation
2024-07-24 21:02:54,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:02:59,320:INFO:Calculating mean and std
2024-07-24 21:02:59,321:INFO:Creating metrics dataframe
2024-07-24 21:02:59,321:INFO:Finalizing model
2024-07-24 21:03:00,797:INFO:Uploading results into container
2024-07-24 21:03:00,797:INFO:Uploading model into container now
2024-07-24 21:03:00,798:INFO:_master_model_container: 22
2024-07-24 21:03:00,798:INFO:_display_container: 4
2024-07-24 21:03:00,798:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:00,798:INFO:create_model() successfully completed......................................
2024-07-24 21:03:00,843:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:00,843:INFO:RandomForestRegressor(n_jobs=-1, random_state=9) result for R2 is 0.7668
2024-07-24 21:03:00,843:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:00,843:INFO:Initializing create_model()
2024-07-24 21:03:00,844:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=GradientBoostingRegressor(random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:00,844:INFO:Checking exceptions
2024-07-24 21:03:00,844:INFO:Importing libraries
2024-07-24 21:03:00,844:INFO:Copying training dataset
2024-07-24 21:03:00,845:INFO:Defining folds
2024-07-24 21:03:00,845:INFO:Declaring metric variables
2024-07-24 21:03:00,845:INFO:Importing untrained model
2024-07-24 21:03:00,845:INFO:Declaring custom model
2024-07-24 21:03:00,845:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 21:03:00,846:INFO:Starting cross validation
2024-07-24 21:03:00,847:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:04,691:INFO:Calculating mean and std
2024-07-24 21:03:04,691:INFO:Creating metrics dataframe
2024-07-24 21:03:04,692:INFO:Finalizing model
2024-07-24 21:03:06,360:INFO:Uploading results into container
2024-07-24 21:03:06,361:INFO:Uploading model into container now
2024-07-24 21:03:06,361:INFO:_master_model_container: 23
2024-07-24 21:03:06,361:INFO:_display_container: 4
2024-07-24 21:03:06,361:INFO:GradientBoostingRegressor(random_state=9)
2024-07-24 21:03:06,361:INFO:create_model() successfully completed......................................
2024-07-24 21:03:06,406:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:06,406:INFO:GradientBoostingRegressor(random_state=9) result for R2 is 0.7648
2024-07-24 21:03:06,408:INFO:StackingRegressor(cv=5,
                  estimators=[('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1) is best model
2024-07-24 21:03:06,408:INFO:choose_better completed
2024-07-24 21:03:06,411:INFO:_master_model_container: 23
2024-07-24 21:03:06,411:INFO:_display_container: 3
2024-07-24 21:03:06,413:INFO:StackingRegressor(cv=5,
                  estimators=[('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1)
2024-07-24 21:03:06,413:INFO:stack_models() successfully completed......................................
2024-07-24 21:03:06,478:INFO:Initializing save_model()
2024-07-24 21:03:06,478:INFO:save_model(model=StackingRegressor(cv=5,
                  estimators=[('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1), model_name=best_model_small_house, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/gp/fp0z7sz5063d4vng25fzsxcm0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(stra...
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-07-24 21:03:06,478:INFO:Adding model into prep_pipe
2024-07-24 21:03:06,507:INFO:best_model_small_house.pkl saved in current working directory
2024-07-24 21:03:06,521:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))])
2024-07-24 21:03:06,521:INFO:save_model() successfully completed......................................
2024-07-24 21:03:06,587:INFO:PyCaret RegressionExperiment
2024-07-24 21:03:06,587:INFO:Logging name: reg-default-name
2024-07-24 21:03:06,588:INFO:ML Usecase: MLUsecase.REGRESSION
2024-07-24 21:03:06,588:INFO:version 3.3.1
2024-07-24 21:03:06,588:INFO:Initializing setup()
2024-07-24 21:03:06,588:INFO:self.USI: bfa0
2024-07-24 21:03:06,588:INFO:self._variable_keys: {'log_plots_param', '_ml_usecase', 'gpu_n_jobs_param', 'USI', 'logging_param', 'X_train', 'y', 'data', 'transform_target_param', '_available_plots', 'pipeline', 'target_param', 'y_test', 'gpu_param', 'fold_generator', 'X_test', 'seed', 'y_train', 'fold_groups_param', 'memory', 'n_jobs_param', 'X', 'html_param', 'exp_name_log', 'idx', 'exp_id', 'fold_shuffle_param'}
2024-07-24 21:03:06,588:INFO:Checking environment
2024-07-24 21:03:06,588:INFO:python_version: 3.11.8
2024-07-24 21:03:06,588:INFO:python_build: ('main', 'Feb 16 2024 20:49:36')
2024-07-24 21:03:06,588:INFO:machine: arm64
2024-07-24 21:03:06,588:INFO:platform: macOS-14.5-arm64-arm-64bit
2024-07-24 21:03:06,588:INFO:Memory: svmem(total=17179869184, available=3718152192, percent=78.4, used=5544443904, free=34160640, active=3693608960, inactive=3660169216, wired=1850834944)
2024-07-24 21:03:06,588:INFO:Physical Core: 8
2024-07-24 21:03:06,588:INFO:Logical Core: 8
2024-07-24 21:03:06,588:INFO:Checking libraries
2024-07-24 21:03:06,588:INFO:System:
2024-07-24 21:03:06,588:INFO:    python: 3.11.8 | packaged by conda-forge | (main, Feb 16 2024, 20:49:36) [Clang 16.0.6 ]
2024-07-24 21:03:06,588:INFO:executable: /opt/anaconda3/bin/python
2024-07-24 21:03:06,588:INFO:   machine: macOS-14.5-arm64-arm-64bit
2024-07-24 21:03:06,588:INFO:PyCaret required dependencies:
2024-07-24 21:03:06,588:INFO:                 pip: 23.3.1
2024-07-24 21:03:06,588:INFO:          setuptools: 68.2.2
2024-07-24 21:03:06,588:INFO:             pycaret: 3.3.1
2024-07-24 21:03:06,588:INFO:             IPython: 8.20.0
2024-07-24 21:03:06,588:INFO:          ipywidgets: 7.6.5
2024-07-24 21:03:06,588:INFO:                tqdm: 4.65.0
2024-07-24 21:03:06,588:INFO:               numpy: 1.26.4
2024-07-24 21:03:06,588:INFO:              pandas: 2.1.4
2024-07-24 21:03:06,588:INFO:              jinja2: 3.1.3
2024-07-24 21:03:06,588:INFO:               scipy: 1.11.4
2024-07-24 21:03:06,588:INFO:              joblib: 1.2.0
2024-07-24 21:03:06,588:INFO:             sklearn: 1.4.2
2024-07-24 21:03:06,588:INFO:                pyod: 1.1.3
2024-07-24 21:03:06,588:INFO:            imblearn: 0.12.2
2024-07-24 21:03:06,588:INFO:   category_encoders: 2.6.3
2024-07-24 21:03:06,588:INFO:            lightgbm: 4.3.0
2024-07-24 21:03:06,588:INFO:               numba: 0.59.0
2024-07-24 21:03:06,588:INFO:            requests: 2.31.0
2024-07-24 21:03:06,588:INFO:          matplotlib: 3.7.5
2024-07-24 21:03:06,588:INFO:          scikitplot: 0.3.7
2024-07-24 21:03:06,588:INFO:         yellowbrick: 1.5
2024-07-24 21:03:06,588:INFO:              plotly: 5.22.0
2024-07-24 21:03:06,588:INFO:    plotly-resampler: Not installed
2024-07-24 21:03:06,588:INFO:             kaleido: 0.2.1
2024-07-24 21:03:06,588:INFO:           schemdraw: 0.15
2024-07-24 21:03:06,588:INFO:         statsmodels: 0.14.0
2024-07-24 21:03:06,588:INFO:              sktime: 0.26.0
2024-07-24 21:03:06,588:INFO:               tbats: 1.1.3
2024-07-24 21:03:06,588:INFO:            pmdarima: 2.0.4
2024-07-24 21:03:06,588:INFO:              psutil: 5.9.0
2024-07-24 21:03:06,588:INFO:          markupsafe: 2.1.3
2024-07-24 21:03:06,588:INFO:             pickle5: Not installed
2024-07-24 21:03:06,588:INFO:         cloudpickle: 2.2.1
2024-07-24 21:03:06,588:INFO:         deprecation: 2.1.0
2024-07-24 21:03:06,588:INFO:              xxhash: 3.4.1
2024-07-24 21:03:06,588:INFO:           wurlitzer: 3.0.2
2024-07-24 21:03:06,588:INFO:PyCaret optional dependencies:
2024-07-24 21:03:06,588:INFO:                shap: 0.46.0
2024-07-24 21:03:06,588:INFO:           interpret: Not installed
2024-07-24 21:03:06,588:INFO:                umap: 0.5.5
2024-07-24 21:03:06,588:INFO:     ydata_profiling: Not installed
2024-07-24 21:03:06,588:INFO:  explainerdashboard: Not installed
2024-07-24 21:03:06,588:INFO:             autoviz: Not installed
2024-07-24 21:03:06,588:INFO:           fairlearn: Not installed
2024-07-24 21:03:06,588:INFO:          deepchecks: Not installed
2024-07-24 21:03:06,588:INFO:             xgboost: 2.1.0
2024-07-24 21:03:06,588:INFO:            catboost: Not installed
2024-07-24 21:03:06,588:INFO:              kmodes: Not installed
2024-07-24 21:03:06,588:INFO:             mlxtend: Not installed
2024-07-24 21:03:06,588:INFO:       statsforecast: Not installed
2024-07-24 21:03:06,588:INFO:        tune_sklearn: Not installed
2024-07-24 21:03:06,588:INFO:                 ray: Not installed
2024-07-24 21:03:06,588:INFO:            hyperopt: Not installed
2024-07-24 21:03:06,588:INFO:              optuna: Not installed
2024-07-24 21:03:06,588:INFO:               skopt: Not installed
2024-07-24 21:03:06,588:INFO:              mlflow: 2.13.0
2024-07-24 21:03:06,588:INFO:              gradio: Not installed
2024-07-24 21:03:06,588:INFO:             fastapi: Not installed
2024-07-24 21:03:06,588:INFO:             uvicorn: Not installed
2024-07-24 21:03:06,588:INFO:              m2cgen: Not installed
2024-07-24 21:03:06,588:INFO:           evidently: Not installed
2024-07-24 21:03:06,588:INFO:               fugue: Not installed
2024-07-24 21:03:06,588:INFO:           streamlit: 1.30.0
2024-07-24 21:03:06,588:INFO:             prophet: Not installed
2024-07-24 21:03:06,588:INFO:None
2024-07-24 21:03:06,589:INFO:Set up data.
2024-07-24 21:03:06,590:INFO:Set up folding strategy.
2024-07-24 21:03:06,591:INFO:Set up train/test split.
2024-07-24 21:03:06,592:INFO:Set up index.
2024-07-24 21:03:06,592:INFO:Assigning column types.
2024-07-24 21:03:06,593:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 21:03:06,593:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,595:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,597:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,619:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,637:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,637:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,638:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,640:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,642:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,664:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,681:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,682:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,683:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-07-24 21:03:06,684:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,686:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,708:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,726:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,726:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,729:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,731:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,753:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,771:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,771:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,772:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-07-24 21:03:06,776:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,798:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,816:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,816:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,821:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,843:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,860:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,861:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,862:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-07-24 21:03:06,887:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,905:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,905:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,931:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,949:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,949:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,950:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 21:03:06,975:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,993:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:07,020:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:07,038:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:07,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:07,039:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-07-24 21:03:07,083:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:07,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:07,153:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:07,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:07,161:INFO:Preparing preprocessing pipeline...
2024-07-24 21:03:07,161:INFO:Set up simple imputation.
2024-07-24 21:03:07,207:INFO:Set up encoding of ordinal features.
2024-07-24 21:03:07,207:INFO:Set up encoding of categorical features.
2024-07-24 21:03:07,207:INFO:Set up polynomial features.
2024-07-24 21:03:07,207:INFO:Set up removing multicollinearity.
2024-07-24 21:03:07,207:INFO:Set up column transformation.
2024-07-24 21:03:07,207:INFO:Set up feature normalization.
2024-07-24 21:03:07,541:INFO:Finished creating preprocessing pipeline.
2024-07-24 21:03:07,550:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gp/fp0z7sz5063d4vng25fzsxcm0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(stra...
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-07-24 21:03:07,551:INFO:Creating final display dataframe.
2024-07-24 21:03:07,722:INFO:Setup _display_container:                     Description             Value
0                    Session id                 9
1                        Target             price
2                   Target type        Regression
3           Original data shape         (1189, 9)
4        Transformed data shape       (1189, 204)
5   Transformed train set shape        (832, 204)
6    Transformed test set shape        (357, 204)
7              Numeric features                 4
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15          Polynomial features              True
16            Polynomial degree                 2
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.9
19               Transformation              True
20        Transformation method       yeo-johnson
21                    Normalize              True
22             Normalize method            zscore
23               Fold Generator             KFold
24                  Fold Number                10
25                     CPU Jobs                -1
26                      Use GPU             False
27               Log Experiment             False
28              Experiment Name  reg-default-name
29                          USI              bfa0
2024-07-24 21:03:07,768:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:07,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:07,813:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:07,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:07,814:INFO:setup() successfully completed in 1.24s...............
2024-07-24 21:03:07,814:INFO:Initializing compare_models()
2024-07-24 21:03:07,814:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-07-24 21:03:07,814:INFO:Checking exceptions
2024-07-24 21:03:07,815:INFO:Preparing display monitor
2024-07-24 21:03:07,816:INFO:Initializing Linear Regression
2024-07-24 21:03:07,816:INFO:Total runtime is 5.68230946858724e-07 minutes
2024-07-24 21:03:07,816:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:07,816:INFO:Initializing create_model()
2024-07-24 21:03:07,816:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:07,816:INFO:Checking exceptions
2024-07-24 21:03:07,816:INFO:Importing libraries
2024-07-24 21:03:07,816:INFO:Copying training dataset
2024-07-24 21:03:07,817:INFO:Defining folds
2024-07-24 21:03:07,817:INFO:Declaring metric variables
2024-07-24 21:03:07,817:INFO:Importing untrained model
2024-07-24 21:03:07,817:INFO:Linear Regression Imported successfully
2024-07-24 21:03:07,817:INFO:Starting cross validation
2024-07-24 21:03:07,818:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:08,416:INFO:Calculating mean and std
2024-07-24 21:03:08,416:INFO:Creating metrics dataframe
2024-07-24 21:03:08,417:INFO:Uploading results into container
2024-07-24 21:03:08,417:INFO:Uploading model into container now
2024-07-24 21:03:08,417:INFO:_master_model_container: 1
2024-07-24 21:03:08,417:INFO:_display_container: 2
2024-07-24 21:03:08,418:INFO:LinearRegression(n_jobs=-1)
2024-07-24 21:03:08,418:INFO:create_model() successfully completed......................................
2024-07-24 21:03:08,470:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:08,470:INFO:Creating metrics dataframe
2024-07-24 21:03:08,470:INFO:Initializing Lasso Regression
2024-07-24 21:03:08,471:INFO:Total runtime is 0.010916380087534585 minutes
2024-07-24 21:03:08,471:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:08,471:INFO:Initializing create_model()
2024-07-24 21:03:08,471:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:08,471:INFO:Checking exceptions
2024-07-24 21:03:08,471:INFO:Importing libraries
2024-07-24 21:03:08,471:INFO:Copying training dataset
2024-07-24 21:03:08,472:INFO:Defining folds
2024-07-24 21:03:08,472:INFO:Declaring metric variables
2024-07-24 21:03:08,472:INFO:Importing untrained model
2024-07-24 21:03:08,472:INFO:Lasso Regression Imported successfully
2024-07-24 21:03:08,472:INFO:Starting cross validation
2024-07-24 21:03:08,474:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:08,823:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.102e+13, tolerance: 5.075e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,828:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.130e+13, tolerance: 5.251e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,835:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.132e+13, tolerance: 5.091e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,844:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.148e+13, tolerance: 5.032e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,856:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.142e+13, tolerance: 5.079e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,866:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.134e+13, tolerance: 5.019e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,869:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.058e+13, tolerance: 4.997e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,888:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.139e+13, tolerance: 5.121e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:09,110:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.096e+13, tolerance: 5.163e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:09,118:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.097e+13, tolerance: 5.101e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:09,134:INFO:Calculating mean and std
2024-07-24 21:03:09,134:INFO:Creating metrics dataframe
2024-07-24 21:03:09,135:INFO:Uploading results into container
2024-07-24 21:03:09,135:INFO:Uploading model into container now
2024-07-24 21:03:09,135:INFO:_master_model_container: 2
2024-07-24 21:03:09,135:INFO:_display_container: 2
2024-07-24 21:03:09,135:INFO:Lasso(random_state=9)
2024-07-24 21:03:09,135:INFO:create_model() successfully completed......................................
2024-07-24 21:03:09,183:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:09,184:INFO:Creating metrics dataframe
2024-07-24 21:03:09,185:INFO:Initializing Ridge Regression
2024-07-24 21:03:09,185:INFO:Total runtime is 0.02281663417816162 minutes
2024-07-24 21:03:09,185:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:09,185:INFO:Initializing create_model()
2024-07-24 21:03:09,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:09,185:INFO:Checking exceptions
2024-07-24 21:03:09,185:INFO:Importing libraries
2024-07-24 21:03:09,185:INFO:Copying training dataset
2024-07-24 21:03:09,186:INFO:Defining folds
2024-07-24 21:03:09,186:INFO:Declaring metric variables
2024-07-24 21:03:09,186:INFO:Importing untrained model
2024-07-24 21:03:09,186:INFO:Ridge Regression Imported successfully
2024-07-24 21:03:09,186:INFO:Starting cross validation
2024-07-24 21:03:09,187:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:09,741:INFO:Calculating mean and std
2024-07-24 21:03:09,741:INFO:Creating metrics dataframe
2024-07-24 21:03:09,742:INFO:Uploading results into container
2024-07-24 21:03:09,742:INFO:Uploading model into container now
2024-07-24 21:03:09,742:INFO:_master_model_container: 3
2024-07-24 21:03:09,742:INFO:_display_container: 2
2024-07-24 21:03:09,742:INFO:Ridge(random_state=9)
2024-07-24 21:03:09,742:INFO:create_model() successfully completed......................................
2024-07-24 21:03:09,791:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:09,791:INFO:Creating metrics dataframe
2024-07-24 21:03:09,792:INFO:Initializing Elastic Net
2024-07-24 21:03:09,792:INFO:Total runtime is 0.032935885588328044 minutes
2024-07-24 21:03:09,792:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:09,792:INFO:Initializing create_model()
2024-07-24 21:03:09,792:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:09,792:INFO:Checking exceptions
2024-07-24 21:03:09,792:INFO:Importing libraries
2024-07-24 21:03:09,792:INFO:Copying training dataset
2024-07-24 21:03:09,793:INFO:Defining folds
2024-07-24 21:03:09,793:INFO:Declaring metric variables
2024-07-24 21:03:09,793:INFO:Importing untrained model
2024-07-24 21:03:09,793:INFO:Elastic Net Imported successfully
2024-07-24 21:03:09,793:INFO:Starting cross validation
2024-07-24 21:03:09,794:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:10,346:INFO:Calculating mean and std
2024-07-24 21:03:10,346:INFO:Creating metrics dataframe
2024-07-24 21:03:10,347:INFO:Uploading results into container
2024-07-24 21:03:10,347:INFO:Uploading model into container now
2024-07-24 21:03:10,347:INFO:_master_model_container: 4
2024-07-24 21:03:10,347:INFO:_display_container: 2
2024-07-24 21:03:10,348:INFO:ElasticNet(random_state=9)
2024-07-24 21:03:10,348:INFO:create_model() successfully completed......................................
2024-07-24 21:03:10,396:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:10,396:INFO:Creating metrics dataframe
2024-07-24 21:03:10,397:INFO:Initializing Least Angle Regression
2024-07-24 21:03:10,397:INFO:Total runtime is 0.043017931779225665 minutes
2024-07-24 21:03:10,397:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:10,397:INFO:Initializing create_model()
2024-07-24 21:03:10,397:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:10,397:INFO:Checking exceptions
2024-07-24 21:03:10,397:INFO:Importing libraries
2024-07-24 21:03:10,397:INFO:Copying training dataset
2024-07-24 21:03:10,398:INFO:Defining folds
2024-07-24 21:03:10,398:INFO:Declaring metric variables
2024-07-24 21:03:10,398:INFO:Importing untrained model
2024-07-24 21:03:10,398:INFO:Least Angle Regression Imported successfully
2024-07-24 21:03:10,398:INFO:Starting cross validation
2024-07-24 21:03:10,399:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:10,700:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/metrics/_regression.py:501: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)

2024-07-24 21:03:10,700:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/metrics/_regression.py:501: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)

2024-07-24 21:03:10,701:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/metrics/_regression.py:1196: RuntimeWarning: overflow encountered in square
  numerator = (weight * (y_true - y_pred) ** 2).sum(axis=0, dtype=np.float64)

2024-07-24 21:03:10,955:INFO:Calculating mean and std
2024-07-24 21:03:10,957:WARNING:/opt/anaconda3/lib/python3.11/site-packages/numpy/core/_methods.py:176: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-07-24 21:03:10,957:WARNING:/opt/anaconda3/lib/python3.11/site-packages/numpy/core/_methods.py:173: RuntimeWarning: invalid value encountered in subtract
  x = asanyarray(arr - arrmean)

2024-07-24 21:03:10,957:INFO:Creating metrics dataframe
2024-07-24 21:03:10,958:INFO:Uploading results into container
2024-07-24 21:03:10,958:INFO:Uploading model into container now
2024-07-24 21:03:10,958:INFO:_master_model_container: 5
2024-07-24 21:03:10,958:INFO:_display_container: 2
2024-07-24 21:03:10,958:INFO:Lars(random_state=9)
2024-07-24 21:03:10,958:INFO:create_model() successfully completed......................................
2024-07-24 21:03:11,007:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:11,007:INFO:Creating metrics dataframe
2024-07-24 21:03:11,008:INFO:Initializing Lasso Least Angle Regression
2024-07-24 21:03:11,008:INFO:Total runtime is 0.05321200291315714 minutes
2024-07-24 21:03:11,008:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:11,008:INFO:Initializing create_model()
2024-07-24 21:03:11,008:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:11,008:INFO:Checking exceptions
2024-07-24 21:03:11,008:INFO:Importing libraries
2024-07-24 21:03:11,008:INFO:Copying training dataset
2024-07-24 21:03:11,010:INFO:Defining folds
2024-07-24 21:03:11,010:INFO:Declaring metric variables
2024-07-24 21:03:11,010:INFO:Importing untrained model
2024-07-24 21:03:11,010:INFO:Lasso Least Angle Regression Imported successfully
2024-07-24 21:03:11,010:INFO:Starting cross validation
2024-07-24 21:03:11,011:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:11,603:INFO:Calculating mean and std
2024-07-24 21:03:11,603:INFO:Creating metrics dataframe
2024-07-24 21:03:11,604:INFO:Uploading results into container
2024-07-24 21:03:11,604:INFO:Uploading model into container now
2024-07-24 21:03:11,604:INFO:_master_model_container: 6
2024-07-24 21:03:11,604:INFO:_display_container: 2
2024-07-24 21:03:11,604:INFO:LassoLars(random_state=9)
2024-07-24 21:03:11,604:INFO:create_model() successfully completed......................................
2024-07-24 21:03:11,653:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:11,653:INFO:Creating metrics dataframe
2024-07-24 21:03:11,654:INFO:Initializing Orthogonal Matching Pursuit
2024-07-24 21:03:11,654:INFO:Total runtime is 0.06397038698196411 minutes
2024-07-24 21:03:11,654:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:11,654:INFO:Initializing create_model()
2024-07-24 21:03:11,654:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:11,654:INFO:Checking exceptions
2024-07-24 21:03:11,654:INFO:Importing libraries
2024-07-24 21:03:11,654:INFO:Copying training dataset
2024-07-24 21:03:11,655:INFO:Defining folds
2024-07-24 21:03:11,655:INFO:Declaring metric variables
2024-07-24 21:03:11,655:INFO:Importing untrained model
2024-07-24 21:03:11,655:INFO:Orthogonal Matching Pursuit Imported successfully
2024-07-24 21:03:11,655:INFO:Starting cross validation
2024-07-24 21:03:11,656:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:12,223:INFO:Calculating mean and std
2024-07-24 21:03:12,224:INFO:Creating metrics dataframe
2024-07-24 21:03:12,224:INFO:Uploading results into container
2024-07-24 21:03:12,225:INFO:Uploading model into container now
2024-07-24 21:03:12,225:INFO:_master_model_container: 7
2024-07-24 21:03:12,225:INFO:_display_container: 2
2024-07-24 21:03:12,225:INFO:OrthogonalMatchingPursuit()
2024-07-24 21:03:12,225:INFO:create_model() successfully completed......................................
2024-07-24 21:03:12,273:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:12,273:INFO:Creating metrics dataframe
2024-07-24 21:03:12,274:INFO:Initializing Bayesian Ridge
2024-07-24 21:03:12,274:INFO:Total runtime is 0.07430480321248373 minutes
2024-07-24 21:03:12,274:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:12,274:INFO:Initializing create_model()
2024-07-24 21:03:12,274:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:12,274:INFO:Checking exceptions
2024-07-24 21:03:12,274:INFO:Importing libraries
2024-07-24 21:03:12,274:INFO:Copying training dataset
2024-07-24 21:03:12,275:INFO:Defining folds
2024-07-24 21:03:12,275:INFO:Declaring metric variables
2024-07-24 21:03:12,275:INFO:Importing untrained model
2024-07-24 21:03:12,275:INFO:Bayesian Ridge Imported successfully
2024-07-24 21:03:12,275:INFO:Starting cross validation
2024-07-24 21:03:12,276:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:12,885:INFO:Calculating mean and std
2024-07-24 21:03:12,886:INFO:Creating metrics dataframe
2024-07-24 21:03:12,886:INFO:Uploading results into container
2024-07-24 21:03:12,887:INFO:Uploading model into container now
2024-07-24 21:03:12,887:INFO:_master_model_container: 8
2024-07-24 21:03:12,887:INFO:_display_container: 2
2024-07-24 21:03:12,887:INFO:BayesianRidge()
2024-07-24 21:03:12,887:INFO:create_model() successfully completed......................................
2024-07-24 21:03:12,938:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:12,939:INFO:Creating metrics dataframe
2024-07-24 21:03:12,939:INFO:Initializing Passive Aggressive Regressor
2024-07-24 21:03:12,940:INFO:Total runtime is 0.08539933363596598 minutes
2024-07-24 21:03:12,940:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:12,940:INFO:Initializing create_model()
2024-07-24 21:03:12,940:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:12,940:INFO:Checking exceptions
2024-07-24 21:03:12,940:INFO:Importing libraries
2024-07-24 21:03:12,940:INFO:Copying training dataset
2024-07-24 21:03:12,941:INFO:Defining folds
2024-07-24 21:03:12,941:INFO:Declaring metric variables
2024-07-24 21:03:12,941:INFO:Importing untrained model
2024-07-24 21:03:12,941:INFO:Passive Aggressive Regressor Imported successfully
2024-07-24 21:03:12,941:INFO:Starting cross validation
2024-07-24 21:03:12,942:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:13,639:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,730:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,778:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,787:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,793:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,798:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,816:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,825:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:14,308:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:14,374:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:14,390:INFO:Calculating mean and std
2024-07-24 21:03:14,390:INFO:Creating metrics dataframe
2024-07-24 21:03:14,391:INFO:Uploading results into container
2024-07-24 21:03:14,391:INFO:Uploading model into container now
2024-07-24 21:03:14,391:INFO:_master_model_container: 9
2024-07-24 21:03:14,391:INFO:_display_container: 2
2024-07-24 21:03:14,391:INFO:PassiveAggressiveRegressor(random_state=9)
2024-07-24 21:03:14,391:INFO:create_model() successfully completed......................................
2024-07-24 21:03:14,444:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:14,444:INFO:Creating metrics dataframe
2024-07-24 21:03:14,444:INFO:Initializing Huber Regressor
2024-07-24 21:03:14,445:INFO:Total runtime is 0.11048306624094645 minutes
2024-07-24 21:03:14,445:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:14,445:INFO:Initializing create_model()
2024-07-24 21:03:14,445:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:14,445:INFO:Checking exceptions
2024-07-24 21:03:14,445:INFO:Importing libraries
2024-07-24 21:03:14,445:INFO:Copying training dataset
2024-07-24 21:03:14,446:INFO:Defining folds
2024-07-24 21:03:14,446:INFO:Declaring metric variables
2024-07-24 21:03:14,446:INFO:Importing untrained model
2024-07-24 21:03:14,446:INFO:Huber Regressor Imported successfully
2024-07-24 21:03:14,446:INFO:Starting cross validation
2024-07-24 21:03:14,447:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:15,035:INFO:Calculating mean and std
2024-07-24 21:03:15,035:INFO:Creating metrics dataframe
2024-07-24 21:03:15,036:INFO:Uploading results into container
2024-07-24 21:03:15,036:INFO:Uploading model into container now
2024-07-24 21:03:15,036:INFO:_master_model_container: 10
2024-07-24 21:03:15,036:INFO:_display_container: 2
2024-07-24 21:03:15,036:INFO:HuberRegressor()
2024-07-24 21:03:15,036:INFO:create_model() successfully completed......................................
2024-07-24 21:03:15,086:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:15,086:INFO:Creating metrics dataframe
2024-07-24 21:03:15,087:INFO:Initializing K Neighbors Regressor
2024-07-24 21:03:15,087:INFO:Total runtime is 0.12119128306706746 minutes
2024-07-24 21:03:15,087:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:15,087:INFO:Initializing create_model()
2024-07-24 21:03:15,087:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:15,087:INFO:Checking exceptions
2024-07-24 21:03:15,087:INFO:Importing libraries
2024-07-24 21:03:15,087:INFO:Copying training dataset
2024-07-24 21:03:15,088:INFO:Defining folds
2024-07-24 21:03:15,088:INFO:Declaring metric variables
2024-07-24 21:03:15,088:INFO:Importing untrained model
2024-07-24 21:03:15,089:INFO:K Neighbors Regressor Imported successfully
2024-07-24 21:03:15,089:INFO:Starting cross validation
2024-07-24 21:03:15,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:15,652:INFO:Calculating mean and std
2024-07-24 21:03:15,653:INFO:Creating metrics dataframe
2024-07-24 21:03:15,653:INFO:Uploading results into container
2024-07-24 21:03:15,654:INFO:Uploading model into container now
2024-07-24 21:03:15,654:INFO:_master_model_container: 11
2024-07-24 21:03:15,654:INFO:_display_container: 2
2024-07-24 21:03:15,654:INFO:KNeighborsRegressor(n_jobs=-1)
2024-07-24 21:03:15,654:INFO:create_model() successfully completed......................................
2024-07-24 21:03:15,702:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:15,702:INFO:Creating metrics dataframe
2024-07-24 21:03:15,703:INFO:Initializing Decision Tree Regressor
2024-07-24 21:03:15,703:INFO:Total runtime is 0.13146233161290485 minutes
2024-07-24 21:03:15,703:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:15,703:INFO:Initializing create_model()
2024-07-24 21:03:15,703:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:15,703:INFO:Checking exceptions
2024-07-24 21:03:15,703:INFO:Importing libraries
2024-07-24 21:03:15,703:INFO:Copying training dataset
2024-07-24 21:03:15,705:INFO:Defining folds
2024-07-24 21:03:15,705:INFO:Declaring metric variables
2024-07-24 21:03:15,705:INFO:Importing untrained model
2024-07-24 21:03:15,705:INFO:Decision Tree Regressor Imported successfully
2024-07-24 21:03:15,705:INFO:Starting cross validation
2024-07-24 21:03:15,706:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:16,270:INFO:Calculating mean and std
2024-07-24 21:03:16,270:INFO:Creating metrics dataframe
2024-07-24 21:03:16,271:INFO:Uploading results into container
2024-07-24 21:03:16,271:INFO:Uploading model into container now
2024-07-24 21:03:16,271:INFO:_master_model_container: 12
2024-07-24 21:03:16,271:INFO:_display_container: 2
2024-07-24 21:03:16,271:INFO:DecisionTreeRegressor(random_state=9)
2024-07-24 21:03:16,271:INFO:create_model() successfully completed......................................
2024-07-24 21:03:16,319:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:16,319:INFO:Creating metrics dataframe
2024-07-24 21:03:16,320:INFO:Initializing Random Forest Regressor
2024-07-24 21:03:16,320:INFO:Total runtime is 0.1417486508687337 minutes
2024-07-24 21:03:16,321:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:16,321:INFO:Initializing create_model()
2024-07-24 21:03:16,321:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:16,321:INFO:Checking exceptions
2024-07-24 21:03:16,321:INFO:Importing libraries
2024-07-24 21:03:16,321:INFO:Copying training dataset
2024-07-24 21:03:16,322:INFO:Defining folds
2024-07-24 21:03:16,322:INFO:Declaring metric variables
2024-07-24 21:03:16,322:INFO:Importing untrained model
2024-07-24 21:03:16,322:INFO:Random Forest Regressor Imported successfully
2024-07-24 21:03:16,322:INFO:Starting cross validation
2024-07-24 21:03:16,323:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:17,378:INFO:Calculating mean and std
2024-07-24 21:03:17,378:INFO:Creating metrics dataframe
2024-07-24 21:03:17,379:INFO:Uploading results into container
2024-07-24 21:03:17,379:INFO:Uploading model into container now
2024-07-24 21:03:17,379:INFO:_master_model_container: 13
2024-07-24 21:03:17,379:INFO:_display_container: 2
2024-07-24 21:03:17,379:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:17,379:INFO:create_model() successfully completed......................................
2024-07-24 21:03:17,428:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:17,428:INFO:Creating metrics dataframe
2024-07-24 21:03:17,429:INFO:Initializing Extra Trees Regressor
2024-07-24 21:03:17,429:INFO:Total runtime is 0.16023071606953937 minutes
2024-07-24 21:03:17,429:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:17,430:INFO:Initializing create_model()
2024-07-24 21:03:17,430:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:17,430:INFO:Checking exceptions
2024-07-24 21:03:17,430:INFO:Importing libraries
2024-07-24 21:03:17,430:INFO:Copying training dataset
2024-07-24 21:03:17,431:INFO:Defining folds
2024-07-24 21:03:17,431:INFO:Declaring metric variables
2024-07-24 21:03:17,431:INFO:Importing untrained model
2024-07-24 21:03:17,431:INFO:Extra Trees Regressor Imported successfully
2024-07-24 21:03:17,431:INFO:Starting cross validation
2024-07-24 21:03:17,432:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:18,392:INFO:Calculating mean and std
2024-07-24 21:03:18,392:INFO:Creating metrics dataframe
2024-07-24 21:03:18,393:INFO:Uploading results into container
2024-07-24 21:03:18,393:INFO:Uploading model into container now
2024-07-24 21:03:18,393:INFO:_master_model_container: 14
2024-07-24 21:03:18,393:INFO:_display_container: 2
2024-07-24 21:03:18,394:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:18,394:INFO:create_model() successfully completed......................................
2024-07-24 21:03:18,442:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:18,442:INFO:Creating metrics dataframe
2024-07-24 21:03:18,443:INFO:Initializing AdaBoost Regressor
2024-07-24 21:03:18,443:INFO:Total runtime is 0.1771215478579203 minutes
2024-07-24 21:03:18,443:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:18,443:INFO:Initializing create_model()
2024-07-24 21:03:18,443:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:18,443:INFO:Checking exceptions
2024-07-24 21:03:18,443:INFO:Importing libraries
2024-07-24 21:03:18,443:INFO:Copying training dataset
2024-07-24 21:03:18,444:INFO:Defining folds
2024-07-24 21:03:18,444:INFO:Declaring metric variables
2024-07-24 21:03:18,444:INFO:Importing untrained model
2024-07-24 21:03:18,444:INFO:AdaBoost Regressor Imported successfully
2024-07-24 21:03:18,444:INFO:Starting cross validation
2024-07-24 21:03:18,445:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:19,092:INFO:Calculating mean and std
2024-07-24 21:03:19,092:INFO:Creating metrics dataframe
2024-07-24 21:03:19,093:INFO:Uploading results into container
2024-07-24 21:03:19,093:INFO:Uploading model into container now
2024-07-24 21:03:19,093:INFO:_master_model_container: 15
2024-07-24 21:03:19,093:INFO:_display_container: 2
2024-07-24 21:03:19,094:INFO:AdaBoostRegressor(random_state=9)
2024-07-24 21:03:19,094:INFO:create_model() successfully completed......................................
2024-07-24 21:03:19,142:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:19,142:INFO:Creating metrics dataframe
2024-07-24 21:03:19,143:INFO:Initializing Gradient Boosting Regressor
2024-07-24 21:03:19,143:INFO:Total runtime is 0.18879626592000323 minutes
2024-07-24 21:03:19,143:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:19,143:INFO:Initializing create_model()
2024-07-24 21:03:19,143:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:19,143:INFO:Checking exceptions
2024-07-24 21:03:19,143:INFO:Importing libraries
2024-07-24 21:03:19,144:INFO:Copying training dataset
2024-07-24 21:03:19,145:INFO:Defining folds
2024-07-24 21:03:19,145:INFO:Declaring metric variables
2024-07-24 21:03:19,145:INFO:Importing untrained model
2024-07-24 21:03:19,145:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 21:03:19,145:INFO:Starting cross validation
2024-07-24 21:03:19,146:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:20,022:INFO:Calculating mean and std
2024-07-24 21:03:20,023:INFO:Creating metrics dataframe
2024-07-24 21:03:20,023:INFO:Uploading results into container
2024-07-24 21:03:20,024:INFO:Uploading model into container now
2024-07-24 21:03:20,024:INFO:_master_model_container: 16
2024-07-24 21:03:20,024:INFO:_display_container: 2
2024-07-24 21:03:20,024:INFO:GradientBoostingRegressor(random_state=9)
2024-07-24 21:03:20,024:INFO:create_model() successfully completed......................................
2024-07-24 21:03:20,073:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:20,073:INFO:Creating metrics dataframe
2024-07-24 21:03:20,074:INFO:Initializing Extreme Gradient Boosting
2024-07-24 21:03:20,074:INFO:Total runtime is 0.20430446465810137 minutes
2024-07-24 21:03:20,074:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:20,074:INFO:Initializing create_model()
2024-07-24 21:03:20,074:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:20,074:INFO:Checking exceptions
2024-07-24 21:03:20,074:INFO:Importing libraries
2024-07-24 21:03:20,074:INFO:Copying training dataset
2024-07-24 21:03:20,075:INFO:Defining folds
2024-07-24 21:03:20,075:INFO:Declaring metric variables
2024-07-24 21:03:20,075:INFO:Importing untrained model
2024-07-24 21:03:20,075:INFO:Extreme Gradient Boosting Imported successfully
2024-07-24 21:03:20,075:INFO:Starting cross validation
2024-07-24 21:03:20,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:20,977:INFO:Calculating mean and std
2024-07-24 21:03:20,978:INFO:Creating metrics dataframe
2024-07-24 21:03:20,979:INFO:Uploading results into container
2024-07-24 21:03:20,979:INFO:Uploading model into container now
2024-07-24 21:03:20,979:INFO:_master_model_container: 17
2024-07-24 21:03:20,979:INFO:_display_container: 2
2024-07-24 21:03:20,980:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...)
2024-07-24 21:03:20,980:INFO:create_model() successfully completed......................................
2024-07-24 21:03:21,028:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:21,028:INFO:Creating metrics dataframe
2024-07-24 21:03:21,029:INFO:Initializing Light Gradient Boosting Machine
2024-07-24 21:03:21,029:INFO:Total runtime is 0.22022368510564166 minutes
2024-07-24 21:03:21,029:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:21,029:INFO:Initializing create_model()
2024-07-24 21:03:21,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:21,029:INFO:Checking exceptions
2024-07-24 21:03:21,029:INFO:Importing libraries
2024-07-24 21:03:21,029:INFO:Copying training dataset
2024-07-24 21:03:21,030:INFO:Defining folds
2024-07-24 21:03:21,030:INFO:Declaring metric variables
2024-07-24 21:03:21,030:INFO:Importing untrained model
2024-07-24 21:03:21,030:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-24 21:03:21,031:INFO:Starting cross validation
2024-07-24 21:03:21,031:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:23,821:INFO:Calculating mean and std
2024-07-24 21:03:23,822:INFO:Creating metrics dataframe
2024-07-24 21:03:23,822:INFO:Uploading results into container
2024-07-24 21:03:23,822:INFO:Uploading model into container now
2024-07-24 21:03:23,822:INFO:_master_model_container: 18
2024-07-24 21:03:23,823:INFO:_display_container: 2
2024-07-24 21:03:23,823:INFO:LGBMRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:23,823:INFO:create_model() successfully completed......................................
2024-07-24 21:03:23,871:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:23,871:INFO:Creating metrics dataframe
2024-07-24 21:03:23,872:INFO:Initializing Dummy Regressor
2024-07-24 21:03:23,872:INFO:Total runtime is 0.26761353413263955 minutes
2024-07-24 21:03:23,872:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:23,872:INFO:Initializing create_model()
2024-07-24 21:03:23,873:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:23,873:INFO:Checking exceptions
2024-07-24 21:03:23,873:INFO:Importing libraries
2024-07-24 21:03:23,873:INFO:Copying training dataset
2024-07-24 21:03:23,874:INFO:Defining folds
2024-07-24 21:03:23,874:INFO:Declaring metric variables
2024-07-24 21:03:23,874:INFO:Importing untrained model
2024-07-24 21:03:23,874:INFO:Dummy Regressor Imported successfully
2024-07-24 21:03:23,874:INFO:Starting cross validation
2024-07-24 21:03:23,875:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:24,426:INFO:Calculating mean and std
2024-07-24 21:03:24,426:INFO:Creating metrics dataframe
2024-07-24 21:03:24,426:INFO:Uploading results into container
2024-07-24 21:03:24,427:INFO:Uploading model into container now
2024-07-24 21:03:24,427:INFO:_master_model_container: 19
2024-07-24 21:03:24,427:INFO:_display_container: 2
2024-07-24 21:03:24,427:INFO:DummyRegressor()
2024-07-24 21:03:24,427:INFO:create_model() successfully completed......................................
2024-07-24 21:03:24,475:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:24,475:INFO:Creating metrics dataframe
2024-07-24 21:03:24,476:WARNING:/opt/anaconda3/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-07-24 21:03:24,476:INFO:Initializing create_model()
2024-07-24 21:03:24,477:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:24,477:INFO:Checking exceptions
2024-07-24 21:03:24,477:INFO:Importing libraries
2024-07-24 21:03:24,477:INFO:Copying training dataset
2024-07-24 21:03:24,478:INFO:Defining folds
2024-07-24 21:03:24,478:INFO:Declaring metric variables
2024-07-24 21:03:24,478:INFO:Importing untrained model
2024-07-24 21:03:24,478:INFO:Declaring custom model
2024-07-24 21:03:24,478:INFO:Random Forest Regressor Imported successfully
2024-07-24 21:03:24,479:INFO:Cross validation set to False
2024-07-24 21:03:24,479:INFO:Fitting Model
2024-07-24 21:03:24,775:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:24,776:INFO:create_model() successfully completed......................................
2024-07-24 21:03:24,823:INFO:Initializing create_model()
2024-07-24 21:03:24,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:24,823:INFO:Checking exceptions
2024-07-24 21:03:24,823:INFO:Importing libraries
2024-07-24 21:03:24,823:INFO:Copying training dataset
2024-07-24 21:03:24,824:INFO:Defining folds
2024-07-24 21:03:24,824:INFO:Declaring metric variables
2024-07-24 21:03:24,824:INFO:Importing untrained model
2024-07-24 21:03:24,824:INFO:Declaring custom model
2024-07-24 21:03:24,824:INFO:Extra Trees Regressor Imported successfully
2024-07-24 21:03:24,825:INFO:Cross validation set to False
2024-07-24 21:03:24,825:INFO:Fitting Model
2024-07-24 21:03:25,097:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:25,098:INFO:create_model() successfully completed......................................
2024-07-24 21:03:25,145:INFO:Initializing create_model()
2024-07-24 21:03:25,145:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=GradientBoostingRegressor(random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:25,145:INFO:Checking exceptions
2024-07-24 21:03:25,145:INFO:Importing libraries
2024-07-24 21:03:25,145:INFO:Copying training dataset
2024-07-24 21:03:25,146:INFO:Defining folds
2024-07-24 21:03:25,147:INFO:Declaring metric variables
2024-07-24 21:03:25,147:INFO:Importing untrained model
2024-07-24 21:03:25,147:INFO:Declaring custom model
2024-07-24 21:03:25,147:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 21:03:25,148:INFO:Cross validation set to False
2024-07-24 21:03:25,148:INFO:Fitting Model
2024-07-24 21:03:25,480:INFO:GradientBoostingRegressor(random_state=9)
2024-07-24 21:03:25,480:INFO:create_model() successfully completed......................................
2024-07-24 21:03:25,531:INFO:_master_model_container: 19
2024-07-24 21:03:25,531:INFO:_display_container: 2
2024-07-24 21:03:25,531:INFO:[RandomForestRegressor(n_jobs=-1, random_state=9), ExtraTreesRegressor(n_jobs=-1, random_state=9), GradientBoostingRegressor(random_state=9)]
2024-07-24 21:03:25,531:INFO:compare_models() successfully completed......................................
2024-07-24 21:03:25,531:INFO:Initializing stack_models()
2024-07-24 21:03:25,531:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator_list=[RandomForestRegressor(n_jobs=-1, random_state=9), ExtraTreesRegressor(n_jobs=-1, random_state=9), GradientBoostingRegressor(random_state=9)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=True, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-24 21:03:25,531:INFO:Checking exceptions
2024-07-24 21:03:25,532:INFO:Defining meta model
2024-07-24 21:03:25,532:INFO:Getting model names
2024-07-24 21:03:25,532:INFO:[('Random Forest Regressor', RandomForestRegressor(n_jobs=-1, random_state=9)), ('Extra Trees Regressor', ExtraTreesRegressor(n_jobs=-1, random_state=9)), ('Gradient Boosting Regressor', GradientBoostingRegressor(random_state=9))]
2024-07-24 21:03:25,533:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:25,535:INFO:Initializing create_model()
2024-07-24 21:03:25,535:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162ab1ad0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:25,535:INFO:Checking exceptions
2024-07-24 21:03:25,535:INFO:Importing libraries
2024-07-24 21:03:25,535:INFO:Copying training dataset
2024-07-24 21:03:25,536:INFO:Defining folds
2024-07-24 21:03:25,536:INFO:Declaring metric variables
2024-07-24 21:03:25,536:INFO:Importing untrained model
2024-07-24 21:03:25,536:INFO:Declaring custom model
2024-07-24 21:03:25,537:INFO:Stacking Regressor Imported successfully
2024-07-24 21:03:25,537:INFO:Starting cross validation
2024-07-24 21:03:25,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:32,794:INFO:Calculating mean and std
2024-07-24 21:03:32,794:INFO:Creating metrics dataframe
2024-07-24 21:03:32,795:INFO:Finalizing model
2024-07-24 21:03:34,007:INFO:Uploading results into container
2024-07-24 21:03:34,008:INFO:Uploading model into container now
2024-07-24 21:03:34,008:INFO:_master_model_container: 20
2024-07-24 21:03:34,008:INFO:_display_container: 3
2024-07-24 21:03:34,011:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1)
2024-07-24 21:03:34,011:INFO:create_model() successfully completed......................................
2024-07-24 21:03:34,066:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:34,066:INFO:choose_better activated
2024-07-24 21:03:34,068:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1) result for R2 is 0.5659
2024-07-24 21:03:34,068:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:34,068:INFO:Initializing create_model()
2024-07-24 21:03:34,068:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:34,068:INFO:Checking exceptions
2024-07-24 21:03:34,068:INFO:Importing libraries
2024-07-24 21:03:34,068:INFO:Copying training dataset
2024-07-24 21:03:34,070:INFO:Defining folds
2024-07-24 21:03:34,070:INFO:Declaring metric variables
2024-07-24 21:03:34,070:INFO:Importing untrained model
2024-07-24 21:03:34,070:INFO:Declaring custom model
2024-07-24 21:03:34,070:INFO:Random Forest Regressor Imported successfully
2024-07-24 21:03:34,070:INFO:Starting cross validation
2024-07-24 21:03:34,071:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:35,164:INFO:Calculating mean and std
2024-07-24 21:03:35,164:INFO:Creating metrics dataframe
2024-07-24 21:03:35,165:INFO:Finalizing model
2024-07-24 21:03:35,464:INFO:Uploading results into container
2024-07-24 21:03:35,465:INFO:Uploading model into container now
2024-07-24 21:03:35,465:INFO:_master_model_container: 21
2024-07-24 21:03:35,465:INFO:_display_container: 4
2024-07-24 21:03:35,465:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:35,465:INFO:create_model() successfully completed......................................
2024-07-24 21:03:35,513:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:35,513:INFO:RandomForestRegressor(n_jobs=-1, random_state=9) result for R2 is 0.549
2024-07-24 21:03:35,513:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:35,513:INFO:Initializing create_model()
2024-07-24 21:03:35,513:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:35,513:INFO:Checking exceptions
2024-07-24 21:03:35,514:INFO:Importing libraries
2024-07-24 21:03:35,514:INFO:Copying training dataset
2024-07-24 21:03:35,515:INFO:Defining folds
2024-07-24 21:03:35,515:INFO:Declaring metric variables
2024-07-24 21:03:35,515:INFO:Importing untrained model
2024-07-24 21:03:35,515:INFO:Declaring custom model
2024-07-24 21:03:35,515:INFO:Extra Trees Regressor Imported successfully
2024-07-24 21:03:35,515:INFO:Starting cross validation
2024-07-24 21:03:35,516:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:36,491:INFO:Calculating mean and std
2024-07-24 21:03:36,491:INFO:Creating metrics dataframe
2024-07-24 21:03:36,492:INFO:Finalizing model
2024-07-24 21:03:36,763:INFO:Uploading results into container
2024-07-24 21:03:36,763:INFO:Uploading model into container now
2024-07-24 21:03:36,763:INFO:_master_model_container: 22
2024-07-24 21:03:36,763:INFO:_display_container: 4
2024-07-24 21:03:36,763:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:36,763:INFO:create_model() successfully completed......................................
2024-07-24 21:03:36,812:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:36,812:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9) result for R2 is 0.5452
2024-07-24 21:03:36,812:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:36,812:INFO:Initializing create_model()
2024-07-24 21:03:36,812:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=GradientBoostingRegressor(random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:36,812:INFO:Checking exceptions
2024-07-24 21:03:36,812:INFO:Importing libraries
2024-07-24 21:03:36,812:INFO:Copying training dataset
2024-07-24 21:03:36,813:INFO:Defining folds
2024-07-24 21:03:36,813:INFO:Declaring metric variables
2024-07-24 21:03:36,814:INFO:Importing untrained model
2024-07-24 21:03:36,814:INFO:Declaring custom model
2024-07-24 21:03:36,814:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 21:03:36,814:INFO:Starting cross validation
2024-07-24 21:03:36,815:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:37,647:INFO:Calculating mean and std
2024-07-24 21:03:37,647:INFO:Creating metrics dataframe
2024-07-24 21:03:37,648:INFO:Finalizing model
2024-07-24 21:03:37,979:INFO:Uploading results into container
2024-07-24 21:03:37,979:INFO:Uploading model into container now
2024-07-24 21:03:37,979:INFO:_master_model_container: 23
2024-07-24 21:03:37,979:INFO:_display_container: 4
2024-07-24 21:03:37,979:INFO:GradientBoostingRegressor(random_state=9)
2024-07-24 21:03:37,979:INFO:create_model() successfully completed......................................
2024-07-24 21:03:38,029:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:38,029:INFO:GradientBoostingRegressor(random_state=9) result for R2 is 0.5266
2024-07-24 21:03:38,031:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1) is best model
2024-07-24 21:03:38,031:INFO:choose_better completed
2024-07-24 21:03:38,033:INFO:_master_model_container: 23
2024-07-24 21:03:38,033:INFO:_display_container: 3
2024-07-24 21:03:38,035:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1)
2024-07-24 21:03:38,035:INFO:stack_models() successfully completed......................................
2024-07-24 21:03:38,092:INFO:Initializing save_model()
2024-07-24 21:03:38,092:INFO:save_model(model=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1), model_name=best_model_large_house, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/gp/fp0z7sz5063d4vng25fzsxcm0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(stra...
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-07-24 21:03:38,092:INFO:Adding model into prep_pipe
2024-07-24 21:03:38,122:INFO:best_model_large_house.pkl saved in current working directory
2024-07-24 21:03:38,135:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Extra Trees Regressor',
                                                ExtraTreesRegressor(n_jobs=-1,
                                                                    random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))])
2024-07-24 21:03:38,135:INFO:save_model() successfully completed......................................
2024-07-24 21:28:45,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:28:45,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:28:45,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:28:45,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:28:45,352:INFO:Initializing load_model()
2024-07-24 21:28:45,352:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:28:45,627:INFO:Initializing load_model()
2024-07-24 21:28:45,627:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:28:45,672:INFO:Initializing predict_model()
2024-07-24 21:28:45,672:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1437b0590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1246ba840>)
2024-07-24 21:28:45,672:INFO:Checking exceptions
2024-07-24 21:28:45,672:INFO:Preloading libraries
2024-07-24 21:28:45,672:INFO:Set up data.
2024-07-24 21:28:45,674:INFO:Set up index.
2024-07-24 21:29:58,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:29:58,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:29:58,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:29:58,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:29:58,991:INFO:Initializing load_model()
2024-07-24 21:29:58,991:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:29:59,184:INFO:Initializing load_model()
2024-07-24 21:29:59,184:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:29:59,225:INFO:Initializing predict_model()
2024-07-24 21:29:59,225:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x150bb2d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1317ba840>)
2024-07-24 21:29:59,225:INFO:Checking exceptions
2024-07-24 21:29:59,225:INFO:Preloading libraries
2024-07-24 21:29:59,225:INFO:Set up data.
2024-07-24 21:29:59,227:INFO:Set up index.
2024-07-24 21:31:03,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:03,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:03,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:03,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:03,440:INFO:Initializing load_model()
2024-07-24 21:31:03,440:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:03,637:INFO:Initializing load_model()
2024-07-24 21:31:03,637:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:03,676:INFO:Initializing predict_model()
2024-07-24 21:31:03,676:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16deb0610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1600ba840>)
2024-07-24 21:31:03,676:INFO:Checking exceptions
2024-07-24 21:31:03,676:INFO:Preloading libraries
2024-07-24 21:31:03,676:INFO:Set up data.
2024-07-24 21:31:03,678:INFO:Set up index.
2024-07-24 21:31:18,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:18,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:18,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:18,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:18,978:INFO:Initializing load_model()
2024-07-24 21:31:18,978:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:19,170:INFO:Initializing load_model()
2024-07-24 21:31:19,171:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:19,210:INFO:Initializing predict_model()
2024-07-24 21:31:19,210:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170ab2890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x130aba840>)
2024-07-24 21:31:19,210:INFO:Checking exceptions
2024-07-24 21:31:19,211:INFO:Preloading libraries
2024-07-24 21:31:19,211:INFO:Set up data.
2024-07-24 21:31:19,213:INFO:Set up index.
2024-07-24 21:31:29,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:29,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:29,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:29,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:29,597:INFO:Initializing load_model()
2024-07-24 21:31:29,597:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:29,790:INFO:Initializing load_model()
2024-07-24 21:31:29,790:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:29,830:INFO:Initializing predict_model()
2024-07-24 21:31:29,830:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16cfb2450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x127cba840>)
2024-07-24 21:31:29,830:INFO:Checking exceptions
2024-07-24 21:31:29,830:INFO:Preloading libraries
2024-07-24 21:31:29,830:INFO:Set up data.
2024-07-24 21:31:29,833:INFO:Set up index.
2024-07-24 21:31:46,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:46,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:46,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:46,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:46,351:INFO:Initializing load_model()
2024-07-24 21:31:46,351:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:46,545:INFO:Initializing load_model()
2024-07-24 21:31:46,545:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:46,585:INFO:Initializing predict_model()
2024-07-24 21:31:46,585:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x172bb26d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1538ba840>)
2024-07-24 21:31:46,585:INFO:Checking exceptions
2024-07-24 21:31:46,585:INFO:Preloading libraries
2024-07-24 21:31:46,585:INFO:Set up data.
2024-07-24 21:31:46,587:INFO:Set up index.
2024-07-24 23:04:42,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:04:42,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:04:42,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:04:42,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:04:42,630:INFO:Initializing load_model()
2024-07-24 23:04:42,630:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:04:42,891:INFO:Initializing load_model()
2024-07-24 23:04:42,891:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:04:42,933:INFO:Initializing predict_model()
2024-07-24 23:04:42,933:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14dcb0250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1361ba840>)
2024-07-24 23:04:42,933:INFO:Checking exceptions
2024-07-24 23:04:42,933:INFO:Preloading libraries
2024-07-24 23:04:42,933:INFO:Set up data.
2024-07-24 23:04:42,935:INFO:Set up index.
2024-07-24 23:07:20,524:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:20,525:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:20,525:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:20,525:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:20,671:INFO:Initializing load_model()
2024-07-24 23:07:20,671:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:07:20,919:INFO:Initializing load_model()
2024-07-24 23:07:20,919:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:07:20,961:INFO:Initializing predict_model()
2024-07-24 23:07:20,961:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1456b0290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1252ba840>)
2024-07-24 23:07:20,961:INFO:Checking exceptions
2024-07-24 23:07:20,961:INFO:Preloading libraries
2024-07-24 23:07:20,962:INFO:Set up data.
2024-07-24 23:07:20,964:INFO:Set up index.
2024-07-24 23:07:42,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:42,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:42,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:42,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:42,693:INFO:Initializing load_model()
2024-07-24 23:07:42,693:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:07:42,931:INFO:Initializing load_model()
2024-07-24 23:07:42,931:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:07:42,979:INFO:Initializing predict_model()
2024-07-24 23:07:42,979:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1731b01d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x163dba840>)
2024-07-24 23:07:42,979:INFO:Checking exceptions
2024-07-24 23:07:42,979:INFO:Preloading libraries
2024-07-24 23:07:42,979:INFO:Set up data.
2024-07-24 23:07:42,981:INFO:Set up index.
2024-07-24 23:07:59,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:59,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:59,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:59,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:59,090:INFO:Initializing load_model()
2024-07-24 23:07:59,090:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:07:59,283:INFO:Initializing load_model()
2024-07-24 23:07:59,283:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:07:59,323:INFO:Initializing predict_model()
2024-07-24 23:07:59,323:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16d1b0290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12f3ba840>)
2024-07-24 23:07:59,323:INFO:Checking exceptions
2024-07-24 23:07:59,323:INFO:Preloading libraries
2024-07-24 23:07:59,323:INFO:Set up data.
2024-07-24 23:07:59,326:INFO:Set up index.
2024-07-24 23:08:15,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:15,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:15,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:15,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:15,125:INFO:Initializing load_model()
2024-07-24 23:08:15,125:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:08:15,318:INFO:Initializing load_model()
2024-07-24 23:08:15,318:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:08:15,358:INFO:Initializing predict_model()
2024-07-24 23:08:15,358:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1650b0050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13f2ba840>)
2024-07-24 23:08:15,358:INFO:Checking exceptions
2024-07-24 23:08:15,358:INFO:Preloading libraries
2024-07-24 23:08:15,358:INFO:Set up data.
2024-07-24 23:08:15,361:INFO:Set up index.
2024-07-24 23:08:34,430:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:34,430:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:34,430:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:34,430:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:34,510:INFO:Initializing load_model()
2024-07-24 23:08:34,510:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:08:34,700:INFO:Initializing load_model()
2024-07-24 23:08:34,700:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:08:34,745:INFO:Initializing predict_model()
2024-07-24 23:08:34,745:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13c0eaa10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11e1ba840>)
2024-07-24 23:08:34,745:INFO:Checking exceptions
2024-07-24 23:08:34,745:INFO:Preloading libraries
2024-07-24 23:08:34,745:INFO:Set up data.
2024-07-24 23:08:34,747:INFO:Set up index.
2024-07-24 23:08:58,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:58,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:58,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:58,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:59,080:INFO:Initializing load_model()
2024-07-24 23:08:59,080:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:08:59,276:INFO:Initializing load_model()
2024-07-24 23:08:59,276:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:08:59,318:INFO:Initializing predict_model()
2024-07-24 23:08:59,318:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f6b2d90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x138cba840>)
2024-07-24 23:08:59,318:INFO:Checking exceptions
2024-07-24 23:08:59,318:INFO:Preloading libraries
2024-07-24 23:08:59,318:INFO:Set up data.
2024-07-24 23:08:59,320:INFO:Set up index.
2024-07-25 08:14:52,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:14:52,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:14:52,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:14:52,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:14:52,797:INFO:Initializing load_model()
2024-07-25 08:14:52,797:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:14:53,070:INFO:Initializing load_model()
2024-07-25 08:14:53,070:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:14:53,114:INFO:Initializing predict_model()
2024-07-25 08:14:53,114:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1511b04d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1276ba840>)
2024-07-25 08:14:53,114:INFO:Checking exceptions
2024-07-25 08:14:53,114:INFO:Preloading libraries
2024-07-25 08:14:53,114:INFO:Set up data.
2024-07-25 08:14:53,116:INFO:Set up index.
2024-07-25 08:15:04,742:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:04,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:04,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:04,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:04,823:INFO:Initializing load_model()
2024-07-25 08:15:04,823:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:15:05,018:INFO:Initializing load_model()
2024-07-25 08:15:05,018:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:15:05,069:INFO:Initializing predict_model()
2024-07-25 08:15:05,069:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1723b0290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Extra Trees Regressor',
                                                ExtraTreesRegressor(n_jobs=-1,
                                                                    random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x132fba840>)
2024-07-25 08:15:05,069:INFO:Checking exceptions
2024-07-25 08:15:05,069:INFO:Preloading libraries
2024-07-25 08:15:05,070:INFO:Set up data.
2024-07-25 08:15:05,072:INFO:Set up index.
2024-07-25 08:15:19,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:19,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:19,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:19,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:19,453:INFO:Initializing load_model()
2024-07-25 08:15:19,453:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:15:19,645:INFO:Initializing load_model()
2024-07-25 08:15:19,645:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:15:19,684:INFO:Initializing predict_model()
2024-07-25 08:15:19,684:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1650b0310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Extra Trees Regressor',
                                                ExtraTreesRegressor(n_jobs=-1,
                                                                    random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fbba840>)
2024-07-25 08:15:19,684:INFO:Checking exceptions
2024-07-25 08:15:19,684:INFO:Preloading libraries
2024-07-25 08:15:19,685:INFO:Set up data.
2024-07-25 08:15:19,687:INFO:Set up index.
2024-07-25 08:15:42,337:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:42,338:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:42,338:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:42,338:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:42,456:INFO:Initializing load_model()
2024-07-25 08:15:42,456:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:15:42,703:INFO:Initializing load_model()
2024-07-25 08:15:42,703:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:15:42,746:INFO:Initializing predict_model()
2024-07-25 08:15:42,746:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1473b0190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Extra Trees Regressor',
                                                ExtraTreesRegressor(n_jobs=-1,
                                                                    random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1309ba840>)
2024-07-25 08:15:42,746:INFO:Checking exceptions
2024-07-25 08:15:42,746:INFO:Preloading libraries
2024-07-25 08:15:42,746:INFO:Set up data.
2024-07-25 08:15:42,749:INFO:Set up index.
2024-07-25 08:21:38,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:21:38,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:21:38,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:21:38,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:21:38,575:INFO:Initializing load_model()
2024-07-25 08:21:38,575:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:21:38,822:INFO:Initializing load_model()
2024-07-25 08:21:38,822:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:21:38,865:INFO:Initializing predict_model()
2024-07-25 08:21:38,865:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x132eb05d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11acce840>)
2024-07-25 08:21:38,865:INFO:Checking exceptions
2024-07-25 08:21:38,865:INFO:Preloading libraries
2024-07-25 08:21:38,865:INFO:Set up data.
2024-07-25 08:21:38,867:INFO:Set up index.
2024-07-25 08:22:02,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:22:02,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:22:02,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:22:02,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:22:02,358:INFO:Initializing load_model()
2024-07-25 08:22:02,358:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:22:02,547:INFO:Initializing load_model()
2024-07-25 08:22:02,547:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:22:02,760:INFO:Initializing predict_model()
2024-07-25 08:22:02,761:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ecb0090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11efba840>)
2024-07-25 08:22:02,761:INFO:Checking exceptions
2024-07-25 08:22:02,761:INFO:Preloading libraries
2024-07-25 08:22:02,761:INFO:Set up data.
2024-07-25 08:22:02,768:INFO:Set up index.
2024-07-25 08:23:42,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:23:42,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:23:42,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:23:42,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:23:42,422:INFO:Initializing load_model()
2024-07-25 08:23:42,422:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:23:42,695:INFO:Initializing load_model()
2024-07-25 08:23:42,695:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:23:42,737:INFO:Initializing predict_model()
2024-07-25 08:23:42,737:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1614b0350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1319ba840>)
2024-07-25 08:23:42,737:INFO:Checking exceptions
2024-07-25 08:23:42,737:INFO:Preloading libraries
2024-07-25 08:23:42,737:INFO:Set up data.
2024-07-25 08:23:42,739:INFO:Set up index.
2024-07-25 08:24:44,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:24:44,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:24:44,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:24:44,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:24:44,638:INFO:Initializing load_model()
2024-07-25 08:24:44,638:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:24:44,829:INFO:Initializing load_model()
2024-07-25 08:24:44,829:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:24:44,868:INFO:Initializing predict_model()
2024-07-25 08:24:44,868:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16dcb08d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1360ba840>)
2024-07-25 08:24:44,868:INFO:Checking exceptions
2024-07-25 08:24:44,868:INFO:Preloading libraries
2024-07-25 08:24:44,868:INFO:Set up data.
2024-07-25 08:24:44,870:INFO:Set up index.
2024-07-25 08:27:03,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:27:03,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:27:03,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:27:03,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:27:03,678:INFO:Initializing load_model()
2024-07-25 08:27:03,678:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:27:04,034:INFO:Initializing load_model()
2024-07-25 08:27:04,034:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:27:04,174:INFO:Initializing predict_model()
2024-07-25 08:27:04,174:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16fcb27d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x145aba840>)
2024-07-25 08:27:04,174:INFO:Checking exceptions
2024-07-25 08:27:04,174:INFO:Preloading libraries
2024-07-25 08:27:04,175:INFO:Set up data.
2024-07-25 08:27:04,220:INFO:Set up index.
2024-07-25 08:28:49,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:28:49,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:28:49,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:28:49,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:28:49,764:INFO:Initializing load_model()
2024-07-25 08:28:49,764:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:28:50,073:INFO:Initializing load_model()
2024-07-25 08:28:50,073:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:28:50,135:INFO:Initializing predict_model()
2024-07-25 08:28:50,136:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1723b2210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1597be7a0>)
2024-07-25 08:28:50,136:INFO:Checking exceptions
2024-07-25 08:28:50,136:INFO:Preloading libraries
2024-07-25 08:28:50,136:INFO:Set up data.
2024-07-25 08:28:50,154:INFO:Set up index.
2024-07-25 10:23:32,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:23:32,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:23:32,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:23:32,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:23:33,254:INFO:Initializing load_model()
2024-07-25 10:23:33,254:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:23:33,691:INFO:Initializing load_model()
2024-07-25 10:23:33,691:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:23:33,736:INFO:Initializing predict_model()
2024-07-25 10:23:33,736:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16d6b2610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12f8ba840>)
2024-07-25 10:23:33,736:INFO:Checking exceptions
2024-07-25 10:23:33,736:INFO:Preloading libraries
2024-07-25 10:23:33,736:INFO:Set up data.
2024-07-25 10:23:33,738:INFO:Set up index.
2024-07-25 10:24:44,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:24:44,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:24:44,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:24:44,019:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:24:44,136:INFO:Initializing load_model()
2024-07-25 10:24:44,136:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:24:44,396:INFO:Initializing load_model()
2024-07-25 10:24:44,396:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:24:44,438:INFO:Initializing predict_model()
2024-07-25 10:24:44,438:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1619b0550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x153aba840>)
2024-07-25 10:24:44,438:INFO:Checking exceptions
2024-07-25 10:24:44,438:INFO:Preloading libraries
2024-07-25 10:24:44,438:INFO:Set up data.
2024-07-25 10:24:44,440:INFO:Set up index.
2024-07-25 10:38:32,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:38:32,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:38:32,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:38:32,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:38:32,515:INFO:Initializing load_model()
2024-07-25 10:38:32,515:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:38:32,788:INFO:Initializing load_model()
2024-07-25 10:38:32,788:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:38:32,837:INFO:Initializing predict_model()
2024-07-25 10:38:32,837:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1477b0110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1259ba840>)
2024-07-25 10:38:32,837:INFO:Checking exceptions
2024-07-25 10:38:32,837:INFO:Preloading libraries
2024-07-25 10:38:32,837:INFO:Set up data.
2024-07-25 10:38:32,839:INFO:Set up index.
2024-07-25 10:40:10,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:40:10,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:40:10,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:40:10,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:40:10,749:INFO:Initializing load_model()
2024-07-25 10:40:10,749:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:40:11,001:INFO:Initializing load_model()
2024-07-25 10:40:11,001:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:40:11,044:INFO:Initializing predict_model()
2024-07-25 10:40:11,044:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x12900e610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11e86e840>)
2024-07-25 10:40:11,044:INFO:Checking exceptions
2024-07-25 10:40:11,044:INFO:Preloading libraries
2024-07-25 10:40:11,044:INFO:Set up data.
2024-07-25 10:40:11,047:INFO:Set up index.
2024-07-25 11:25:47,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:25:47,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:25:47,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:25:47,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:25:47,865:INFO:Initializing load_model()
2024-07-25 11:25:47,865:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 11:25:48,140:INFO:Initializing load_model()
2024-07-25 11:25:48,140:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 11:25:48,183:INFO:Initializing predict_model()
2024-07-25 11:25:48,184:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15fcb2990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Extra Trees Regressor',
                                                ExtraTreesRegressor(n_jobs=-1,
                                                                    random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12f9be7a0>)
2024-07-25 11:25:48,184:INFO:Checking exceptions
2024-07-25 11:25:48,184:INFO:Preloading libraries
2024-07-25 11:25:48,184:INFO:Set up data.
2024-07-25 11:25:48,186:INFO:Set up index.
2024-07-25 11:28:58,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:28:58,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:28:58,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:28:58,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:28:59,035:INFO:Initializing load_model()
2024-07-25 11:28:59,035:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 11:28:59,291:INFO:Initializing load_model()
2024-07-25 11:28:59,291:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 11:28:59,335:INFO:Initializing predict_model()
2024-07-25 11:28:59,335:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14ccb04d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11aa727a0>)
2024-07-25 11:28:59,335:INFO:Checking exceptions
2024-07-25 11:28:59,335:INFO:Preloading libraries
2024-07-25 11:28:59,335:INFO:Set up data.
2024-07-25 11:28:59,337:INFO:Set up index.
2024-07-25 11:34:01,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:34:01,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:34:01,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:34:01,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:34:01,510:INFO:Initializing load_model()
2024-07-25 11:34:01,510:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 11:34:01,778:INFO:Initializing load_model()
2024-07-25 11:34:01,778:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 11:34:01,822:INFO:Initializing predict_model()
2024-07-25 11:34:01,822:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14eab0190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11e9be7a0>)
2024-07-25 11:34:01,822:INFO:Checking exceptions
2024-07-25 11:34:01,822:INFO:Preloading libraries
2024-07-25 11:34:01,822:INFO:Set up data.
2024-07-25 11:34:01,824:INFO:Set up index.
2024-12-08 14:08:22,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:08:22,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:08:22,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:08:22,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:11:07,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:11:07,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:11:07,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:11:07,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:11:58,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:11:58,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:11:58,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:11:58,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:18:23,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:18:23,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:18:23,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:18:23,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:18:58,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:18:58,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:18:58,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:18:58,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:19:23,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:19:23,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:19:23,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:19:23,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:19:23,333:INFO:Initializing load_model()
2024-12-08 14:19:23,333:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-12-08 14:19:23,334:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:19:23,337:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:19:23,339:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:19:23,340:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:19:23,721:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator DecisionTreeRegressor from version 1.4.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:19:23,721:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator RandomForestRegressor from version 1.4.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:19:23,721:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator GradientBoostingRegressor from version 1.4.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:19:23,721:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator LinearRegression from version 1.4.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:20:35,765:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:20:35,766:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:20:35,766:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:20:35,766:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 14:20:36,261:INFO:Initializing load_model()
2024-12-08 14:20:36,261:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-12-08 14:20:36,262:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:20:36,264:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:20:36,266:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:20:36,267:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:20:36,301:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator DecisionTreeRegressor from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:20:36,301:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator RandomForestRegressor from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:20:36,301:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator GradientBoostingRegressor from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 14:20:36,301:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator LinearRegression from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 17:22:43,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 17:22:43,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 17:22:43,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 17:22:43,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 17:22:43,644:INFO:PyCaret RegressionExperiment
2024-12-08 17:22:43,644:INFO:Logging name: reg-default-name
2024-12-08 17:22:43,644:INFO:ML Usecase: MLUsecase.REGRESSION
2024-12-08 17:22:43,644:INFO:version 3.3.1
2024-12-08 17:22:43,644:INFO:Initializing setup()
2024-12-08 17:22:43,644:INFO:self.USI: 6e59
2024-12-08 17:22:43,644:INFO:self._variable_keys: {'exp_name_log', 'gpu_param', 'html_param', 'idx', 'USI', 'y_train', 'log_plots_param', '_available_plots', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', 'data', 'n_jobs_param', 'seed', 'fold_generator', 'target_param', 'y_test', 'fold_groups_param', 'transform_target_param', 'y', 'X_test', 'logging_param', 'exp_id', 'X', 'X_train', 'memory', 'fold_shuffle_param'}
2024-12-08 17:22:43,644:INFO:Checking environment
2024-12-08 17:22:43,644:INFO:python_version: 3.11.8
2024-12-08 17:22:43,644:INFO:python_build: ('main', 'Feb 16 2024 20:49:36')
2024-12-08 17:22:43,644:INFO:machine: arm64
2024-12-08 17:22:43,644:INFO:platform: macOS-15.1-arm64-arm-64bit
2024-12-08 17:22:43,644:INFO:Memory: svmem(total=17179869184, available=5973950464, percent=65.2, used=6917799936, free=1000439808, active=4848058368, inactive=4761845760, wired=2069741568)
2024-12-08 17:22:43,644:INFO:Physical Core: 8
2024-12-08 17:22:43,644:INFO:Logical Core: 8
2024-12-08 17:22:43,644:INFO:Checking libraries
2024-12-08 17:22:43,644:INFO:System:
2024-12-08 17:22:43,645:INFO:    python: 3.11.8 | packaged by conda-forge | (main, Feb 16 2024, 20:49:36) [Clang 16.0.6 ]
2024-12-08 17:22:43,645:INFO:executable: /opt/anaconda3/bin/python
2024-12-08 17:22:43,645:INFO:   machine: macOS-15.1-arm64-arm-64bit
2024-12-08 17:22:43,645:INFO:PyCaret required dependencies:
2024-12-08 17:22:43,928:INFO:                 pip: 23.3.1
2024-12-08 17:22:43,928:INFO:          setuptools: 68.2.2
2024-12-08 17:22:43,928:INFO:             pycaret: 3.3.1
2024-12-08 17:22:43,928:INFO:             IPython: 8.20.0
2024-12-08 17:22:43,928:INFO:          ipywidgets: 7.6.5
2024-12-08 17:22:43,928:INFO:                tqdm: 4.65.0
2024-12-08 17:22:43,928:INFO:               numpy: 1.26.4
2024-12-08 17:22:43,928:INFO:              pandas: 2.1.4
2024-12-08 17:22:43,928:INFO:              jinja2: 3.1.3
2024-12-08 17:22:43,928:INFO:               scipy: 1.11.4
2024-12-08 17:22:43,928:INFO:              joblib: 1.2.0
2024-12-08 17:22:43,928:INFO:             sklearn: 1.4.2
2024-12-08 17:22:43,928:INFO:                pyod: 1.1.3
2024-12-08 17:22:43,928:INFO:            imblearn: 0.12.2
2024-12-08 17:22:43,928:INFO:   category_encoders: 2.6.3
2024-12-08 17:22:43,928:INFO:            lightgbm: 4.3.0
2024-12-08 17:22:43,928:INFO:               numba: 0.59.0
2024-12-08 17:22:43,928:INFO:            requests: 2.31.0
2024-12-08 17:22:43,928:INFO:          matplotlib: 3.7.5
2024-12-08 17:22:43,928:INFO:          scikitplot: 0.3.7
2024-12-08 17:22:43,928:INFO:         yellowbrick: 1.5
2024-12-08 17:22:43,928:INFO:              plotly: 5.22.0
2024-12-08 17:22:43,928:INFO:    plotly-resampler: Not installed
2024-12-08 17:22:43,928:INFO:             kaleido: 0.2.1
2024-12-08 17:22:43,928:INFO:           schemdraw: 0.15
2024-12-08 17:22:43,928:INFO:         statsmodels: 0.14.0
2024-12-08 17:22:43,928:INFO:              sktime: 0.26.0
2024-12-08 17:22:43,928:INFO:               tbats: 1.1.3
2024-12-08 17:22:43,928:INFO:            pmdarima: 2.0.4
2024-12-08 17:22:43,928:INFO:              psutil: 5.9.0
2024-12-08 17:22:43,928:INFO:          markupsafe: 2.1.3
2024-12-08 17:22:43,928:INFO:             pickle5: Not installed
2024-12-08 17:22:43,928:INFO:         cloudpickle: 2.2.1
2024-12-08 17:22:43,928:INFO:         deprecation: 2.1.0
2024-12-08 17:22:43,928:INFO:              xxhash: 3.4.1
2024-12-08 17:22:43,928:INFO:           wurlitzer: 3.0.2
2024-12-08 17:22:43,928:INFO:PyCaret optional dependencies:
2024-12-08 17:22:43,951:INFO:                shap: 0.46.0
2024-12-08 17:22:43,951:INFO:           interpret: Not installed
2024-12-08 17:22:43,951:INFO:                umap: 0.5.5
2024-12-08 17:22:43,951:INFO:     ydata_profiling: Not installed
2024-12-08 17:22:43,951:INFO:  explainerdashboard: Not installed
2024-12-08 17:22:43,951:INFO:             autoviz: Not installed
2024-12-08 17:22:43,951:INFO:           fairlearn: Not installed
2024-12-08 17:22:43,951:INFO:          deepchecks: Not installed
2024-12-08 17:22:43,951:INFO:             xgboost: 2.1.0
2024-12-08 17:22:43,951:INFO:            catboost: Not installed
2024-12-08 17:22:43,951:INFO:              kmodes: Not installed
2024-12-08 17:22:43,952:INFO:             mlxtend: Not installed
2024-12-08 17:22:43,952:INFO:       statsforecast: Not installed
2024-12-08 17:22:43,952:INFO:        tune_sklearn: Not installed
2024-12-08 17:22:43,952:INFO:                 ray: Not installed
2024-12-08 17:22:43,952:INFO:            hyperopt: Not installed
2024-12-08 17:22:43,952:INFO:              optuna: Not installed
2024-12-08 17:22:43,952:INFO:               skopt: Not installed
2024-12-08 17:22:43,952:INFO:              mlflow: 2.13.0
2024-12-08 17:22:43,952:INFO:              gradio: Not installed
2024-12-08 17:22:43,952:INFO:             fastapi: Not installed
2024-12-08 17:22:43,952:INFO:             uvicorn: 0.30.3
2024-12-08 17:22:43,952:INFO:              m2cgen: Not installed
2024-12-08 17:22:43,952:INFO:           evidently: Not installed
2024-12-08 17:22:43,952:INFO:               fugue: Not installed
2024-12-08 17:22:43,952:INFO:           streamlit: 1.30.0
2024-12-08 17:22:43,952:INFO:             prophet: Not installed
2024-12-08 17:22:43,952:INFO:None
2024-12-08 17:22:43,952:INFO:Set up data.
2024-12-08 17:22:43,954:INFO:Set up folding strategy.
2024-12-08 17:22:43,954:INFO:Set up train/test split.
2024-12-08 17:22:43,958:INFO:Set up index.
2024-12-08 17:22:43,958:INFO:Assigning column types.
2024-12-08 17:22:43,959:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-08 17:22:43,959:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-08 17:22:43,961:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-08 17:22:43,962:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-08 17:22:43,985:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,002:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,002:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,003:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,005:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,007:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,029:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,045:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,046:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,047:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-12-08 17:22:44,048:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,050:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,072:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,089:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,089:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,092:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,093:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,115:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,133:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,133:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,134:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-12-08 17:22:44,138:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,159:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,176:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,176:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,181:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,203:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,220:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,220:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,221:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-12-08 17:22:44,246:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,264:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,264:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,290:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,307:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,309:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,310:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,310:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-08 17:22:44,335:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,352:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,379:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:22:44,396:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,398:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-12-08 17:22:44,440:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,484:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,485:INFO:Preparing preprocessing pipeline...
2024-12-08 17:22:44,485:INFO:Set up simple imputation.
2024-12-08 17:22:44,486:INFO:Set up encoding of ordinal features.
2024-12-08 17:22:44,487:INFO:Set up encoding of categorical features.
2024-12-08 17:22:44,487:INFO:Set up polynomial features.
2024-12-08 17:22:44,487:INFO:Set up removing multicollinearity.
2024-12-08 17:22:44,487:INFO:Set up column transformation.
2024-12-08 17:22:44,487:INFO:Set up feature normalization.
2024-12-08 17:22:44,574:INFO:Finished creating preprocessing pipeline.
2024-12-08 17:22:44,584:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gp/fp0z7sz5063d4vng25fzsxcm0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(stra...
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(degree=1,
                                                                   include_bias=False))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-12-08 17:22:44,584:INFO:Creating final display dataframe.
2024-12-08 17:22:44,705:INFO:Setup _display_container:                     Description             Value
0                    Session id                 9
1                        Target             price
2                   Target type        Regression
3           Original data shape         (3405, 9)
4        Transformed data shape        (3405, 34)
5   Transformed train set shape        (2383, 34)
6    Transformed test set shape        (1022, 34)
7              Numeric features                 4
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15          Polynomial features              True
16            Polynomial degree                 1
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.9
19               Transformation              True
20        Transformation method       yeo-johnson
21                    Normalize              True
22             Normalize method            zscore
23               Fold Generator             KFold
24                  Fold Number                10
25                     CPU Jobs                -1
26                      Use GPU             False
27               Log Experiment             False
28              Experiment Name  reg-default-name
29                          USI              6e59
2024-12-08 17:22:44,752:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,799:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:22:44,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:22:44,800:INFO:setup() successfully completed in 1.16s...............
2024-12-08 17:22:44,800:INFO:Initializing compare_models()
2024-12-08 17:22:44,800:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MAPE, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAPE', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-08 17:22:44,800:INFO:Checking exceptions
2024-12-08 17:22:44,801:INFO:Preparing display monitor
2024-12-08 17:22:44,823:INFO:Initializing Linear Regression
2024-12-08 17:22:44,823:INFO:Total runtime is 7.545948028564453e-06 minutes
2024-12-08 17:22:44,825:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:44,825:INFO:Initializing create_model()
2024-12-08 17:22:44,825:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:44,825:INFO:Checking exceptions
2024-12-08 17:22:44,825:INFO:Importing libraries
2024-12-08 17:22:44,825:INFO:Copying training dataset
2024-12-08 17:22:44,829:INFO:Defining folds
2024-12-08 17:22:44,829:INFO:Declaring metric variables
2024-12-08 17:22:44,830:INFO:Importing untrained model
2024-12-08 17:22:44,831:INFO:Linear Regression Imported successfully
2024-12-08 17:22:44,834:INFO:Starting cross validation
2024-12-08 17:22:44,840:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:48,352:INFO:Calculating mean and std
2024-12-08 17:22:48,355:INFO:Creating metrics dataframe
2024-12-08 17:22:48,359:INFO:Uploading results into container
2024-12-08 17:22:48,359:INFO:Uploading model into container now
2024-12-08 17:22:48,360:INFO:_master_model_container: 1
2024-12-08 17:22:48,360:INFO:_display_container: 2
2024-12-08 17:22:48,360:INFO:LinearRegression(n_jobs=-1)
2024-12-08 17:22:48,360:INFO:create_model() successfully completed......................................
2024-12-08 17:22:48,441:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:48,441:INFO:Creating metrics dataframe
2024-12-08 17:22:48,444:INFO:Initializing Lasso Regression
2024-12-08 17:22:48,444:INFO:Total runtime is 0.06035843292872111 minutes
2024-12-08 17:22:48,446:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:48,446:INFO:Initializing create_model()
2024-12-08 17:22:48,446:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:48,446:INFO:Checking exceptions
2024-12-08 17:22:48,446:INFO:Importing libraries
2024-12-08 17:22:48,446:INFO:Copying training dataset
2024-12-08 17:22:48,448:INFO:Defining folds
2024-12-08 17:22:48,448:INFO:Declaring metric variables
2024-12-08 17:22:48,449:INFO:Importing untrained model
2024-12-08 17:22:48,450:INFO:Lasso Regression Imported successfully
2024-12-08 17:22:48,453:INFO:Starting cross validation
2024-12-08 17:22:48,454:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:48,653:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.075e+11, tolerance: 4.810e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:22:48,653:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.097e+11, tolerance: 4.685e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:22:48,673:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.185e+11, tolerance: 4.745e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:22:48,677:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.012e+11, tolerance: 4.605e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:22:48,679:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.286e+11, tolerance: 4.747e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:22:48,682:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.244e+11, tolerance: 4.839e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:22:48,686:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.191e+11, tolerance: 4.722e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:22:48,699:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.061e+11, tolerance: 4.765e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:22:48,816:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.260e+11, tolerance: 4.786e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:22:48,819:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.057e+11, tolerance: 4.891e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:22:48,837:INFO:Calculating mean and std
2024-12-08 17:22:48,838:INFO:Creating metrics dataframe
2024-12-08 17:22:48,839:INFO:Uploading results into container
2024-12-08 17:22:48,839:INFO:Uploading model into container now
2024-12-08 17:22:48,839:INFO:_master_model_container: 2
2024-12-08 17:22:48,840:INFO:_display_container: 2
2024-12-08 17:22:48,840:INFO:Lasso(random_state=9)
2024-12-08 17:22:48,840:INFO:create_model() successfully completed......................................
2024-12-08 17:22:48,900:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:48,900:INFO:Creating metrics dataframe
2024-12-08 17:22:48,902:INFO:Initializing Ridge Regression
2024-12-08 17:22:48,902:INFO:Total runtime is 0.06799128055572509 minutes
2024-12-08 17:22:48,904:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:48,904:INFO:Initializing create_model()
2024-12-08 17:22:48,904:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:48,904:INFO:Checking exceptions
2024-12-08 17:22:48,904:INFO:Importing libraries
2024-12-08 17:22:48,904:INFO:Copying training dataset
2024-12-08 17:22:48,906:INFO:Defining folds
2024-12-08 17:22:48,906:INFO:Declaring metric variables
2024-12-08 17:22:48,907:INFO:Importing untrained model
2024-12-08 17:22:48,908:INFO:Ridge Regression Imported successfully
2024-12-08 17:22:48,910:INFO:Starting cross validation
2024-12-08 17:22:48,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:49,138:INFO:Calculating mean and std
2024-12-08 17:22:49,139:INFO:Creating metrics dataframe
2024-12-08 17:22:49,139:INFO:Uploading results into container
2024-12-08 17:22:49,140:INFO:Uploading model into container now
2024-12-08 17:22:49,140:INFO:_master_model_container: 3
2024-12-08 17:22:49,140:INFO:_display_container: 2
2024-12-08 17:22:49,140:INFO:Ridge(random_state=9)
2024-12-08 17:22:49,140:INFO:create_model() successfully completed......................................
2024-12-08 17:22:49,194:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:49,194:INFO:Creating metrics dataframe
2024-12-08 17:22:49,197:INFO:Initializing Elastic Net
2024-12-08 17:22:49,197:INFO:Total runtime is 0.0729087988535563 minutes
2024-12-08 17:22:49,199:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:49,199:INFO:Initializing create_model()
2024-12-08 17:22:49,199:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:49,199:INFO:Checking exceptions
2024-12-08 17:22:49,199:INFO:Importing libraries
2024-12-08 17:22:49,199:INFO:Copying training dataset
2024-12-08 17:22:49,201:INFO:Defining folds
2024-12-08 17:22:49,201:INFO:Declaring metric variables
2024-12-08 17:22:49,202:INFO:Importing untrained model
2024-12-08 17:22:49,203:INFO:Elastic Net Imported successfully
2024-12-08 17:22:49,205:INFO:Starting cross validation
2024-12-08 17:22:49,206:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:49,422:INFO:Calculating mean and std
2024-12-08 17:22:49,423:INFO:Creating metrics dataframe
2024-12-08 17:22:49,424:INFO:Uploading results into container
2024-12-08 17:22:49,424:INFO:Uploading model into container now
2024-12-08 17:22:49,424:INFO:_master_model_container: 4
2024-12-08 17:22:49,424:INFO:_display_container: 2
2024-12-08 17:22:49,425:INFO:ElasticNet(random_state=9)
2024-12-08 17:22:49,425:INFO:create_model() successfully completed......................................
2024-12-08 17:22:49,480:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:49,480:INFO:Creating metrics dataframe
2024-12-08 17:22:49,483:INFO:Initializing Least Angle Regression
2024-12-08 17:22:49,483:INFO:Total runtime is 0.07766743501027425 minutes
2024-12-08 17:22:49,484:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:49,484:INFO:Initializing create_model()
2024-12-08 17:22:49,484:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:49,484:INFO:Checking exceptions
2024-12-08 17:22:49,485:INFO:Importing libraries
2024-12-08 17:22:49,485:INFO:Copying training dataset
2024-12-08 17:22:49,486:INFO:Defining folds
2024-12-08 17:22:49,487:INFO:Declaring metric variables
2024-12-08 17:22:49,488:INFO:Importing untrained model
2024-12-08 17:22:49,489:INFO:Least Angle Regression Imported successfully
2024-12-08 17:22:49,491:INFO:Starting cross validation
2024-12-08 17:22:49,492:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:49,726:INFO:Calculating mean and std
2024-12-08 17:22:49,727:INFO:Creating metrics dataframe
2024-12-08 17:22:49,728:INFO:Uploading results into container
2024-12-08 17:22:49,728:INFO:Uploading model into container now
2024-12-08 17:22:49,730:INFO:_master_model_container: 5
2024-12-08 17:22:49,730:INFO:_display_container: 2
2024-12-08 17:22:49,730:INFO:Lars(random_state=9)
2024-12-08 17:22:49,730:INFO:create_model() successfully completed......................................
2024-12-08 17:22:49,798:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:49,798:INFO:Creating metrics dataframe
2024-12-08 17:22:49,801:INFO:Initializing Lasso Least Angle Regression
2024-12-08 17:22:49,801:INFO:Total runtime is 0.08297231594721476 minutes
2024-12-08 17:22:49,802:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:49,803:INFO:Initializing create_model()
2024-12-08 17:22:49,803:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:49,804:INFO:Checking exceptions
2024-12-08 17:22:49,804:INFO:Importing libraries
2024-12-08 17:22:49,804:INFO:Copying training dataset
2024-12-08 17:22:49,806:INFO:Defining folds
2024-12-08 17:22:49,806:INFO:Declaring metric variables
2024-12-08 17:22:49,807:INFO:Importing untrained model
2024-12-08 17:22:49,808:INFO:Lasso Least Angle Regression Imported successfully
2024-12-08 17:22:49,811:INFO:Starting cross validation
2024-12-08 17:22:49,813:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:50,091:INFO:Calculating mean and std
2024-12-08 17:22:50,091:INFO:Creating metrics dataframe
2024-12-08 17:22:50,092:INFO:Uploading results into container
2024-12-08 17:22:50,093:INFO:Uploading model into container now
2024-12-08 17:22:50,093:INFO:_master_model_container: 6
2024-12-08 17:22:50,093:INFO:_display_container: 2
2024-12-08 17:22:50,093:INFO:LassoLars(random_state=9)
2024-12-08 17:22:50,094:INFO:create_model() successfully completed......................................
2024-12-08 17:22:50,151:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:50,152:INFO:Creating metrics dataframe
2024-12-08 17:22:50,155:INFO:Initializing Orthogonal Matching Pursuit
2024-12-08 17:22:50,155:INFO:Total runtime is 0.08887056509653726 minutes
2024-12-08 17:22:50,157:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:50,157:INFO:Initializing create_model()
2024-12-08 17:22:50,157:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:50,157:INFO:Checking exceptions
2024-12-08 17:22:50,157:INFO:Importing libraries
2024-12-08 17:22:50,157:INFO:Copying training dataset
2024-12-08 17:22:50,159:INFO:Defining folds
2024-12-08 17:22:50,159:INFO:Declaring metric variables
2024-12-08 17:22:50,160:INFO:Importing untrained model
2024-12-08 17:22:50,161:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-08 17:22:50,163:INFO:Starting cross validation
2024-12-08 17:22:50,164:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:50,389:INFO:Calculating mean and std
2024-12-08 17:22:50,389:INFO:Creating metrics dataframe
2024-12-08 17:22:50,390:INFO:Uploading results into container
2024-12-08 17:22:50,390:INFO:Uploading model into container now
2024-12-08 17:22:50,391:INFO:_master_model_container: 7
2024-12-08 17:22:50,391:INFO:_display_container: 2
2024-12-08 17:22:50,391:INFO:OrthogonalMatchingPursuit()
2024-12-08 17:22:50,391:INFO:create_model() successfully completed......................................
2024-12-08 17:22:50,446:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:50,446:INFO:Creating metrics dataframe
2024-12-08 17:22:50,450:INFO:Initializing Bayesian Ridge
2024-12-08 17:22:50,450:INFO:Total runtime is 0.09378815094629922 minutes
2024-12-08 17:22:50,451:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:50,452:INFO:Initializing create_model()
2024-12-08 17:22:50,452:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:50,452:INFO:Checking exceptions
2024-12-08 17:22:50,452:INFO:Importing libraries
2024-12-08 17:22:50,452:INFO:Copying training dataset
2024-12-08 17:22:50,454:INFO:Defining folds
2024-12-08 17:22:50,454:INFO:Declaring metric variables
2024-12-08 17:22:50,455:INFO:Importing untrained model
2024-12-08 17:22:50,456:INFO:Bayesian Ridge Imported successfully
2024-12-08 17:22:50,459:INFO:Starting cross validation
2024-12-08 17:22:50,463:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:50,715:INFO:Calculating mean and std
2024-12-08 17:22:50,715:INFO:Creating metrics dataframe
2024-12-08 17:22:50,716:INFO:Uploading results into container
2024-12-08 17:22:50,717:INFO:Uploading model into container now
2024-12-08 17:22:50,717:INFO:_master_model_container: 8
2024-12-08 17:22:50,717:INFO:_display_container: 2
2024-12-08 17:22:50,717:INFO:BayesianRidge()
2024-12-08 17:22:50,717:INFO:create_model() successfully completed......................................
2024-12-08 17:22:50,797:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:50,797:INFO:Creating metrics dataframe
2024-12-08 17:22:50,800:INFO:Initializing Passive Aggressive Regressor
2024-12-08 17:22:50,800:INFO:Total runtime is 0.09961971441904702 minutes
2024-12-08 17:22:50,801:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:50,801:INFO:Initializing create_model()
2024-12-08 17:22:50,802:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:50,802:INFO:Checking exceptions
2024-12-08 17:22:50,802:INFO:Importing libraries
2024-12-08 17:22:50,802:INFO:Copying training dataset
2024-12-08 17:22:50,803:INFO:Defining folds
2024-12-08 17:22:50,804:INFO:Declaring metric variables
2024-12-08 17:22:50,805:INFO:Importing untrained model
2024-12-08 17:22:50,806:INFO:Passive Aggressive Regressor Imported successfully
2024-12-08 17:22:50,808:INFO:Starting cross validation
2024-12-08 17:22:50,809:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:51,279:INFO:Calculating mean and std
2024-12-08 17:22:51,279:INFO:Creating metrics dataframe
2024-12-08 17:22:51,280:INFO:Uploading results into container
2024-12-08 17:22:51,280:INFO:Uploading model into container now
2024-12-08 17:22:51,281:INFO:_master_model_container: 9
2024-12-08 17:22:51,281:INFO:_display_container: 2
2024-12-08 17:22:51,281:INFO:PassiveAggressiveRegressor(random_state=9)
2024-12-08 17:22:51,281:INFO:create_model() successfully completed......................................
2024-12-08 17:22:51,335:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:51,335:INFO:Creating metrics dataframe
2024-12-08 17:22:51,338:INFO:Initializing Huber Regressor
2024-12-08 17:22:51,338:INFO:Total runtime is 0.10859284798304238 minutes
2024-12-08 17:22:51,340:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:51,340:INFO:Initializing create_model()
2024-12-08 17:22:51,340:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:51,340:INFO:Checking exceptions
2024-12-08 17:22:51,340:INFO:Importing libraries
2024-12-08 17:22:51,340:INFO:Copying training dataset
2024-12-08 17:22:51,342:INFO:Defining folds
2024-12-08 17:22:51,342:INFO:Declaring metric variables
2024-12-08 17:22:51,343:INFO:Importing untrained model
2024-12-08 17:22:51,344:INFO:Huber Regressor Imported successfully
2024-12-08 17:22:51,346:INFO:Starting cross validation
2024-12-08 17:22:51,347:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:51,647:INFO:Calculating mean and std
2024-12-08 17:22:51,647:INFO:Creating metrics dataframe
2024-12-08 17:22:51,648:INFO:Uploading results into container
2024-12-08 17:22:51,648:INFO:Uploading model into container now
2024-12-08 17:22:51,649:INFO:_master_model_container: 10
2024-12-08 17:22:51,649:INFO:_display_container: 2
2024-12-08 17:22:51,649:INFO:HuberRegressor()
2024-12-08 17:22:51,649:INFO:create_model() successfully completed......................................
2024-12-08 17:22:51,706:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:51,706:INFO:Creating metrics dataframe
2024-12-08 17:22:51,710:INFO:Initializing K Neighbors Regressor
2024-12-08 17:22:51,710:INFO:Total runtime is 0.1147867163022359 minutes
2024-12-08 17:22:51,712:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:51,712:INFO:Initializing create_model()
2024-12-08 17:22:51,712:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:51,712:INFO:Checking exceptions
2024-12-08 17:22:51,712:INFO:Importing libraries
2024-12-08 17:22:51,712:INFO:Copying training dataset
2024-12-08 17:22:51,714:INFO:Defining folds
2024-12-08 17:22:51,714:INFO:Declaring metric variables
2024-12-08 17:22:51,715:INFO:Importing untrained model
2024-12-08 17:22:51,716:INFO:K Neighbors Regressor Imported successfully
2024-12-08 17:22:51,718:INFO:Starting cross validation
2024-12-08 17:22:51,719:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:51,968:INFO:Calculating mean and std
2024-12-08 17:22:51,969:INFO:Creating metrics dataframe
2024-12-08 17:22:51,970:INFO:Uploading results into container
2024-12-08 17:22:51,970:INFO:Uploading model into container now
2024-12-08 17:22:51,970:INFO:_master_model_container: 11
2024-12-08 17:22:51,970:INFO:_display_container: 2
2024-12-08 17:22:51,970:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-08 17:22:51,970:INFO:create_model() successfully completed......................................
2024-12-08 17:22:52,029:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:52,029:INFO:Creating metrics dataframe
2024-12-08 17:22:52,033:INFO:Initializing Decision Tree Regressor
2024-12-08 17:22:52,033:INFO:Total runtime is 0.12016936540603636 minutes
2024-12-08 17:22:52,034:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:52,034:INFO:Initializing create_model()
2024-12-08 17:22:52,034:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:52,034:INFO:Checking exceptions
2024-12-08 17:22:52,035:INFO:Importing libraries
2024-12-08 17:22:52,035:INFO:Copying training dataset
2024-12-08 17:22:52,037:INFO:Defining folds
2024-12-08 17:22:52,037:INFO:Declaring metric variables
2024-12-08 17:22:52,038:INFO:Importing untrained model
2024-12-08 17:22:52,039:INFO:Decision Tree Regressor Imported successfully
2024-12-08 17:22:52,041:INFO:Starting cross validation
2024-12-08 17:22:52,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:52,288:INFO:Calculating mean and std
2024-12-08 17:22:52,289:INFO:Creating metrics dataframe
2024-12-08 17:22:52,290:INFO:Uploading results into container
2024-12-08 17:22:52,290:INFO:Uploading model into container now
2024-12-08 17:22:52,290:INFO:_master_model_container: 12
2024-12-08 17:22:52,290:INFO:_display_container: 2
2024-12-08 17:22:52,290:INFO:DecisionTreeRegressor(random_state=9)
2024-12-08 17:22:52,290:INFO:create_model() successfully completed......................................
2024-12-08 17:22:52,345:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:52,345:INFO:Creating metrics dataframe
2024-12-08 17:22:52,349:INFO:Initializing Random Forest Regressor
2024-12-08 17:22:52,349:INFO:Total runtime is 0.12543845176696775 minutes
2024-12-08 17:22:52,350:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:52,350:INFO:Initializing create_model()
2024-12-08 17:22:52,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:52,351:INFO:Checking exceptions
2024-12-08 17:22:52,351:INFO:Importing libraries
2024-12-08 17:22:52,351:INFO:Copying training dataset
2024-12-08 17:22:52,352:INFO:Defining folds
2024-12-08 17:22:52,352:INFO:Declaring metric variables
2024-12-08 17:22:52,353:INFO:Importing untrained model
2024-12-08 17:22:52,355:INFO:Random Forest Regressor Imported successfully
2024-12-08 17:22:52,357:INFO:Starting cross validation
2024-12-08 17:22:52,358:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:53,230:INFO:Calculating mean and std
2024-12-08 17:22:53,230:INFO:Creating metrics dataframe
2024-12-08 17:22:53,231:INFO:Uploading results into container
2024-12-08 17:22:53,231:INFO:Uploading model into container now
2024-12-08 17:22:53,231:INFO:_master_model_container: 13
2024-12-08 17:22:53,231:INFO:_display_container: 2
2024-12-08 17:22:53,232:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:22:53,232:INFO:create_model() successfully completed......................................
2024-12-08 17:22:53,295:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:53,295:INFO:Creating metrics dataframe
2024-12-08 17:22:53,300:INFO:Initializing Extra Trees Regressor
2024-12-08 17:22:53,300:INFO:Total runtime is 0.14127863248189287 minutes
2024-12-08 17:22:53,301:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:53,301:INFO:Initializing create_model()
2024-12-08 17:22:53,301:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:53,302:INFO:Checking exceptions
2024-12-08 17:22:53,302:INFO:Importing libraries
2024-12-08 17:22:53,302:INFO:Copying training dataset
2024-12-08 17:22:53,303:INFO:Defining folds
2024-12-08 17:22:53,303:INFO:Declaring metric variables
2024-12-08 17:22:53,304:INFO:Importing untrained model
2024-12-08 17:22:53,305:INFO:Extra Trees Regressor Imported successfully
2024-12-08 17:22:53,308:INFO:Starting cross validation
2024-12-08 17:22:53,309:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:54,108:INFO:Calculating mean and std
2024-12-08 17:22:54,109:INFO:Creating metrics dataframe
2024-12-08 17:22:54,110:INFO:Uploading results into container
2024-12-08 17:22:54,110:INFO:Uploading model into container now
2024-12-08 17:22:54,110:INFO:_master_model_container: 14
2024-12-08 17:22:54,110:INFO:_display_container: 2
2024-12-08 17:22:54,110:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:22:54,110:INFO:create_model() successfully completed......................................
2024-12-08 17:22:54,165:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:54,166:INFO:Creating metrics dataframe
2024-12-08 17:22:54,169:INFO:Initializing AdaBoost Regressor
2024-12-08 17:22:54,169:INFO:Total runtime is 0.15577265024185177 minutes
2024-12-08 17:22:54,171:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:54,171:INFO:Initializing create_model()
2024-12-08 17:22:54,171:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:54,171:INFO:Checking exceptions
2024-12-08 17:22:54,171:INFO:Importing libraries
2024-12-08 17:22:54,171:INFO:Copying training dataset
2024-12-08 17:22:54,173:INFO:Defining folds
2024-12-08 17:22:54,173:INFO:Declaring metric variables
2024-12-08 17:22:54,174:INFO:Importing untrained model
2024-12-08 17:22:54,175:INFO:AdaBoost Regressor Imported successfully
2024-12-08 17:22:54,177:INFO:Starting cross validation
2024-12-08 17:22:54,178:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:54,520:INFO:Calculating mean and std
2024-12-08 17:22:54,521:INFO:Creating metrics dataframe
2024-12-08 17:22:54,522:INFO:Uploading results into container
2024-12-08 17:22:54,522:INFO:Uploading model into container now
2024-12-08 17:22:54,522:INFO:_master_model_container: 15
2024-12-08 17:22:54,522:INFO:_display_container: 2
2024-12-08 17:22:54,522:INFO:AdaBoostRegressor(random_state=9)
2024-12-08 17:22:54,522:INFO:create_model() successfully completed......................................
2024-12-08 17:22:54,577:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:54,577:INFO:Creating metrics dataframe
2024-12-08 17:22:54,581:INFO:Initializing Gradient Boosting Regressor
2024-12-08 17:22:54,581:INFO:Total runtime is 0.1626355131467183 minutes
2024-12-08 17:22:54,582:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:54,582:INFO:Initializing create_model()
2024-12-08 17:22:54,583:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:54,583:INFO:Checking exceptions
2024-12-08 17:22:54,583:INFO:Importing libraries
2024-12-08 17:22:54,583:INFO:Copying training dataset
2024-12-08 17:22:54,584:INFO:Defining folds
2024-12-08 17:22:54,585:INFO:Declaring metric variables
2024-12-08 17:22:54,585:INFO:Importing untrained model
2024-12-08 17:22:54,587:INFO:Gradient Boosting Regressor Imported successfully
2024-12-08 17:22:54,589:INFO:Starting cross validation
2024-12-08 17:22:54,590:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:55,064:INFO:Calculating mean and std
2024-12-08 17:22:55,065:INFO:Creating metrics dataframe
2024-12-08 17:22:55,066:INFO:Uploading results into container
2024-12-08 17:22:55,066:INFO:Uploading model into container now
2024-12-08 17:22:55,066:INFO:_master_model_container: 16
2024-12-08 17:22:55,066:INFO:_display_container: 2
2024-12-08 17:22:55,066:INFO:GradientBoostingRegressor(random_state=9)
2024-12-08 17:22:55,066:INFO:create_model() successfully completed......................................
2024-12-08 17:22:55,120:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:55,120:INFO:Creating metrics dataframe
2024-12-08 17:22:55,125:INFO:Initializing Extreme Gradient Boosting
2024-12-08 17:22:55,125:INFO:Total runtime is 0.1717002471288045 minutes
2024-12-08 17:22:55,126:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:55,126:INFO:Initializing create_model()
2024-12-08 17:22:55,126:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:55,127:INFO:Checking exceptions
2024-12-08 17:22:55,127:INFO:Importing libraries
2024-12-08 17:22:55,127:INFO:Copying training dataset
2024-12-08 17:22:55,128:INFO:Defining folds
2024-12-08 17:22:55,128:INFO:Declaring metric variables
2024-12-08 17:22:55,129:INFO:Importing untrained model
2024-12-08 17:22:55,131:INFO:Extreme Gradient Boosting Imported successfully
2024-12-08 17:22:55,133:INFO:Starting cross validation
2024-12-08 17:22:55,134:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:55,462:INFO:Calculating mean and std
2024-12-08 17:22:55,462:INFO:Creating metrics dataframe
2024-12-08 17:22:55,463:INFO:Uploading results into container
2024-12-08 17:22:55,463:INFO:Uploading model into container now
2024-12-08 17:22:55,464:INFO:_master_model_container: 17
2024-12-08 17:22:55,464:INFO:_display_container: 2
2024-12-08 17:22:55,465:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...)
2024-12-08 17:22:55,465:INFO:create_model() successfully completed......................................
2024-12-08 17:22:55,519:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:55,519:INFO:Creating metrics dataframe
2024-12-08 17:22:55,523:INFO:Initializing Light Gradient Boosting Machine
2024-12-08 17:22:55,523:INFO:Total runtime is 0.17832862933476762 minutes
2024-12-08 17:22:55,524:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:55,524:INFO:Initializing create_model()
2024-12-08 17:22:55,524:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:55,524:INFO:Checking exceptions
2024-12-08 17:22:55,524:INFO:Importing libraries
2024-12-08 17:22:55,524:INFO:Copying training dataset
2024-12-08 17:22:55,526:INFO:Defining folds
2024-12-08 17:22:55,526:INFO:Declaring metric variables
2024-12-08 17:22:55,527:INFO:Importing untrained model
2024-12-08 17:22:55,528:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-08 17:22:55,530:INFO:Starting cross validation
2024-12-08 17:22:55,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:58,404:INFO:Calculating mean and std
2024-12-08 17:22:58,405:INFO:Creating metrics dataframe
2024-12-08 17:22:58,406:INFO:Uploading results into container
2024-12-08 17:22:58,406:INFO:Uploading model into container now
2024-12-08 17:22:58,406:INFO:_master_model_container: 18
2024-12-08 17:22:58,406:INFO:_display_container: 2
2024-12-08 17:22:58,407:INFO:LGBMRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:22:58,407:INFO:create_model() successfully completed......................................
2024-12-08 17:22:58,463:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:58,463:INFO:Creating metrics dataframe
2024-12-08 17:22:58,467:INFO:Initializing Dummy Regressor
2024-12-08 17:22:58,468:INFO:Total runtime is 0.2274101336797078 minutes
2024-12-08 17:22:58,469:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:58,469:INFO:Initializing create_model()
2024-12-08 17:22:58,469:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fbb90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:58,469:INFO:Checking exceptions
2024-12-08 17:22:58,469:INFO:Importing libraries
2024-12-08 17:22:58,469:INFO:Copying training dataset
2024-12-08 17:22:58,471:INFO:Defining folds
2024-12-08 17:22:58,471:INFO:Declaring metric variables
2024-12-08 17:22:58,472:INFO:Importing untrained model
2024-12-08 17:22:58,473:INFO:Dummy Regressor Imported successfully
2024-12-08 17:22:58,475:INFO:Starting cross validation
2024-12-08 17:22:58,477:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:22:58,689:INFO:Calculating mean and std
2024-12-08 17:22:58,690:INFO:Creating metrics dataframe
2024-12-08 17:22:58,691:INFO:Uploading results into container
2024-12-08 17:22:58,691:INFO:Uploading model into container now
2024-12-08 17:22:58,691:INFO:_master_model_container: 19
2024-12-08 17:22:58,691:INFO:_display_container: 2
2024-12-08 17:22:58,691:INFO:DummyRegressor()
2024-12-08 17:22:58,691:INFO:create_model() successfully completed......................................
2024-12-08 17:22:58,747:INFO:SubProcess create_model() end ==================================
2024-12-08 17:22:58,747:INFO:Creating metrics dataframe
2024-12-08 17:22:58,754:WARNING:/opt/anaconda3/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-08 17:22:58,756:INFO:Initializing create_model()
2024-12-08 17:22:58,757:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:58,757:INFO:Checking exceptions
2024-12-08 17:22:58,757:INFO:Importing libraries
2024-12-08 17:22:58,758:INFO:Copying training dataset
2024-12-08 17:22:58,759:INFO:Defining folds
2024-12-08 17:22:58,759:INFO:Declaring metric variables
2024-12-08 17:22:58,759:INFO:Importing untrained model
2024-12-08 17:22:58,759:INFO:Declaring custom model
2024-12-08 17:22:58,759:INFO:Random Forest Regressor Imported successfully
2024-12-08 17:22:58,760:INFO:Cross validation set to False
2024-12-08 17:22:58,760:INFO:Fitting Model
2024-12-08 17:22:58,917:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:22:58,918:INFO:create_model() successfully completed......................................
2024-12-08 17:22:58,974:INFO:Initializing create_model()
2024-12-08 17:22:58,974:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=LGBMRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:58,974:INFO:Checking exceptions
2024-12-08 17:22:58,975:INFO:Importing libraries
2024-12-08 17:22:58,975:INFO:Copying training dataset
2024-12-08 17:22:58,977:INFO:Defining folds
2024-12-08 17:22:58,977:INFO:Declaring metric variables
2024-12-08 17:22:58,977:INFO:Importing untrained model
2024-12-08 17:22:58,977:INFO:Declaring custom model
2024-12-08 17:22:58,977:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-08 17:22:58,978:INFO:Cross validation set to False
2024-12-08 17:22:58,978:INFO:Fitting Model
2024-12-08 17:22:59,047:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-12-08 17:22:59,049:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000861 seconds.
2024-12-08 17:22:59,049:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-12-08 17:22:59,049:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-12-08 17:22:59,049:INFO:[LightGBM] [Info] Total Bins 261
2024-12-08 17:22:59,049:INFO:[LightGBM] [Info] Number of data points in the train set: 2383, number of used features: 30
2024-12-08 17:22:59,049:INFO:[LightGBM] [Info] Start training from score 240989.002518
2024-12-08 17:22:59,394:INFO:LGBMRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:22:59,394:INFO:create_model() successfully completed......................................
2024-12-08 17:22:59,450:INFO:Initializing create_model()
2024-12-08 17:22:59,450:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:59,450:INFO:Checking exceptions
2024-12-08 17:22:59,451:INFO:Importing libraries
2024-12-08 17:22:59,451:INFO:Copying training dataset
2024-12-08 17:22:59,452:INFO:Defining folds
2024-12-08 17:22:59,452:INFO:Declaring metric variables
2024-12-08 17:22:59,452:INFO:Importing untrained model
2024-12-08 17:22:59,452:INFO:Declaring custom model
2024-12-08 17:22:59,453:INFO:Extreme Gradient Boosting Imported successfully
2024-12-08 17:22:59,454:INFO:Cross validation set to False
2024-12-08 17:22:59,454:INFO:Fitting Model
2024-12-08 17:22:59,636:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...)
2024-12-08 17:22:59,636:INFO:create_model() successfully completed......................................
2024-12-08 17:22:59,702:INFO:_master_model_container: 19
2024-12-08 17:22:59,702:INFO:_display_container: 2
2024-12-08 17:22:59,703:INFO:[RandomForestRegressor(n_jobs=-1, random_state=9), LGBMRegressor(n_jobs=-1, random_state=9), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...)]
2024-12-08 17:22:59,703:INFO:compare_models() successfully completed......................................
2024-12-08 17:22:59,725:INFO:Initializing stack_models()
2024-12-08 17:22:59,725:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator_list=[RandomForestRegressor(n_jobs=-1, random_state=9), LGBMRegressor(n_jobs=-1, random_state=9), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=True, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-12-08 17:22:59,725:INFO:Checking exceptions
2024-12-08 17:22:59,727:INFO:Defining meta model
2024-12-08 17:22:59,734:INFO:Getting model names
2024-12-08 17:22:59,735:INFO:[('Random Forest Regressor', RandomForestRegressor(n_jobs=-1, random_state=9)), ('Light Gradient Boosting Machine', LGBMRegressor(n_jobs=-1, random_state=9)), ('Extreme Gradient Boosting', XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...))]
2024-12-08 17:22:59,736:INFO:SubProcess create_model() called ==================================
2024-12-08 17:22:59,739:INFO:Initializing create_model()
2024-12-08 17:22:59,739:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Extreme Gradient Boosting',
                               XGBRegressor(base_score=None, booster='gbtree',
                                            callbacks=None,
                                            colsample_bylevel=None,
                                            colsample_bynode=None,
                                            colsample_bytree=None, device='cpu',...
                                            interaction_constraints=None,
                                            learning_rate=None, max_bin=None,
                                            max_cat_threshold=None,
                                            max_cat_to_onehot=None,
                                            max_delta_step=None, max_depth=None,
                                            max_leaves=None,
                                            min_child_weight=None, missing=nan,
                                            monotone_constraints=None,
                                            multi_strategy=None,
                                            n_estimators=None, n_jobs=-1,
                                            num_parallel_tree=None,
                                            random_state=9, ...))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152bc3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:22:59,739:INFO:Checking exceptions
2024-12-08 17:22:59,739:INFO:Importing libraries
2024-12-08 17:22:59,739:INFO:Copying training dataset
2024-12-08 17:22:59,743:INFO:Defining folds
2024-12-08 17:22:59,743:INFO:Declaring metric variables
2024-12-08 17:22:59,744:INFO:Importing untrained model
2024-12-08 17:22:59,744:INFO:Declaring custom model
2024-12-08 17:22:59,746:INFO:Stacking Regressor Imported successfully
2024-12-08 17:22:59,749:INFO:Starting cross validation
2024-12-08 17:22:59,750:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:23:15,961:INFO:Calculating mean and std
2024-12-08 17:23:15,961:INFO:Creating metrics dataframe
2024-12-08 17:23:15,964:INFO:Finalizing model
2024-12-08 17:23:17,914:INFO:Uploading results into container
2024-12-08 17:23:17,916:INFO:Uploading model into container now
2024-12-08 17:23:17,916:INFO:_master_model_container: 20
2024-12-08 17:23:17,916:INFO:_display_container: 3
2024-12-08 17:23:17,919:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Extreme Gradient Boosting',
                               XGBRegressor(base_score=None, booster='gbtree',
                                            callbacks=None,
                                            colsample_bylevel=None,
                                            colsample_bynode=None,
                                            colsample_bytree=None, device='cpu',...
                                            interaction_constraints=None,
                                            learning_rate=None, max_bin=None,
                                            max_cat_threshold=None,
                                            max_cat_to_onehot=None,
                                            max_delta_step=None, max_depth=None,
                                            max_leaves=None,
                                            min_child_weight=None, missing=nan,
                                            monotone_constraints=None,
                                            multi_strategy=None,
                                            n_estimators=None, n_jobs=-1,
                                            num_parallel_tree=None,
                                            random_state=9, ...))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1)
2024-12-08 17:23:17,919:INFO:create_model() successfully completed......................................
2024-12-08 17:23:17,981:INFO:SubProcess create_model() end ==================================
2024-12-08 17:23:17,981:INFO:choose_better activated
2024-12-08 17:23:17,985:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Extreme Gradient Boosting',
                               XGBRegressor(base_score=None, booster='gbtree',
                                            callbacks=None,
                                            colsample_bylevel=None,
                                            colsample_bynode=None,
                                            colsample_bytree=None, device='cpu',...
                                            interaction_constraints=None,
                                            learning_rate=None, max_bin=None,
                                            max_cat_threshold=None,
                                            max_cat_to_onehot=None,
                                            max_delta_step=None, max_depth=None,
                                            max_leaves=None,
                                            min_child_weight=None, missing=nan,
                                            monotone_constraints=None,
                                            multi_strategy=None,
                                            n_estimators=None, n_jobs=-1,
                                            num_parallel_tree=None,
                                            random_state=9, ...))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1) result for R2 is 0.7806
2024-12-08 17:23:17,985:INFO:SubProcess create_model() called ==================================
2024-12-08 17:23:17,985:INFO:Initializing create_model()
2024-12-08 17:23:17,985:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:23:17,985:INFO:Checking exceptions
2024-12-08 17:23:17,986:INFO:Importing libraries
2024-12-08 17:23:17,986:INFO:Copying training dataset
2024-12-08 17:23:17,987:INFO:Defining folds
2024-12-08 17:23:17,987:INFO:Declaring metric variables
2024-12-08 17:23:17,987:INFO:Importing untrained model
2024-12-08 17:23:17,987:INFO:Declaring custom model
2024-12-08 17:23:17,988:INFO:Random Forest Regressor Imported successfully
2024-12-08 17:23:17,988:INFO:Starting cross validation
2024-12-08 17:23:17,988:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:23:18,808:INFO:Calculating mean and std
2024-12-08 17:23:18,809:INFO:Creating metrics dataframe
2024-12-08 17:23:18,809:INFO:Finalizing model
2024-12-08 17:23:18,964:INFO:Uploading results into container
2024-12-08 17:23:18,965:INFO:Uploading model into container now
2024-12-08 17:23:18,965:INFO:_master_model_container: 21
2024-12-08 17:23:18,965:INFO:_display_container: 4
2024-12-08 17:23:18,965:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:23:18,965:INFO:create_model() successfully completed......................................
2024-12-08 17:23:19,032:INFO:SubProcess create_model() end ==================================
2024-12-08 17:23:19,032:INFO:RandomForestRegressor(n_jobs=-1, random_state=9) result for R2 is 0.7681
2024-12-08 17:23:19,032:INFO:SubProcess create_model() called ==================================
2024-12-08 17:23:19,032:INFO:Initializing create_model()
2024-12-08 17:23:19,032:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=LGBMRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:23:19,032:INFO:Checking exceptions
2024-12-08 17:23:19,033:INFO:Importing libraries
2024-12-08 17:23:19,033:INFO:Copying training dataset
2024-12-08 17:23:19,035:INFO:Defining folds
2024-12-08 17:23:19,035:INFO:Declaring metric variables
2024-12-08 17:23:19,035:INFO:Importing untrained model
2024-12-08 17:23:19,036:INFO:Declaring custom model
2024-12-08 17:23:19,036:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-08 17:23:19,036:INFO:Starting cross validation
2024-12-08 17:23:19,037:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:23:21,897:INFO:Calculating mean and std
2024-12-08 17:23:21,897:INFO:Creating metrics dataframe
2024-12-08 17:23:21,898:INFO:Finalizing model
2024-12-08 17:23:21,965:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-12-08 17:23:21,967:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001049 seconds.
2024-12-08 17:23:21,967:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-12-08 17:23:21,967:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-12-08 17:23:21,967:INFO:[LightGBM] [Info] Total Bins 261
2024-12-08 17:23:21,967:INFO:[LightGBM] [Info] Number of data points in the train set: 2383, number of used features: 30
2024-12-08 17:23:21,967:INFO:[LightGBM] [Info] Start training from score 240989.002518
2024-12-08 17:23:22,312:INFO:Uploading results into container
2024-12-08 17:23:22,313:INFO:Uploading model into container now
2024-12-08 17:23:22,313:INFO:_master_model_container: 22
2024-12-08 17:23:22,313:INFO:_display_container: 4
2024-12-08 17:23:22,313:INFO:LGBMRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:23:22,313:INFO:create_model() successfully completed......................................
2024-12-08 17:23:22,367:INFO:SubProcess create_model() end ==================================
2024-12-08 17:23:22,367:INFO:LGBMRegressor(n_jobs=-1, random_state=9) result for R2 is 0.7776
2024-12-08 17:23:22,367:INFO:SubProcess create_model() called ==================================
2024-12-08 17:23:22,367:INFO:Initializing create_model()
2024-12-08 17:23:22,368:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:23:22,368:INFO:Checking exceptions
2024-12-08 17:23:22,368:INFO:Importing libraries
2024-12-08 17:23:22,368:INFO:Copying training dataset
2024-12-08 17:23:22,369:INFO:Defining folds
2024-12-08 17:23:22,369:INFO:Declaring metric variables
2024-12-08 17:23:22,370:INFO:Importing untrained model
2024-12-08 17:23:22,370:INFO:Declaring custom model
2024-12-08 17:23:22,370:INFO:Extreme Gradient Boosting Imported successfully
2024-12-08 17:23:22,370:INFO:Starting cross validation
2024-12-08 17:23:22,371:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:23:22,695:INFO:Calculating mean and std
2024-12-08 17:23:22,695:INFO:Creating metrics dataframe
2024-12-08 17:23:22,696:INFO:Finalizing model
2024-12-08 17:23:22,880:INFO:Uploading results into container
2024-12-08 17:23:22,880:INFO:Uploading model into container now
2024-12-08 17:23:22,880:INFO:_master_model_container: 23
2024-12-08 17:23:22,880:INFO:_display_container: 4
2024-12-08 17:23:22,881:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...)
2024-12-08 17:23:22,881:INFO:create_model() successfully completed......................................
2024-12-08 17:23:22,934:INFO:SubProcess create_model() end ==================================
2024-12-08 17:23:22,935:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...) result for R2 is 0.7545
2024-12-08 17:23:22,937:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Extreme Gradient Boosting',
                               XGBRegressor(base_score=None, booster='gbtree',
                                            callbacks=None,
                                            colsample_bylevel=None,
                                            colsample_bynode=None,
                                            colsample_bytree=None, device='cpu',...
                                            interaction_constraints=None,
                                            learning_rate=None, max_bin=None,
                                            max_cat_threshold=None,
                                            max_cat_to_onehot=None,
                                            max_delta_step=None, max_depth=None,
                                            max_leaves=None,
                                            min_child_weight=None, missing=nan,
                                            monotone_constraints=None,
                                            multi_strategy=None,
                                            n_estimators=None, n_jobs=-1,
                                            num_parallel_tree=None,
                                            random_state=9, ...))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1) is best model
2024-12-08 17:23:22,937:INFO:choose_better completed
2024-12-08 17:23:22,941:INFO:_master_model_container: 23
2024-12-08 17:23:22,941:INFO:_display_container: 3
2024-12-08 17:23:22,944:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Extreme Gradient Boosting',
                               XGBRegressor(base_score=None, booster='gbtree',
                                            callbacks=None,
                                            colsample_bylevel=None,
                                            colsample_bynode=None,
                                            colsample_bytree=None, device='cpu',...
                                            interaction_constraints=None,
                                            learning_rate=None, max_bin=None,
                                            max_cat_threshold=None,
                                            max_cat_to_onehot=None,
                                            max_delta_step=None, max_depth=None,
                                            max_leaves=None,
                                            min_child_weight=None, missing=nan,
                                            monotone_constraints=None,
                                            multi_strategy=None,
                                            n_estimators=None, n_jobs=-1,
                                            num_parallel_tree=None,
                                            random_state=9, ...))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1)
2024-12-08 17:23:22,944:INFO:stack_models() successfully completed......................................
2024-12-08 17:23:23,026:INFO:Initializing create_model()
2024-12-08 17:23:23,026:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=rf, fold=3, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:23:23,026:INFO:Checking exceptions
2024-12-08 17:23:23,038:INFO:Importing libraries
2024-12-08 17:23:23,038:INFO:Copying training dataset
2024-12-08 17:23:23,041:INFO:Defining folds
2024-12-08 17:23:23,041:INFO:Declaring metric variables
2024-12-08 17:23:23,042:INFO:Importing untrained model
2024-12-08 17:23:23,043:INFO:Random Forest Regressor Imported successfully
2024-12-08 17:23:23,045:INFO:Starting cross validation
2024-12-08 17:23:23,047:INFO:Cross validating with KFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:23:23,296:INFO:Calculating mean and std
2024-12-08 17:23:23,296:INFO:Creating metrics dataframe
2024-12-08 17:23:23,298:INFO:Finalizing model
2024-12-08 17:23:23,456:INFO:Uploading results into container
2024-12-08 17:23:23,457:INFO:Uploading model into container now
2024-12-08 17:23:23,460:INFO:_master_model_container: 24
2024-12-08 17:23:23,460:INFO:_display_container: 4
2024-12-08 17:23:23,460:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:23:23,460:INFO:create_model() successfully completed......................................
2024-12-08 17:23:23,519:INFO:Initializing tune_model()
2024-12-08 17:23:23,520:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=3, round=4, n_iter=10, custom_grid={'max_depth': [None, 2, 4, 6, 8, 10, 12]}, optimize=MAPE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-12-08 17:23:23,520:INFO:Checking exceptions
2024-12-08 17:23:23,527:INFO:Copying training dataset
2024-12-08 17:23:23,531:INFO:Checking base model
2024-12-08 17:23:23,531:INFO:Base model : Random Forest Regressor
2024-12-08 17:23:23,532:INFO:Declaring metric variables
2024-12-08 17:23:23,533:INFO:Defining Hyperparameters
2024-12-08 17:23:23,593:INFO:custom_grid: {'actual_estimator__max_depth': [None, 2, 4, 6, 8, 10, 12]}
2024-12-08 17:23:23,593:INFO:Tuning with n_jobs=-1
2024-12-08 17:23:23,593:INFO:Initializing RandomizedSearchCV
2024-12-08 17:23:23,596:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_search.py:318: UserWarning: The total space of parameters 7 is smaller than n_iter=10. Running 7 iterations. For exhaustive searches, use GridSearchCV.
  warnings.warn(

2024-12-08 17:23:24,600:INFO:best_params: {'actual_estimator__max_depth': None}
2024-12-08 17:23:24,600:INFO:Hyperparameter search completed
2024-12-08 17:23:24,600:INFO:SubProcess create_model() called ==================================
2024-12-08 17:23:24,601:INFO:Initializing create_model()
2024-12-08 17:23:24,601:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a6fc290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'max_depth': None})
2024-12-08 17:23:24,601:INFO:Checking exceptions
2024-12-08 17:23:24,601:INFO:Importing libraries
2024-12-08 17:23:24,601:INFO:Copying training dataset
2024-12-08 17:23:24,603:INFO:Defining folds
2024-12-08 17:23:24,603:INFO:Declaring metric variables
2024-12-08 17:23:24,604:INFO:Importing untrained model
2024-12-08 17:23:24,604:INFO:Declaring custom model
2024-12-08 17:23:24,606:INFO:Random Forest Regressor Imported successfully
2024-12-08 17:23:24,608:INFO:Starting cross validation
2024-12-08 17:23:24,609:INFO:Cross validating with KFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:23:24,878:INFO:Calculating mean and std
2024-12-08 17:23:24,879:INFO:Creating metrics dataframe
2024-12-08 17:23:24,881:INFO:Finalizing model
2024-12-08 17:23:25,039:INFO:Uploading results into container
2024-12-08 17:23:25,040:INFO:Uploading model into container now
2024-12-08 17:23:25,040:INFO:_master_model_container: 25
2024-12-08 17:23:25,040:INFO:_display_container: 5
2024-12-08 17:23:25,040:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:23:25,040:INFO:create_model() successfully completed......................................
2024-12-08 17:23:25,094:INFO:SubProcess create_model() end ==================================
2024-12-08 17:23:25,095:INFO:choose_better activated
2024-12-08 17:23:25,096:INFO:SubProcess create_model() called ==================================
2024-12-08 17:23:25,096:INFO:Initializing create_model()
2024-12-08 17:23:25,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:23:25,096:INFO:Checking exceptions
2024-12-08 17:23:25,097:INFO:Importing libraries
2024-12-08 17:23:25,097:INFO:Copying training dataset
2024-12-08 17:23:25,099:INFO:Defining folds
2024-12-08 17:23:25,099:INFO:Declaring metric variables
2024-12-08 17:23:25,099:INFO:Importing untrained model
2024-12-08 17:23:25,099:INFO:Declaring custom model
2024-12-08 17:23:25,099:INFO:Random Forest Regressor Imported successfully
2024-12-08 17:23:25,099:INFO:Starting cross validation
2024-12-08 17:23:25,100:INFO:Cross validating with KFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:23:25,344:INFO:Calculating mean and std
2024-12-08 17:23:25,345:INFO:Creating metrics dataframe
2024-12-08 17:23:25,345:INFO:Finalizing model
2024-12-08 17:23:25,499:INFO:Uploading results into container
2024-12-08 17:23:25,499:INFO:Uploading model into container now
2024-12-08 17:23:25,500:INFO:_master_model_container: 26
2024-12-08 17:23:25,500:INFO:_display_container: 6
2024-12-08 17:23:25,500:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:23:25,500:INFO:create_model() successfully completed......................................
2024-12-08 17:23:25,554:INFO:SubProcess create_model() end ==================================
2024-12-08 17:23:25,554:INFO:RandomForestRegressor(n_jobs=-1, random_state=9) result for MAPE is 0.2278
2024-12-08 17:23:25,554:INFO:RandomForestRegressor(n_jobs=-1, random_state=9) result for MAPE is 0.2278
2024-12-08 17:23:25,554:INFO:RandomForestRegressor(n_jobs=-1, random_state=9) is best model
2024-12-08 17:23:25,554:INFO:choose_better completed
2024-12-08 17:23:25,554:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-12-08 17:23:25,558:INFO:_master_model_container: 26
2024-12-08 17:23:25,558:INFO:_display_container: 5
2024-12-08 17:23:25,558:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:23:25,558:INFO:tune_model() successfully completed......................................
2024-12-08 17:23:25,617:INFO:Initializing predict_model()
2024-12-08 17:23:25,617:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16b15cae0>)
2024-12-08 17:23:25,617:INFO:Checking exceptions
2024-12-08 17:23:25,617:INFO:Preloading libraries
2024-12-08 17:23:25,693:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/metrics/_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-08 17:23:25,766:INFO:Initializing save_model()
2024-12-08 17:23:25,766:INFO:save_model(model=     house_type house_type_2  rooms    m2  elevator  garage  \
7193       Piso     exterior      1  40.0         1       0   
5471       Piso     exterior      1  77.0         1       0   
4904       Piso     exterior      2  58.0         1       0   
5621      Ático     exterior      1  45.0         1       0   
2204       Piso     interior      2  67.0         1       0   
...         ...          ...    ...   ...       ...     ...   
584        Piso     exterior      1  48.0         1       0   
1744    Estudio     exterior      0  36.0         1       0   
2517    Estudio     exterior      0  18.0         1       0   
4953       Piso     exterior      3  61.0         1       0   
2290       Piso     exterior      1  34.0         1       0   

                     neighbourhood     district   price  prediction_label  
7193                    buenavista  carabanchel  139000     133791.075000  
5471                      almenara       tetuan  284000     392980.250000  
4904                   embajadores       centro  219000     227802.000000  
5621                         lista    salamanca  350000     547778.000000  
2204                    buenavista  carabanchel  189000     147622.000000  
...                            ...          ...     ...               ...  
584                    los rosales   villaverde  155000     130967.124000  
1744                      pacifico       retiro  295000     212594.880000  
2517                    berruguete       tetuan   94400     141123.000000  
4953  san cristobal de los angeles   villaverde   62370      79567.030000  
2290                   embajadores       centro  198000     196766.666667  

[1022 rows x 10 columns], model_name=final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/gp/fp0z7sz5063d4vng25fzsxcm0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(stra...
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(degree=1,
                                                                   include_bias=False))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-12-08 17:23:25,766:INFO:Adding model into prep_pipe
2024-12-08 17:23:25,771:INFO:final_model.pkl saved in current working directory
2024-12-08 17:23:25,791:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
4904                   embajadores       centro  219000     227802.000000  
5621                         lista    salamanca  350000     547778.000000  
2204                    buenavista  carabanchel  189000     147622.000000  
...                            ...          ...     ...               ...  
584                    los rosales   villaverde  155000     130967.124000  
1744                      pacifico       retiro  295000     212594.880000  
2517                    berruguete       tetuan   94400     141123.000000  
4953  san cristobal de los angeles   villaverde   62370      79567.030000  
2290                   embajadores       centro  198000     196766.666667  

[1022 rows x 10 columns])])
2024-12-08 17:23:25,791:INFO:save_model() successfully completed......................................
2024-12-08 17:23:26,031:INFO:Initializing plot_model()
2024-12-08 17:23:26,032:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-08 17:23:26,032:INFO:Checking exceptions
2024-12-08 17:23:26,046:INFO:Preloading libraries
2024-12-08 17:23:26,081:INFO:Copying training dataset
2024-12-08 17:23:26,081:INFO:Plot type: error
2024-12-08 17:23:26,249:INFO:Fitting Model
2024-12-08 17:23:26,251:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2024-12-08 17:23:26,251:INFO:Scoring test/hold-out set
2024-12-08 17:23:26,392:INFO:Visual Rendered Successfully
2024-12-08 17:23:26,456:INFO:plot_model() successfully completed......................................
2024-12-08 17:23:26,464:INFO:Initializing interpret_model()
2024-12-08 17:23:26,464:INFO:interpret_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-12-08 17:23:26,464:INFO:Checking exceptions
2024-12-08 17:23:26,464:INFO:Soft dependency imported: shap: 0.46.0
2024-12-08 17:23:26,823:INFO:plot type: summary
2024-12-08 17:23:26,823:INFO:Creating TreeExplainer
2024-12-08 17:23:26,830:INFO:Compiling shap values
2024-12-08 17:23:43,826:INFO:Visual Rendered Successfully
2024-12-08 17:23:43,827:INFO:interpret_model() successfully completed......................................
2024-12-08 17:23:43,915:INFO:Initializing interpret_model()
2024-12-08 17:23:43,915:INFO:interpret_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152b53a10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), plot=reason, feature=None, observation=3, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-12-08 17:23:43,915:INFO:Checking exceptions
2024-12-08 17:23:43,915:INFO:Soft dependency imported: shap: 0.46.0
2024-12-08 17:23:43,957:INFO:plot type: reason
2024-12-08 17:23:43,957:INFO:model type detected: type 2
2024-12-08 17:23:43,957:INFO:Creating TreeExplainer
2024-12-08 17:23:43,962:INFO:Compiling shap values
2024-12-08 17:24:00,711:INFO:Visual Rendered Successfully
2024-12-08 17:24:00,712:INFO:interpret_model() successfully completed......................................
2024-12-08 17:24:00,797:INFO:PyCaret RegressionExperiment
2024-12-08 17:24:00,797:INFO:Logging name: reg-default-name
2024-12-08 17:24:00,797:INFO:ML Usecase: MLUsecase.REGRESSION
2024-12-08 17:24:00,797:INFO:version 3.3.1
2024-12-08 17:24:00,798:INFO:Initializing setup()
2024-12-08 17:24:00,798:INFO:self.USI: d17c
2024-12-08 17:24:00,798:INFO:self._variable_keys: {'exp_name_log', 'gpu_param', 'html_param', 'idx', 'USI', 'y_train', 'log_plots_param', '_available_plots', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', 'data', 'n_jobs_param', 'seed', 'fold_generator', 'target_param', 'y_test', 'fold_groups_param', 'transform_target_param', 'y', 'X_test', 'logging_param', 'exp_id', 'X', 'X_train', 'memory', 'fold_shuffle_param'}
2024-12-08 17:24:00,798:INFO:Checking environment
2024-12-08 17:24:00,798:INFO:python_version: 3.11.8
2024-12-08 17:24:00,798:INFO:python_build: ('main', 'Feb 16 2024 20:49:36')
2024-12-08 17:24:00,798:INFO:machine: arm64
2024-12-08 17:24:00,798:INFO:platform: macOS-15.1-arm64-arm-64bit
2024-12-08 17:24:00,798:INFO:Memory: svmem(total=17179869184, available=5356093440, percent=68.8, used=7269498880, free=59883520, active=5388730368, inactive=5292736512, wired=1880768512)
2024-12-08 17:24:00,798:INFO:Physical Core: 8
2024-12-08 17:24:00,798:INFO:Logical Core: 8
2024-12-08 17:24:00,798:INFO:Checking libraries
2024-12-08 17:24:00,798:INFO:System:
2024-12-08 17:24:00,798:INFO:    python: 3.11.8 | packaged by conda-forge | (main, Feb 16 2024, 20:49:36) [Clang 16.0.6 ]
2024-12-08 17:24:00,798:INFO:executable: /opt/anaconda3/bin/python
2024-12-08 17:24:00,798:INFO:   machine: macOS-15.1-arm64-arm-64bit
2024-12-08 17:24:00,798:INFO:PyCaret required dependencies:
2024-12-08 17:24:00,798:INFO:                 pip: 23.3.1
2024-12-08 17:24:00,798:INFO:          setuptools: 68.2.2
2024-12-08 17:24:00,798:INFO:             pycaret: 3.3.1
2024-12-08 17:24:00,798:INFO:             IPython: 8.20.0
2024-12-08 17:24:00,798:INFO:          ipywidgets: 7.6.5
2024-12-08 17:24:00,798:INFO:                tqdm: 4.65.0
2024-12-08 17:24:00,798:INFO:               numpy: 1.26.4
2024-12-08 17:24:00,798:INFO:              pandas: 2.1.4
2024-12-08 17:24:00,798:INFO:              jinja2: 3.1.3
2024-12-08 17:24:00,798:INFO:               scipy: 1.11.4
2024-12-08 17:24:00,798:INFO:              joblib: 1.2.0
2024-12-08 17:24:00,798:INFO:             sklearn: 1.4.2
2024-12-08 17:24:00,798:INFO:                pyod: 1.1.3
2024-12-08 17:24:00,798:INFO:            imblearn: 0.12.2
2024-12-08 17:24:00,798:INFO:   category_encoders: 2.6.3
2024-12-08 17:24:00,798:INFO:            lightgbm: 4.3.0
2024-12-08 17:24:00,798:INFO:               numba: 0.59.0
2024-12-08 17:24:00,798:INFO:            requests: 2.31.0
2024-12-08 17:24:00,798:INFO:          matplotlib: 3.7.5
2024-12-08 17:24:00,798:INFO:          scikitplot: 0.3.7
2024-12-08 17:24:00,798:INFO:         yellowbrick: 1.5
2024-12-08 17:24:00,798:INFO:              plotly: 5.22.0
2024-12-08 17:24:00,798:INFO:    plotly-resampler: Not installed
2024-12-08 17:24:00,798:INFO:             kaleido: 0.2.1
2024-12-08 17:24:00,798:INFO:           schemdraw: 0.15
2024-12-08 17:24:00,798:INFO:         statsmodels: 0.14.0
2024-12-08 17:24:00,798:INFO:              sktime: 0.26.0
2024-12-08 17:24:00,798:INFO:               tbats: 1.1.3
2024-12-08 17:24:00,798:INFO:            pmdarima: 2.0.4
2024-12-08 17:24:00,798:INFO:              psutil: 5.9.0
2024-12-08 17:24:00,798:INFO:          markupsafe: 2.1.3
2024-12-08 17:24:00,798:INFO:             pickle5: Not installed
2024-12-08 17:24:00,798:INFO:         cloudpickle: 2.2.1
2024-12-08 17:24:00,798:INFO:         deprecation: 2.1.0
2024-12-08 17:24:00,798:INFO:              xxhash: 3.4.1
2024-12-08 17:24:00,798:INFO:           wurlitzer: 3.0.2
2024-12-08 17:24:00,798:INFO:PyCaret optional dependencies:
2024-12-08 17:24:00,798:INFO:                shap: 0.46.0
2024-12-08 17:24:00,798:INFO:           interpret: Not installed
2024-12-08 17:24:00,798:INFO:                umap: 0.5.5
2024-12-08 17:24:00,798:INFO:     ydata_profiling: Not installed
2024-12-08 17:24:00,798:INFO:  explainerdashboard: Not installed
2024-12-08 17:24:00,798:INFO:             autoviz: Not installed
2024-12-08 17:24:00,798:INFO:           fairlearn: Not installed
2024-12-08 17:24:00,798:INFO:          deepchecks: Not installed
2024-12-08 17:24:00,798:INFO:             xgboost: 2.1.0
2024-12-08 17:24:00,798:INFO:            catboost: Not installed
2024-12-08 17:24:00,798:INFO:              kmodes: Not installed
2024-12-08 17:24:00,798:INFO:             mlxtend: Not installed
2024-12-08 17:24:00,798:INFO:       statsforecast: Not installed
2024-12-08 17:24:00,798:INFO:        tune_sklearn: Not installed
2024-12-08 17:24:00,798:INFO:                 ray: Not installed
2024-12-08 17:24:00,798:INFO:            hyperopt: Not installed
2024-12-08 17:24:00,798:INFO:              optuna: Not installed
2024-12-08 17:24:00,799:INFO:               skopt: Not installed
2024-12-08 17:24:00,799:INFO:              mlflow: 2.13.0
2024-12-08 17:24:00,799:INFO:              gradio: Not installed
2024-12-08 17:24:00,799:INFO:             fastapi: Not installed
2024-12-08 17:24:00,799:INFO:             uvicorn: 0.30.3
2024-12-08 17:24:00,799:INFO:              m2cgen: Not installed
2024-12-08 17:24:00,799:INFO:           evidently: Not installed
2024-12-08 17:24:00,799:INFO:               fugue: Not installed
2024-12-08 17:24:00,799:INFO:           streamlit: 1.30.0
2024-12-08 17:24:00,799:INFO:             prophet: Not installed
2024-12-08 17:24:00,799:INFO:None
2024-12-08 17:24:00,799:INFO:Set up data.
2024-12-08 17:24:00,801:INFO:Set up folding strategy.
2024-12-08 17:24:00,801:INFO:Set up train/test split.
2024-12-08 17:24:00,802:INFO:Set up index.
2024-12-08 17:24:00,802:INFO:Assigning column types.
2024-12-08 17:24:00,803:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-08 17:24:00,803:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,805:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,807:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,830:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,847:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,848:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:00,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:00,849:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,850:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,852:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,874:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,892:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,892:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:00,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:00,893:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-12-08 17:24:00,895:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,897:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,919:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,936:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,937:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:00,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:00,940:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,941:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,963:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,981:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:24:00,981:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:00,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:00,982:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-12-08 17:24:00,986:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-08 17:24:01,007:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:24:01,025:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:24:01,025:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:01,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:01,029:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-08 17:24:01,052:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:24:01,069:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:24:01,069:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:01,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:01,070:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-12-08 17:24:01,096:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:24:01,113:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:24:01,113:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:01,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:01,140:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:24:01,157:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 17:24:01,157:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:01,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:01,158:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-08 17:24:01,184:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:24:01,202:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:01,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:01,228:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-08 17:24:01,246:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:01,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:01,247:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-12-08 17:24:01,290:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:01,291:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:01,334:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:01,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:01,336:INFO:Preparing preprocessing pipeline...
2024-12-08 17:24:01,336:INFO:Set up simple imputation.
2024-12-08 17:24:01,337:INFO:Set up encoding of ordinal features.
2024-12-08 17:24:01,337:INFO:Set up encoding of categorical features.
2024-12-08 17:24:01,337:INFO:Set up polynomial features.
2024-12-08 17:24:01,337:INFO:Set up removing multicollinearity.
2024-12-08 17:24:01,337:INFO:Set up column transformation.
2024-12-08 17:24:01,337:INFO:Set up feature normalization.
2024-12-08 17:24:01,457:INFO:Finished creating preprocessing pipeline.
2024-12-08 17:24:01,466:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gp/fp0z7sz5063d4vng25fzsxcm0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(stra...
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-12-08 17:24:01,466:INFO:Creating final display dataframe.
2024-12-08 17:24:01,625:INFO:Setup _display_container:                     Description             Value
0                    Session id                 9
1                        Target             price
2                   Target type        Regression
3           Original data shape         (1189, 9)
4        Transformed data shape       (1189, 204)
5   Transformed train set shape        (832, 204)
6    Transformed test set shape        (357, 204)
7              Numeric features                 4
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15          Polynomial features              True
16            Polynomial degree                 2
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.9
19               Transformation              True
20        Transformation method       yeo-johnson
21                    Normalize              True
22             Normalize method            zscore
23               Fold Generator             KFold
24                  Fold Number                10
25                     CPU Jobs                -1
26                      Use GPU             False
27               Log Experiment             False
28              Experiment Name  reg-default-name
29                          USI              d17c
2024-12-08 17:24:01,672:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:01,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:01,716:INFO:Soft dependency imported: xgboost: 2.1.0
2024-12-08 17:24:01,717:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 17:24:01,718:INFO:setup() successfully completed in 0.92s...............
2024-12-08 17:24:01,718:INFO:Initializing compare_models()
2024-12-08 17:24:01,718:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-08 17:24:01,718:INFO:Checking exceptions
2024-12-08 17:24:01,718:INFO:Preparing display monitor
2024-12-08 17:24:01,727:INFO:Initializing Linear Regression
2024-12-08 17:24:01,727:INFO:Total runtime is 1.434485117594401e-06 minutes
2024-12-08 17:24:01,728:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:01,728:INFO:Initializing create_model()
2024-12-08 17:24:01,728:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:01,728:INFO:Checking exceptions
2024-12-08 17:24:01,728:INFO:Importing libraries
2024-12-08 17:24:01,728:INFO:Copying training dataset
2024-12-08 17:24:01,731:INFO:Defining folds
2024-12-08 17:24:01,731:INFO:Declaring metric variables
2024-12-08 17:24:01,732:INFO:Importing untrained model
2024-12-08 17:24:01,733:INFO:Linear Regression Imported successfully
2024-12-08 17:24:01,736:INFO:Starting cross validation
2024-12-08 17:24:01,737:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:02,342:INFO:Calculating mean and std
2024-12-08 17:24:02,342:INFO:Creating metrics dataframe
2024-12-08 17:24:02,343:INFO:Uploading results into container
2024-12-08 17:24:02,343:INFO:Uploading model into container now
2024-12-08 17:24:02,343:INFO:_master_model_container: 1
2024-12-08 17:24:02,343:INFO:_display_container: 2
2024-12-08 17:24:02,343:INFO:LinearRegression(n_jobs=-1)
2024-12-08 17:24:02,343:INFO:create_model() successfully completed......................................
2024-12-08 17:24:02,405:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:02,405:INFO:Creating metrics dataframe
2024-12-08 17:24:02,408:INFO:Initializing Lasso Regression
2024-12-08 17:24:02,408:INFO:Total runtime is 0.011349952220916748 minutes
2024-12-08 17:24:02,409:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:02,409:INFO:Initializing create_model()
2024-12-08 17:24:02,410:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:02,410:INFO:Checking exceptions
2024-12-08 17:24:02,410:INFO:Importing libraries
2024-12-08 17:24:02,410:INFO:Copying training dataset
2024-12-08 17:24:02,411:INFO:Defining folds
2024-12-08 17:24:02,411:INFO:Declaring metric variables
2024-12-08 17:24:02,412:INFO:Importing untrained model
2024-12-08 17:24:02,413:INFO:Lasso Regression Imported successfully
2024-12-08 17:24:02,416:INFO:Starting cross validation
2024-12-08 17:24:02,417:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:02,768:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.142e+13, tolerance: 5.079e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:24:02,787:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.102e+13, tolerance: 5.075e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:24:02,800:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.132e+13, tolerance: 5.091e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:24:02,802:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.148e+13, tolerance: 5.032e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:24:02,805:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.058e+13, tolerance: 4.997e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:24:02,827:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.134e+13, tolerance: 5.019e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:24:02,832:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.130e+13, tolerance: 5.251e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:24:02,851:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.139e+13, tolerance: 5.121e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:24:03,061:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.096e+13, tolerance: 5.163e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:24:03,065:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.097e+13, tolerance: 5.101e+09
  model = cd_fast.enet_coordinate_descent(

2024-12-08 17:24:03,081:INFO:Calculating mean and std
2024-12-08 17:24:03,081:INFO:Creating metrics dataframe
2024-12-08 17:24:03,082:INFO:Uploading results into container
2024-12-08 17:24:03,082:INFO:Uploading model into container now
2024-12-08 17:24:03,082:INFO:_master_model_container: 2
2024-12-08 17:24:03,082:INFO:_display_container: 2
2024-12-08 17:24:03,083:INFO:Lasso(random_state=9)
2024-12-08 17:24:03,083:INFO:create_model() successfully completed......................................
2024-12-08 17:24:03,144:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:03,145:INFO:Creating metrics dataframe
2024-12-08 17:24:03,148:INFO:Initializing Ridge Regression
2024-12-08 17:24:03,148:INFO:Total runtime is 0.02368847131729126 minutes
2024-12-08 17:24:03,149:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:03,150:INFO:Initializing create_model()
2024-12-08 17:24:03,150:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:03,150:INFO:Checking exceptions
2024-12-08 17:24:03,150:INFO:Importing libraries
2024-12-08 17:24:03,150:INFO:Copying training dataset
2024-12-08 17:24:03,151:INFO:Defining folds
2024-12-08 17:24:03,151:INFO:Declaring metric variables
2024-12-08 17:24:03,152:INFO:Importing untrained model
2024-12-08 17:24:03,153:INFO:Ridge Regression Imported successfully
2024-12-08 17:24:03,156:INFO:Starting cross validation
2024-12-08 17:24:03,157:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:03,721:INFO:Calculating mean and std
2024-12-08 17:24:03,721:INFO:Creating metrics dataframe
2024-12-08 17:24:03,722:INFO:Uploading results into container
2024-12-08 17:24:03,722:INFO:Uploading model into container now
2024-12-08 17:24:03,722:INFO:_master_model_container: 3
2024-12-08 17:24:03,722:INFO:_display_container: 2
2024-12-08 17:24:03,722:INFO:Ridge(random_state=9)
2024-12-08 17:24:03,722:INFO:create_model() successfully completed......................................
2024-12-08 17:24:03,784:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:03,785:INFO:Creating metrics dataframe
2024-12-08 17:24:03,788:INFO:Initializing Elastic Net
2024-12-08 17:24:03,788:INFO:Total runtime is 0.03434813817342122 minutes
2024-12-08 17:24:03,789:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:03,789:INFO:Initializing create_model()
2024-12-08 17:24:03,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:03,789:INFO:Checking exceptions
2024-12-08 17:24:03,789:INFO:Importing libraries
2024-12-08 17:24:03,789:INFO:Copying training dataset
2024-12-08 17:24:03,791:INFO:Defining folds
2024-12-08 17:24:03,791:INFO:Declaring metric variables
2024-12-08 17:24:03,792:INFO:Importing untrained model
2024-12-08 17:24:03,793:INFO:Elastic Net Imported successfully
2024-12-08 17:24:03,795:INFO:Starting cross validation
2024-12-08 17:24:03,797:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:04,364:INFO:Calculating mean and std
2024-12-08 17:24:04,365:INFO:Creating metrics dataframe
2024-12-08 17:24:04,366:INFO:Uploading results into container
2024-12-08 17:24:04,366:INFO:Uploading model into container now
2024-12-08 17:24:04,366:INFO:_master_model_container: 4
2024-12-08 17:24:04,366:INFO:_display_container: 2
2024-12-08 17:24:04,366:INFO:ElasticNet(random_state=9)
2024-12-08 17:24:04,366:INFO:create_model() successfully completed......................................
2024-12-08 17:24:04,429:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:04,429:INFO:Creating metrics dataframe
2024-12-08 17:24:04,433:INFO:Initializing Least Angle Regression
2024-12-08 17:24:04,433:INFO:Total runtime is 0.04509510199228922 minutes
2024-12-08 17:24:04,434:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:04,434:INFO:Initializing create_model()
2024-12-08 17:24:04,434:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:04,434:INFO:Checking exceptions
2024-12-08 17:24:04,434:INFO:Importing libraries
2024-12-08 17:24:04,434:INFO:Copying training dataset
2024-12-08 17:24:04,436:INFO:Defining folds
2024-12-08 17:24:04,436:INFO:Declaring metric variables
2024-12-08 17:24:04,437:INFO:Importing untrained model
2024-12-08 17:24:04,438:INFO:Least Angle Regression Imported successfully
2024-12-08 17:24:04,440:INFO:Starting cross validation
2024-12-08 17:24:04,446:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:04,806:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/metrics/_regression.py:501: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)

2024-12-08 17:24:04,806:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/metrics/_regression.py:501: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)

2024-12-08 17:24:04,806:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/metrics/_regression.py:1196: RuntimeWarning: overflow encountered in square
  numerator = (weight * (y_true - y_pred) ** 2).sum(axis=0, dtype=np.float64)

2024-12-08 17:24:05,042:INFO:Calculating mean and std
2024-12-08 17:24:05,044:WARNING:/opt/anaconda3/lib/python3.11/site-packages/numpy/core/_methods.py:176: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-12-08 17:24:05,044:WARNING:/opt/anaconda3/lib/python3.11/site-packages/numpy/core/_methods.py:173: RuntimeWarning: invalid value encountered in subtract
  x = asanyarray(arr - arrmean)

2024-12-08 17:24:05,044:INFO:Creating metrics dataframe
2024-12-08 17:24:05,045:INFO:Uploading results into container
2024-12-08 17:24:05,045:INFO:Uploading model into container now
2024-12-08 17:24:05,045:INFO:_master_model_container: 5
2024-12-08 17:24:05,045:INFO:_display_container: 2
2024-12-08 17:24:05,046:INFO:Lars(random_state=9)
2024-12-08 17:24:05,046:INFO:create_model() successfully completed......................................
2024-12-08 17:24:05,108:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:05,108:INFO:Creating metrics dataframe
2024-12-08 17:24:05,111:INFO:Initializing Lasso Least Angle Regression
2024-12-08 17:24:05,111:INFO:Total runtime is 0.05640956958134968 minutes
2024-12-08 17:24:05,113:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:05,113:INFO:Initializing create_model()
2024-12-08 17:24:05,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:05,113:INFO:Checking exceptions
2024-12-08 17:24:05,113:INFO:Importing libraries
2024-12-08 17:24:05,113:INFO:Copying training dataset
2024-12-08 17:24:05,115:INFO:Defining folds
2024-12-08 17:24:05,115:INFO:Declaring metric variables
2024-12-08 17:24:05,116:INFO:Importing untrained model
2024-12-08 17:24:05,117:INFO:Lasso Least Angle Regression Imported successfully
2024-12-08 17:24:05,119:INFO:Starting cross validation
2024-12-08 17:24:05,121:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:05,704:INFO:Calculating mean and std
2024-12-08 17:24:05,704:INFO:Creating metrics dataframe
2024-12-08 17:24:05,705:INFO:Uploading results into container
2024-12-08 17:24:05,705:INFO:Uploading model into container now
2024-12-08 17:24:05,706:INFO:_master_model_container: 6
2024-12-08 17:24:05,706:INFO:_display_container: 2
2024-12-08 17:24:05,706:INFO:LassoLars(random_state=9)
2024-12-08 17:24:05,706:INFO:create_model() successfully completed......................................
2024-12-08 17:24:05,768:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:05,768:INFO:Creating metrics dataframe
2024-12-08 17:24:05,771:INFO:Initializing Orthogonal Matching Pursuit
2024-12-08 17:24:05,771:INFO:Total runtime is 0.06740858554840087 minutes
2024-12-08 17:24:05,772:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:05,773:INFO:Initializing create_model()
2024-12-08 17:24:05,773:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:05,773:INFO:Checking exceptions
2024-12-08 17:24:05,773:INFO:Importing libraries
2024-12-08 17:24:05,773:INFO:Copying training dataset
2024-12-08 17:24:05,775:INFO:Defining folds
2024-12-08 17:24:05,775:INFO:Declaring metric variables
2024-12-08 17:24:05,776:INFO:Importing untrained model
2024-12-08 17:24:05,777:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-08 17:24:05,779:INFO:Starting cross validation
2024-12-08 17:24:05,780:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:06,342:INFO:Calculating mean and std
2024-12-08 17:24:06,342:INFO:Creating metrics dataframe
2024-12-08 17:24:06,343:INFO:Uploading results into container
2024-12-08 17:24:06,343:INFO:Uploading model into container now
2024-12-08 17:24:06,344:INFO:_master_model_container: 7
2024-12-08 17:24:06,344:INFO:_display_container: 2
2024-12-08 17:24:06,344:INFO:OrthogonalMatchingPursuit()
2024-12-08 17:24:06,344:INFO:create_model() successfully completed......................................
2024-12-08 17:24:06,406:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:06,406:INFO:Creating metrics dataframe
2024-12-08 17:24:06,410:INFO:Initializing Bayesian Ridge
2024-12-08 17:24:06,410:INFO:Total runtime is 0.07805161873499553 minutes
2024-12-08 17:24:06,411:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:06,411:INFO:Initializing create_model()
2024-12-08 17:24:06,412:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:06,412:INFO:Checking exceptions
2024-12-08 17:24:06,412:INFO:Importing libraries
2024-12-08 17:24:06,412:INFO:Copying training dataset
2024-12-08 17:24:06,413:INFO:Defining folds
2024-12-08 17:24:06,413:INFO:Declaring metric variables
2024-12-08 17:24:06,414:INFO:Importing untrained model
2024-12-08 17:24:06,415:INFO:Bayesian Ridge Imported successfully
2024-12-08 17:24:06,418:INFO:Starting cross validation
2024-12-08 17:24:06,419:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:07,010:INFO:Calculating mean and std
2024-12-08 17:24:07,011:INFO:Creating metrics dataframe
2024-12-08 17:24:07,012:INFO:Uploading results into container
2024-12-08 17:24:07,012:INFO:Uploading model into container now
2024-12-08 17:24:07,012:INFO:_master_model_container: 8
2024-12-08 17:24:07,012:INFO:_display_container: 2
2024-12-08 17:24:07,013:INFO:BayesianRidge()
2024-12-08 17:24:07,013:INFO:create_model() successfully completed......................................
2024-12-08 17:24:07,076:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:07,076:INFO:Creating metrics dataframe
2024-12-08 17:24:07,079:INFO:Initializing Passive Aggressive Regressor
2024-12-08 17:24:07,079:INFO:Total runtime is 0.08920847177505493 minutes
2024-12-08 17:24:07,081:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:07,081:INFO:Initializing create_model()
2024-12-08 17:24:07,081:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:07,081:INFO:Checking exceptions
2024-12-08 17:24:07,081:INFO:Importing libraries
2024-12-08 17:24:07,081:INFO:Copying training dataset
2024-12-08 17:24:07,083:INFO:Defining folds
2024-12-08 17:24:07,083:INFO:Declaring metric variables
2024-12-08 17:24:07,084:INFO:Importing untrained model
2024-12-08 17:24:07,085:INFO:Passive Aggressive Regressor Imported successfully
2024-12-08 17:24:07,087:INFO:Starting cross validation
2024-12-08 17:24:07,088:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:07,828:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-12-08 17:24:07,914:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-12-08 17:24:07,917:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-12-08 17:24:07,950:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-12-08 17:24:07,963:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-12-08 17:24:07,970:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-12-08 17:24:07,980:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-12-08 17:24:08,002:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-12-08 17:24:08,527:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-12-08 17:24:08,585:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-12-08 17:24:08,601:INFO:Calculating mean and std
2024-12-08 17:24:08,602:INFO:Creating metrics dataframe
2024-12-08 17:24:08,603:INFO:Uploading results into container
2024-12-08 17:24:08,603:INFO:Uploading model into container now
2024-12-08 17:24:08,603:INFO:_master_model_container: 9
2024-12-08 17:24:08,603:INFO:_display_container: 2
2024-12-08 17:24:08,603:INFO:PassiveAggressiveRegressor(random_state=9)
2024-12-08 17:24:08,603:INFO:create_model() successfully completed......................................
2024-12-08 17:24:08,666:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:08,666:INFO:Creating metrics dataframe
2024-12-08 17:24:08,669:INFO:Initializing Huber Regressor
2024-12-08 17:24:08,669:INFO:Total runtime is 0.11570806900660197 minutes
2024-12-08 17:24:08,671:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:08,671:INFO:Initializing create_model()
2024-12-08 17:24:08,671:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:08,671:INFO:Checking exceptions
2024-12-08 17:24:08,671:INFO:Importing libraries
2024-12-08 17:24:08,671:INFO:Copying training dataset
2024-12-08 17:24:08,673:INFO:Defining folds
2024-12-08 17:24:08,673:INFO:Declaring metric variables
2024-12-08 17:24:08,674:INFO:Importing untrained model
2024-12-08 17:24:08,675:INFO:Huber Regressor Imported successfully
2024-12-08 17:24:08,677:INFO:Starting cross validation
2024-12-08 17:24:08,678:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:09,268:INFO:Calculating mean and std
2024-12-08 17:24:09,269:INFO:Creating metrics dataframe
2024-12-08 17:24:09,270:INFO:Uploading results into container
2024-12-08 17:24:09,270:INFO:Uploading model into container now
2024-12-08 17:24:09,270:INFO:_master_model_container: 10
2024-12-08 17:24:09,270:INFO:_display_container: 2
2024-12-08 17:24:09,270:INFO:HuberRegressor()
2024-12-08 17:24:09,270:INFO:create_model() successfully completed......................................
2024-12-08 17:24:09,333:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:09,333:INFO:Creating metrics dataframe
2024-12-08 17:24:09,337:INFO:Initializing K Neighbors Regressor
2024-12-08 17:24:09,337:INFO:Total runtime is 0.12682900428771973 minutes
2024-12-08 17:24:09,338:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:09,338:INFO:Initializing create_model()
2024-12-08 17:24:09,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:09,338:INFO:Checking exceptions
2024-12-08 17:24:09,338:INFO:Importing libraries
2024-12-08 17:24:09,338:INFO:Copying training dataset
2024-12-08 17:24:09,340:INFO:Defining folds
2024-12-08 17:24:09,340:INFO:Declaring metric variables
2024-12-08 17:24:09,341:INFO:Importing untrained model
2024-12-08 17:24:09,342:INFO:K Neighbors Regressor Imported successfully
2024-12-08 17:24:09,344:INFO:Starting cross validation
2024-12-08 17:24:09,345:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:09,903:INFO:Calculating mean and std
2024-12-08 17:24:09,903:INFO:Creating metrics dataframe
2024-12-08 17:24:09,904:INFO:Uploading results into container
2024-12-08 17:24:09,905:INFO:Uploading model into container now
2024-12-08 17:24:09,905:INFO:_master_model_container: 11
2024-12-08 17:24:09,905:INFO:_display_container: 2
2024-12-08 17:24:09,905:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-08 17:24:09,905:INFO:create_model() successfully completed......................................
2024-12-08 17:24:09,967:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:09,968:INFO:Creating metrics dataframe
2024-12-08 17:24:09,971:INFO:Initializing Decision Tree Regressor
2024-12-08 17:24:09,971:INFO:Total runtime is 0.13740140199661255 minutes
2024-12-08 17:24:09,972:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:09,973:INFO:Initializing create_model()
2024-12-08 17:24:09,973:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:09,973:INFO:Checking exceptions
2024-12-08 17:24:09,973:INFO:Importing libraries
2024-12-08 17:24:09,973:INFO:Copying training dataset
2024-12-08 17:24:09,974:INFO:Defining folds
2024-12-08 17:24:09,974:INFO:Declaring metric variables
2024-12-08 17:24:09,975:INFO:Importing untrained model
2024-12-08 17:24:09,976:INFO:Decision Tree Regressor Imported successfully
2024-12-08 17:24:09,979:INFO:Starting cross validation
2024-12-08 17:24:09,980:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:10,544:INFO:Calculating mean and std
2024-12-08 17:24:10,544:INFO:Creating metrics dataframe
2024-12-08 17:24:10,545:INFO:Uploading results into container
2024-12-08 17:24:10,545:INFO:Uploading model into container now
2024-12-08 17:24:10,546:INFO:_master_model_container: 12
2024-12-08 17:24:10,546:INFO:_display_container: 2
2024-12-08 17:24:10,546:INFO:DecisionTreeRegressor(random_state=9)
2024-12-08 17:24:10,546:INFO:create_model() successfully completed......................................
2024-12-08 17:24:10,608:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:10,608:INFO:Creating metrics dataframe
2024-12-08 17:24:10,612:INFO:Initializing Random Forest Regressor
2024-12-08 17:24:10,612:INFO:Total runtime is 0.1480930209159851 minutes
2024-12-08 17:24:10,614:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:10,614:INFO:Initializing create_model()
2024-12-08 17:24:10,614:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:10,614:INFO:Checking exceptions
2024-12-08 17:24:10,614:INFO:Importing libraries
2024-12-08 17:24:10,614:INFO:Copying training dataset
2024-12-08 17:24:10,616:INFO:Defining folds
2024-12-08 17:24:10,616:INFO:Declaring metric variables
2024-12-08 17:24:10,617:INFO:Importing untrained model
2024-12-08 17:24:10,618:INFO:Random Forest Regressor Imported successfully
2024-12-08 17:24:10,620:INFO:Starting cross validation
2024-12-08 17:24:10,621:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:11,729:INFO:Calculating mean and std
2024-12-08 17:24:11,730:INFO:Creating metrics dataframe
2024-12-08 17:24:11,731:INFO:Uploading results into container
2024-12-08 17:24:11,731:INFO:Uploading model into container now
2024-12-08 17:24:11,731:INFO:_master_model_container: 13
2024-12-08 17:24:11,731:INFO:_display_container: 2
2024-12-08 17:24:11,731:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:24:11,731:INFO:create_model() successfully completed......................................
2024-12-08 17:24:11,794:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:11,794:INFO:Creating metrics dataframe
2024-12-08 17:24:11,798:INFO:Initializing Extra Trees Regressor
2024-12-08 17:24:11,799:INFO:Total runtime is 0.16786024967829388 minutes
2024-12-08 17:24:11,800:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:11,800:INFO:Initializing create_model()
2024-12-08 17:24:11,800:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:11,800:INFO:Checking exceptions
2024-12-08 17:24:11,800:INFO:Importing libraries
2024-12-08 17:24:11,800:INFO:Copying training dataset
2024-12-08 17:24:11,802:INFO:Defining folds
2024-12-08 17:24:11,802:INFO:Declaring metric variables
2024-12-08 17:24:11,803:INFO:Importing untrained model
2024-12-08 17:24:11,804:INFO:Extra Trees Regressor Imported successfully
2024-12-08 17:24:11,806:INFO:Starting cross validation
2024-12-08 17:24:11,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:12,763:INFO:Calculating mean and std
2024-12-08 17:24:12,764:INFO:Creating metrics dataframe
2024-12-08 17:24:12,764:INFO:Uploading results into container
2024-12-08 17:24:12,765:INFO:Uploading model into container now
2024-12-08 17:24:12,765:INFO:_master_model_container: 14
2024-12-08 17:24:12,765:INFO:_display_container: 2
2024-12-08 17:24:12,765:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:24:12,766:INFO:create_model() successfully completed......................................
2024-12-08 17:24:12,841:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:12,842:INFO:Creating metrics dataframe
2024-12-08 17:24:12,858:INFO:Initializing AdaBoost Regressor
2024-12-08 17:24:12,858:INFO:Total runtime is 0.18551425536473592 minutes
2024-12-08 17:24:12,860:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:12,861:INFO:Initializing create_model()
2024-12-08 17:24:12,861:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:12,861:INFO:Checking exceptions
2024-12-08 17:24:12,861:INFO:Importing libraries
2024-12-08 17:24:12,861:INFO:Copying training dataset
2024-12-08 17:24:12,864:INFO:Defining folds
2024-12-08 17:24:12,864:INFO:Declaring metric variables
2024-12-08 17:24:12,866:INFO:Importing untrained model
2024-12-08 17:24:12,868:INFO:AdaBoost Regressor Imported successfully
2024-12-08 17:24:12,871:INFO:Starting cross validation
2024-12-08 17:24:12,873:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:13,536:INFO:Calculating mean and std
2024-12-08 17:24:13,537:INFO:Creating metrics dataframe
2024-12-08 17:24:13,537:INFO:Uploading results into container
2024-12-08 17:24:13,538:INFO:Uploading model into container now
2024-12-08 17:24:13,538:INFO:_master_model_container: 15
2024-12-08 17:24:13,538:INFO:_display_container: 2
2024-12-08 17:24:13,538:INFO:AdaBoostRegressor(random_state=9)
2024-12-08 17:24:13,538:INFO:create_model() successfully completed......................................
2024-12-08 17:24:13,600:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:13,601:INFO:Creating metrics dataframe
2024-12-08 17:24:13,605:INFO:Initializing Gradient Boosting Regressor
2024-12-08 17:24:13,605:INFO:Total runtime is 0.19796710014343263 minutes
2024-12-08 17:24:13,606:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:13,606:INFO:Initializing create_model()
2024-12-08 17:24:13,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:13,606:INFO:Checking exceptions
2024-12-08 17:24:13,606:INFO:Importing libraries
2024-12-08 17:24:13,607:INFO:Copying training dataset
2024-12-08 17:24:13,608:INFO:Defining folds
2024-12-08 17:24:13,608:INFO:Declaring metric variables
2024-12-08 17:24:13,609:INFO:Importing untrained model
2024-12-08 17:24:13,610:INFO:Gradient Boosting Regressor Imported successfully
2024-12-08 17:24:13,612:INFO:Starting cross validation
2024-12-08 17:24:13,614:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:14,442:INFO:Calculating mean and std
2024-12-08 17:24:14,442:INFO:Creating metrics dataframe
2024-12-08 17:24:14,443:INFO:Uploading results into container
2024-12-08 17:24:14,443:INFO:Uploading model into container now
2024-12-08 17:24:14,443:INFO:_master_model_container: 16
2024-12-08 17:24:14,443:INFO:_display_container: 2
2024-12-08 17:24:14,444:INFO:GradientBoostingRegressor(random_state=9)
2024-12-08 17:24:14,444:INFO:create_model() successfully completed......................................
2024-12-08 17:24:14,507:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:14,507:INFO:Creating metrics dataframe
2024-12-08 17:24:14,511:INFO:Initializing Extreme Gradient Boosting
2024-12-08 17:24:14,511:INFO:Total runtime is 0.21307605107625327 minutes
2024-12-08 17:24:14,513:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:14,513:INFO:Initializing create_model()
2024-12-08 17:24:14,513:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:14,513:INFO:Checking exceptions
2024-12-08 17:24:14,513:INFO:Importing libraries
2024-12-08 17:24:14,513:INFO:Copying training dataset
2024-12-08 17:24:14,515:INFO:Defining folds
2024-12-08 17:24:14,515:INFO:Declaring metric variables
2024-12-08 17:24:14,516:INFO:Importing untrained model
2024-12-08 17:24:14,517:INFO:Extreme Gradient Boosting Imported successfully
2024-12-08 17:24:14,519:INFO:Starting cross validation
2024-12-08 17:24:14,520:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:15,375:INFO:Calculating mean and std
2024-12-08 17:24:15,375:INFO:Creating metrics dataframe
2024-12-08 17:24:15,376:INFO:Uploading results into container
2024-12-08 17:24:15,376:INFO:Uploading model into container now
2024-12-08 17:24:15,377:INFO:_master_model_container: 17
2024-12-08 17:24:15,377:INFO:_display_container: 2
2024-12-08 17:24:15,377:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...)
2024-12-08 17:24:15,378:INFO:create_model() successfully completed......................................
2024-12-08 17:24:15,440:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:15,440:INFO:Creating metrics dataframe
2024-12-08 17:24:15,444:INFO:Initializing Light Gradient Boosting Machine
2024-12-08 17:24:15,444:INFO:Total runtime is 0.22861950397491457 minutes
2024-12-08 17:24:15,445:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:15,446:INFO:Initializing create_model()
2024-12-08 17:24:15,446:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:15,446:INFO:Checking exceptions
2024-12-08 17:24:15,446:INFO:Importing libraries
2024-12-08 17:24:15,446:INFO:Copying training dataset
2024-12-08 17:24:15,447:INFO:Defining folds
2024-12-08 17:24:15,447:INFO:Declaring metric variables
2024-12-08 17:24:15,448:INFO:Importing untrained model
2024-12-08 17:24:15,449:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-08 17:24:15,452:INFO:Starting cross validation
2024-12-08 17:24:15,453:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:18,362:INFO:Calculating mean and std
2024-12-08 17:24:18,363:INFO:Creating metrics dataframe
2024-12-08 17:24:18,364:INFO:Uploading results into container
2024-12-08 17:24:18,364:INFO:Uploading model into container now
2024-12-08 17:24:18,364:INFO:_master_model_container: 18
2024-12-08 17:24:18,364:INFO:_display_container: 2
2024-12-08 17:24:18,364:INFO:LGBMRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:24:18,365:INFO:create_model() successfully completed......................................
2024-12-08 17:24:18,427:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:18,427:INFO:Creating metrics dataframe
2024-12-08 17:24:18,431:INFO:Initializing Dummy Regressor
2024-12-08 17:24:18,431:INFO:Total runtime is 0.2784081220626831 minutes
2024-12-08 17:24:18,433:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:18,433:INFO:Initializing create_model()
2024-12-08 17:24:18,433:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16b12a1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:18,433:INFO:Checking exceptions
2024-12-08 17:24:18,433:INFO:Importing libraries
2024-12-08 17:24:18,433:INFO:Copying training dataset
2024-12-08 17:24:18,435:INFO:Defining folds
2024-12-08 17:24:18,435:INFO:Declaring metric variables
2024-12-08 17:24:18,436:INFO:Importing untrained model
2024-12-08 17:24:18,437:INFO:Dummy Regressor Imported successfully
2024-12-08 17:24:18,439:INFO:Starting cross validation
2024-12-08 17:24:18,440:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:19,005:INFO:Calculating mean and std
2024-12-08 17:24:19,006:INFO:Creating metrics dataframe
2024-12-08 17:24:19,006:INFO:Uploading results into container
2024-12-08 17:24:19,007:INFO:Uploading model into container now
2024-12-08 17:24:19,007:INFO:_master_model_container: 19
2024-12-08 17:24:19,007:INFO:_display_container: 2
2024-12-08 17:24:19,007:INFO:DummyRegressor()
2024-12-08 17:24:19,007:INFO:create_model() successfully completed......................................
2024-12-08 17:24:19,070:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:19,070:INFO:Creating metrics dataframe
2024-12-08 17:24:19,074:WARNING:/opt/anaconda3/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-08 17:24:19,077:INFO:Initializing create_model()
2024-12-08 17:24:19,077:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:19,077:INFO:Checking exceptions
2024-12-08 17:24:19,078:INFO:Importing libraries
2024-12-08 17:24:19,078:INFO:Copying training dataset
2024-12-08 17:24:19,080:INFO:Defining folds
2024-12-08 17:24:19,080:INFO:Declaring metric variables
2024-12-08 17:24:19,080:INFO:Importing untrained model
2024-12-08 17:24:19,080:INFO:Declaring custom model
2024-12-08 17:24:19,080:INFO:Random Forest Regressor Imported successfully
2024-12-08 17:24:19,081:INFO:Cross validation set to False
2024-12-08 17:24:19,081:INFO:Fitting Model
2024-12-08 17:24:19,378:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:24:19,378:INFO:create_model() successfully completed......................................
2024-12-08 17:24:19,442:INFO:Initializing create_model()
2024-12-08 17:24:19,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:19,442:INFO:Checking exceptions
2024-12-08 17:24:19,443:INFO:Importing libraries
2024-12-08 17:24:19,443:INFO:Copying training dataset
2024-12-08 17:24:19,445:INFO:Defining folds
2024-12-08 17:24:19,445:INFO:Declaring metric variables
2024-12-08 17:24:19,445:INFO:Importing untrained model
2024-12-08 17:24:19,445:INFO:Declaring custom model
2024-12-08 17:24:19,445:INFO:Extra Trees Regressor Imported successfully
2024-12-08 17:24:19,446:INFO:Cross validation set to False
2024-12-08 17:24:19,446:INFO:Fitting Model
2024-12-08 17:24:19,718:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:24:19,718:INFO:create_model() successfully completed......................................
2024-12-08 17:24:19,782:INFO:Initializing create_model()
2024-12-08 17:24:19,782:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=GradientBoostingRegressor(random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:19,782:INFO:Checking exceptions
2024-12-08 17:24:19,783:INFO:Importing libraries
2024-12-08 17:24:19,783:INFO:Copying training dataset
2024-12-08 17:24:19,785:INFO:Defining folds
2024-12-08 17:24:19,785:INFO:Declaring metric variables
2024-12-08 17:24:19,785:INFO:Importing untrained model
2024-12-08 17:24:19,785:INFO:Declaring custom model
2024-12-08 17:24:19,786:INFO:Gradient Boosting Regressor Imported successfully
2024-12-08 17:24:19,787:INFO:Cross validation set to False
2024-12-08 17:24:19,787:INFO:Fitting Model
2024-12-08 17:24:20,122:INFO:GradientBoostingRegressor(random_state=9)
2024-12-08 17:24:20,122:INFO:create_model() successfully completed......................................
2024-12-08 17:24:20,194:INFO:_master_model_container: 19
2024-12-08 17:24:20,195:INFO:_display_container: 2
2024-12-08 17:24:20,195:INFO:[RandomForestRegressor(n_jobs=-1, random_state=9), ExtraTreesRegressor(n_jobs=-1, random_state=9), GradientBoostingRegressor(random_state=9)]
2024-12-08 17:24:20,195:INFO:compare_models() successfully completed......................................
2024-12-08 17:24:20,217:INFO:Initializing stack_models()
2024-12-08 17:24:20,217:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator_list=[RandomForestRegressor(n_jobs=-1, random_state=9), ExtraTreesRegressor(n_jobs=-1, random_state=9), GradientBoostingRegressor(random_state=9)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=True, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-12-08 17:24:20,217:INFO:Checking exceptions
2024-12-08 17:24:20,219:INFO:Defining meta model
2024-12-08 17:24:20,226:INFO:Getting model names
2024-12-08 17:24:20,226:INFO:[('Random Forest Regressor', RandomForestRegressor(n_jobs=-1, random_state=9)), ('Extra Trees Regressor', ExtraTreesRegressor(n_jobs=-1, random_state=9)), ('Gradient Boosting Regressor', GradientBoostingRegressor(random_state=9))]
2024-12-08 17:24:20,227:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:20,229:INFO:Initializing create_model()
2024-12-08 17:24:20,229:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3014e3c50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:20,229:INFO:Checking exceptions
2024-12-08 17:24:20,229:INFO:Importing libraries
2024-12-08 17:24:20,229:INFO:Copying training dataset
2024-12-08 17:24:20,232:INFO:Defining folds
2024-12-08 17:24:20,232:INFO:Declaring metric variables
2024-12-08 17:24:20,233:INFO:Importing untrained model
2024-12-08 17:24:20,233:INFO:Declaring custom model
2024-12-08 17:24:20,236:INFO:Stacking Regressor Imported successfully
2024-12-08 17:24:20,238:INFO:Starting cross validation
2024-12-08 17:24:20,240:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:27,140:INFO:Calculating mean and std
2024-12-08 17:24:27,140:INFO:Creating metrics dataframe
2024-12-08 17:24:27,142:INFO:Finalizing model
2024-12-08 17:24:28,342:INFO:Uploading results into container
2024-12-08 17:24:28,343:INFO:Uploading model into container now
2024-12-08 17:24:28,343:INFO:_master_model_container: 20
2024-12-08 17:24:28,344:INFO:_display_container: 3
2024-12-08 17:24:28,346:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1)
2024-12-08 17:24:28,346:INFO:create_model() successfully completed......................................
2024-12-08 17:24:28,411:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:28,411:INFO:choose_better activated
2024-12-08 17:24:28,414:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1) result for R2 is 0.5659
2024-12-08 17:24:28,414:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:28,414:INFO:Initializing create_model()
2024-12-08 17:24:28,414:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:28,414:INFO:Checking exceptions
2024-12-08 17:24:28,415:INFO:Importing libraries
2024-12-08 17:24:28,415:INFO:Copying training dataset
2024-12-08 17:24:28,416:INFO:Defining folds
2024-12-08 17:24:28,416:INFO:Declaring metric variables
2024-12-08 17:24:28,416:INFO:Importing untrained model
2024-12-08 17:24:28,417:INFO:Declaring custom model
2024-12-08 17:24:28,417:INFO:Random Forest Regressor Imported successfully
2024-12-08 17:24:28,417:INFO:Starting cross validation
2024-12-08 17:24:28,418:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:29,542:INFO:Calculating mean and std
2024-12-08 17:24:29,542:INFO:Creating metrics dataframe
2024-12-08 17:24:29,543:INFO:Finalizing model
2024-12-08 17:24:29,841:INFO:Uploading results into container
2024-12-08 17:24:29,841:INFO:Uploading model into container now
2024-12-08 17:24:29,841:INFO:_master_model_container: 21
2024-12-08 17:24:29,841:INFO:_display_container: 4
2024-12-08 17:24:29,841:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:24:29,841:INFO:create_model() successfully completed......................................
2024-12-08 17:24:29,903:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:29,903:INFO:RandomForestRegressor(n_jobs=-1, random_state=9) result for R2 is 0.549
2024-12-08 17:24:29,903:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:29,903:INFO:Initializing create_model()
2024-12-08 17:24:29,903:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:29,903:INFO:Checking exceptions
2024-12-08 17:24:29,904:INFO:Importing libraries
2024-12-08 17:24:29,904:INFO:Copying training dataset
2024-12-08 17:24:29,905:INFO:Defining folds
2024-12-08 17:24:29,905:INFO:Declaring metric variables
2024-12-08 17:24:29,905:INFO:Importing untrained model
2024-12-08 17:24:29,905:INFO:Declaring custom model
2024-12-08 17:24:29,906:INFO:Extra Trees Regressor Imported successfully
2024-12-08 17:24:29,906:INFO:Starting cross validation
2024-12-08 17:24:29,907:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:30,889:INFO:Calculating mean and std
2024-12-08 17:24:30,889:INFO:Creating metrics dataframe
2024-12-08 17:24:30,890:INFO:Finalizing model
2024-12-08 17:24:31,160:INFO:Uploading results into container
2024-12-08 17:24:31,161:INFO:Uploading model into container now
2024-12-08 17:24:31,161:INFO:_master_model_container: 22
2024-12-08 17:24:31,161:INFO:_display_container: 4
2024-12-08 17:24:31,161:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9)
2024-12-08 17:24:31,161:INFO:create_model() successfully completed......................................
2024-12-08 17:24:31,223:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:31,223:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9) result for R2 is 0.5452
2024-12-08 17:24:31,223:INFO:SubProcess create_model() called ==================================
2024-12-08 17:24:31,223:INFO:Initializing create_model()
2024-12-08 17:24:31,223:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=GradientBoostingRegressor(random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:24:31,223:INFO:Checking exceptions
2024-12-08 17:24:31,224:INFO:Importing libraries
2024-12-08 17:24:31,224:INFO:Copying training dataset
2024-12-08 17:24:31,225:INFO:Defining folds
2024-12-08 17:24:31,225:INFO:Declaring metric variables
2024-12-08 17:24:31,225:INFO:Importing untrained model
2024-12-08 17:24:31,225:INFO:Declaring custom model
2024-12-08 17:24:31,225:INFO:Gradient Boosting Regressor Imported successfully
2024-12-08 17:24:31,225:INFO:Starting cross validation
2024-12-08 17:24:31,226:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:24:32,046:INFO:Calculating mean and std
2024-12-08 17:24:32,047:INFO:Creating metrics dataframe
2024-12-08 17:24:32,047:INFO:Finalizing model
2024-12-08 17:24:32,382:INFO:Uploading results into container
2024-12-08 17:24:32,383:INFO:Uploading model into container now
2024-12-08 17:24:32,383:INFO:_master_model_container: 23
2024-12-08 17:24:32,383:INFO:_display_container: 4
2024-12-08 17:24:32,383:INFO:GradientBoostingRegressor(random_state=9)
2024-12-08 17:24:32,383:INFO:create_model() successfully completed......................................
2024-12-08 17:24:32,445:INFO:SubProcess create_model() end ==================================
2024-12-08 17:24:32,445:INFO:GradientBoostingRegressor(random_state=9) result for R2 is 0.5266
2024-12-08 17:24:32,447:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1) is best model
2024-12-08 17:24:32,447:INFO:choose_better completed
2024-12-08 17:24:32,451:INFO:_master_model_container: 23
2024-12-08 17:24:32,451:INFO:_display_container: 3
2024-12-08 17:24:32,453:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1)
2024-12-08 17:24:32,453:INFO:stack_models() successfully completed......................................
2024-12-08 17:24:32,537:INFO:Initializing predict_model()
2024-12-08 17:24:32,537:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b28c5e0>)
2024-12-08 17:24:32,537:INFO:Checking exceptions
2024-12-08 17:24:32,538:INFO:Preloading libraries
2024-12-08 17:24:32,639:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/metrics/_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-08 17:24:32,725:INFO:Initializing plot_model()
2024-12-08 17:24:32,725:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-08 17:24:32,725:INFO:Checking exceptions
2024-12-08 17:24:32,727:INFO:Preloading libraries
2024-12-08 17:24:32,740:INFO:Copying training dataset
2024-12-08 17:24:32,740:INFO:Plot type: residuals
2024-12-08 17:24:32,920:INFO:Fitting Model
2024-12-08 17:24:32,921:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2024-12-08 17:24:32,964:INFO:Scoring test/hold-out set
2024-12-08 17:24:33,117:INFO:Visual Rendered Successfully
2024-12-08 17:24:33,184:INFO:plot_model() successfully completed......................................
2024-12-08 17:24:33,192:INFO:Initializing plot_model()
2024-12-08 17:24:33,192:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b13c0d0>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-08 17:24:33,192:INFO:Checking exceptions
2024-12-08 17:24:33,195:INFO:Preloading libraries
2024-12-08 17:24:33,209:INFO:Copying training dataset
2024-12-08 17:24:33,209:INFO:Plot type: error
2024-12-08 17:24:33,379:INFO:Fitting Model
2024-12-08 17:24:33,379:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2024-12-08 17:24:33,379:INFO:Scoring test/hold-out set
2024-12-08 17:24:33,476:INFO:Visual Rendered Successfully
2024-12-08 17:24:33,543:INFO:plot_model() successfully completed......................................
2024-12-08 17:29:27,679:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 17:29:27,679:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 17:29:27,679:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 17:29:27,679:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 17:29:28,020:INFO:Initializing load_model()
2024-12-08 17:29:28,020:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-12-08 17:29:28,022:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 17:29:28,024:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 17:29:28,024:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 17:29:28,024:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 17:29:28,063:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.2', 'ipywidgets': '8.1.2', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.32.2', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.8.18', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.1', 'IPython': '8.20.0', 'ipywidgets': '7.6.5', 'tqdm': '4.65.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.11.8', 'machine': 'arm64'}}
  warnings.warn(

2024-12-08 18:11:59,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:11:59,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:11:59,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:11:59,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:11:59,933:INFO:Initializing load_model()
2024-12-08 18:11:59,933:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-12-08 18:11:59,934:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:11:59,936:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:11:59,936:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:11:59,937:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:11:59,974:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.2', 'ipywidgets': '8.1.2', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.32.2', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.8.18', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.1', 'IPython': '8.20.0', 'ipywidgets': '7.6.5', 'tqdm': '4.65.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.11.8', 'machine': 'arm64'}}
  warnings.warn(

2024-12-08 18:12:28,864:INFO:Initializing load_model()
2024-12-08 18:12:28,864:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-12-08 18:12:28,865:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:12:28,869:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:12:28,870:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:12:28,870:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:12:28,875:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.2', 'ipywidgets': '8.1.2', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.32.2', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.8.18', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.1', 'IPython': '8.20.0', 'ipywidgets': '7.6.5', 'tqdm': '4.65.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.11.8', 'machine': 'arm64'}}
  warnings.warn(

2024-12-08 18:12:54,846:INFO:Initializing load_model()
2024-12-08 18:12:54,847:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-12-08 18:12:54,849:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:12:54,859:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:12:54,860:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:12:54,861:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:12:54,863:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.2', 'ipywidgets': '8.1.2', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.32.2', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.8.18', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.1', 'IPython': '8.20.0', 'ipywidgets': '7.6.5', 'tqdm': '4.65.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.11.8', 'machine': 'arm64'}}
  warnings.warn(

2024-12-08 18:13:12,268:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:13:12,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:13:12,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:13:12,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:13:12,577:INFO:Initializing load_model()
2024-12-08 18:13:12,578:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-12-08 18:13:12,579:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:13:12,581:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:13:12,581:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:13:12,581:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:13:12,617:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.2', 'ipywidgets': '8.1.2', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.32.2', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.8.18', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.1', 'IPython': '8.20.0', 'ipywidgets': '7.6.5', 'tqdm': '4.65.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.11.8', 'machine': 'arm64'}}
  warnings.warn(

2024-12-08 18:14:05,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:14:05,040:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:14:05,040:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:14:05,040:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:14:05,348:INFO:Initializing load_model()
2024-12-08 18:14:05,349:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-12-08 18:14:05,350:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:14:05,352:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:14:05,352:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:14:05,352:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:14:05,390:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.2', 'ipywidgets': '8.1.2', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.32.2', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.8.18', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.1', 'IPython': '8.20.0', 'ipywidgets': '7.6.5', 'tqdm': '4.65.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.11.8', 'machine': 'arm64'}}
  warnings.warn(

2024-12-08 18:14:57,026:INFO:Initializing load_model()
2024-12-08 18:14:57,026:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-12-08 18:14:57,027:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:14:57,033:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:14:57,034:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:14:57,035:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:14:57,039:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.2', 'ipywidgets': '8.1.2', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.32.2', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.8.18', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.1', 'IPython': '8.20.0', 'ipywidgets': '7.6.5', 'tqdm': '4.65.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.11.8', 'machine': 'arm64'}}
  warnings.warn(

2024-12-08 18:15:51,484:INFO:Initializing load_model()
2024-12-08 18:15:51,484:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-12-08 18:15:51,485:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:15:51,491:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:15:51,492:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:15:51,492:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:15:51,494:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.2', 'ipywidgets': '8.1.2', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.32.2', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.8.18', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.1', 'IPython': '8.20.0', 'ipywidgets': '7.6.5', 'tqdm': '4.65.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.11.8', 'machine': 'arm64'}}
  warnings.warn(

2024-12-08 18:17:58,599:INFO:Initializing load_model()
2024-12-08 18:17:58,601:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-12-08 18:17:58,603:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:17:58,608:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:17:58,609:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:17:58,610:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:17:58,612:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.2', 'ipywidgets': '8.1.2', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.32.2', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.8.18', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.1', 'IPython': '8.20.0', 'ipywidgets': '7.6.5', 'tqdm': '4.65.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.11.8', 'machine': 'arm64'}}
  warnings.warn(

2024-12-08 18:38:14,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:38:14,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:38:14,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:38:14,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 18:38:15,270:INFO:Initializing load_model()
2024-12-08 18:38:15,270:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-12-08 18:38:15,271:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:38:15,274:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:38:15,274:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:38:15,274:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:38:15,311:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.2', 'ipywidgets': '8.1.2', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.32.2', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.8.18', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.1', 'IPython': '8.20.0', 'ipywidgets': '7.6.5', 'tqdm': '4.65.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.11.8', 'machine': 'arm64'}}
  warnings.warn(

2024-12-08 18:40:54,224:INFO:Initializing load_model()
2024-12-08 18:40:54,225:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-12-08 18:40:54,228:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:40:54,247:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:40:54,248:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:40:54,249:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 18:40:54,253:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.2', 'ipywidgets': '8.1.2', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.32.2', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.8.18', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.1', 'IPython': '8.20.0', 'ipywidgets': '7.6.5', 'tqdm': '4.65.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.11.8', 'machine': 'arm64'}}
  warnings.warn(

2024-12-08 21:34:42,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 21:34:42,918:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 21:34:42,918:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 21:34:42,918:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 21:34:43,277:INFO:Initializing load_model()
2024-12-08 21:34:43,277:INFO:load_model(model_name=final_model, platform=None, authentication=None, verbose=True)
2024-12-08 21:34:43,279:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 21:34:43,281:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PolynomialFeatures from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 21:34:43,281:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 21:34:43,281:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.4.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-12-08 21:34:43,318:WARNING:/opt/anaconda3/envs/constructor/lib/python3.8/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.2', 'ipywidgets': '8.1.2', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.32.2', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.8.18', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.1', 'IPython': '8.20.0', 'ipywidgets': '7.6.5', 'tqdm': '4.65.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.2'}, 'python': {'version': '3.11.8', 'machine': 'arm64'}}
  warnings.warn(

